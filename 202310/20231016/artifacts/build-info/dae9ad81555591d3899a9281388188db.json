{
	"id": "dae9ad81555591d3899a9281388188db",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"myNFT.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.8.20;\n\nimport \"./node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\";\ncontract MyNFT is ERC721{\n  constructor(string memory _name,string memory _symbol) ERC721(_name,_symbol){}\n\n//  mapping(uint256 token_id=>string tokenuri) _tokenuris;\n    mapping(uint256 => string) private _tokenURIs;\n\n\n  function minting(uint256 _tokenId,string memory tokenURI) public{\n   _tokenURIs[_tokenId] = tokenURI;\n      _mint(msg.sender,_tokenId);\n  }\n\n     function tokenURI(uint256 _tokenId) public view override returns (string memory) {\n        return _tokenURIs[_tokenId];\n    }\n\n    function urlmaker(string memory  _url) public view returns (string memory) {\n        string memory baseURI = _baseURI();\n        return string(abi.encodePacked(baseURI, _url));\n    }\n  function _baseURI()internal view override returns (string memory){\n    return \"https://coral-dear-gibbon-930.mypinata.cloud/ipfs/\";\n  }\n\n\n// NFT에 관련된 메서드는 여기에\n// NFT의 판매 권한을 줄 함수를 여기에 작성을해서 \n    function setAppAll(address owner, address operator, bool approved) public {\n        _setApprovalForAll(owner, operator, approved);\n    }\n\n  // NFT의 \n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // 토큰의 소유자 권한\n    // ERC 20 \n    // {\n    //     \"0x123123123\":100\n    // }\n    // // ERC 721 \n\n    // {\n\n    //     1:\"0x123123\",\n    //     2:\"0x123\",\n    //     3:\"0x123\",\n    // }\n    uint256 public _totalsupply;\n    mapping(uint256 tokenId => address) private _owners;\n\n    // 지갑이 소유한 NFT 몇개있는지 내용을 담을 mapping 객체\n    // 0x123123 이 지갑이 소유하고있는 NFT 몇개 있는지.\n    mapping(address owner => uint256) private _balances;\n\n    // 지갑이 위임받은 토큰의 주소\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    // 지갑이 토큰의 권한을 받은 내용이 승인되었는지 여부\n    /*   \n    {\n        \n    }  \n    */\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _totalsupply=0;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n     // 인터페이스 내용을 확인 ERC721의 표준을 맞춰서 NFT를 발행했는지 검증\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n     // 지갑의 주솔르 가지고 NFT 몇개 발행했는지 조회하는 함수\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n\nfunction msgsenderOwntoken(address owner) public view returns (uint256[] memory) {\n    uint256[] memory arr = new uint256[](_totalsupply); // NFT 전체 개수에 맞게 배열 초기화\n\n    uint256 index = 0;\n    for (uint256 i = 0; i < _totalsupply; i++) {\n        if (owner == ownerOf(i)) {\n            arr[index] = i;\n            index++;\n        }\n    }\n    \n    // 실제 사용되는 배열 크기에 맞게 다시 크기 조절\n    uint256[] memory result = new uint256[](index);\n    for (uint256 i = 0; i < index; i++) {\n        result[i] = arr[i];\n    }\n\n    return result;\n}\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n     // 토큰의 아아디를 매개변수로 받아서 토큰의 ID로 매핑되는 주소를 확인해서 \n     // 토큰의 소유자가 누구인지 반환하는 함수.\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n     // NFT의 이름을 반환하는 함수\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    // 예)\n    // ipfsdp 업로드한 파일의 주소 (해시값)\n    // const imgarr:[\"첫버쨰 해시값\",\"두번쨰 해시값\"]\n     // https://nft01/imgarr[token]\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n     // 어떤 내용의객체를 보여주는지 확인을 할때\n     // 경로 디폴트 경로가 뭔지를 지정해놓고 _baseURI 함수로 호출해서\n     // 디폴트 경로를 넣어주고\n     // 예)\n     // https://nft01/\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n    \n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n        _totalsupply++;\n    }\n    function showtotalsupply() public view returns(uint256 ){\n        return _totalsupply;\n    }\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"myNFT.sol": {
				"MyNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_totalsupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "minting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "msgsenderOwntoken",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setAppAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showtotalsupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_url",
									"type": "string"
								}
							],
							"name": "urlmaker",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"myNFT.sol\":129:1218  contract MyNFT is ERC721{... */\n  mstore(0x40, 0x80)\n    /* \"myNFT.sol\":157:235  constructor(string memory _name,string memory _symbol) ERC721(_name,_symbol){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"myNFT.sol\":219:224  _name */\n  dup2\n    /* \"myNFT.sol\":225:232  _symbol */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2009:2014  name_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2006  _name */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2014  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2034:2041  symbol_ */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2024:2031  _symbol */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2024:2041  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2064:2065  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2051:2063  _totalsupply */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2051:2065  _totalsupply=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1935:2072  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"myNFT.sol\":157:235  constructor(string memory _name,string memory _symbol) ERC721(_name,_symbol){} */\n  pop\n  pop\n    /* \"myNFT.sol\":129:1218  contract MyNFT is ERC721{... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_22:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_64:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_23:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_68\n    /* \"#utility.yul\":1992:2041   */\n  tag_69\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1976:2042   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_71\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2229   */\ntag_70:\n    /* \"#utility.yul\":2238:2290   */\n  tag_72\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_24:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_75\n  tag_15\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2399:2521   */\ntag_74:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_76\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_79\n  tag_13\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2801:2920   */\ntag_78:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2996:3113   */\ntag_80:\n    /* \"#utility.yul\":3137:3211   */\n  tag_82\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_84\n  tag_14\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3298:3415   */\ntag_83:\n    /* \"#utility.yul\":3439:3513   */\n  tag_85\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_24\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_25:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_26:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_27:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_89:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_91\n  tag_26\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4057:4141   */\ntag_90:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_28:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_29:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_30:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_31:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_96\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4772:4811   */\n  tag_97\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_32:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_33:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_34:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_101\n    /* \"#utility.yul\":5161:5195   */\n  tag_102\n    /* \"#utility.yul\":5170:5194   */\n  tag_103\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5161:5195   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5143:5196   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_35:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_36:\n    /* \"#utility.yul\":5399:5438   */\n  tag_106\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5460:5551   */\n  tag_107\n    /* \"#utility.yul\":5509:5550   */\n  tag_108\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_31\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_37:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_38:\n    /* \"#utility.yul\":5720:5752   */\n  tag_111\n  tag_37\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5761:5826   */\n  tag_112\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_39:\n    /* \"#utility.yul\":5898:6018   */\ntag_114:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_117\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_40:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_120\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_28\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6249:6278   */\n  tag_121\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_122:\n    /* \"#utility.yul\":6476:6556   */\n  tag_123\n    /* \"#utility.yul\":6532:6554   */\n  tag_124\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_29\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_119:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_41:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_42:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_127\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_41\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_43:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_129\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_131\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_25\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_133\n  tag_18\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7381:7437   */\ntag_132:\n    /* \"#utility.yul\":7461:7499   */\n  tag_134\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_27\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7546:7613   */\n  tag_135\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_40\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_137\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_138:\n    /* \"#utility.yul\":8487:8554   */\n  tag_139\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_43\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_136)\n    /* \"#utility.yul\":7708:8326   */\ntag_137:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_140\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_28\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_141:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_145\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_42\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_144:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_136:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"myNFT.sol\":129:1218  contract MyNFT is ERC721{... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"myNFT.sol\":129:1218  contract MyNFT is ERC721{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xabec7101\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xabec7101\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe2c4c4b2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x828e7a01\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa393dc44\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x1b00fd16\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x1b00fd16\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x29d6724e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2240:2540  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3938:4027  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5477:5631  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5303:5416  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"myNFT.sol\":628:810  function urlmaker(string memory  _url) public view returns (string memory) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6123:6701  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"myNFT.sol\":1066:1202  function setAppAll(address owner, address operator, bool approved) public {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6767:6899  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3713:3831  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2684:2892  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2895:3481  function msgsenderOwntoken(address owner) public view returns (uint256[] memory) {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4091:4184  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5698:5842  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1197:1224  uint256 public _totalsupply */\n    tag_16:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12295:12387  function showtotalsupply() public view returns(uint256 ){... */\n    tag_17:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6965:7173  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_18:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      stop\n        /* \"myNFT.sol\":497:622  function tokenURI(uint256 _tokenId) public view override returns (string memory) {... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"myNFT.sol\":351:490  function minting(uint256 _tokenId,string memory tokenURI) public{... */\n    tag_20:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5908:6061  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_21:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2240:2540  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_28:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2342:2346  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2392:2417  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2417  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2388  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2417  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2481  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2448:2481  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2433:2481  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2433:2444  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2433:2481  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2481  interfaceId == type(IERC721).interfaceId ||... */\n    tag_107:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2533  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2497:2533  super.supportsInterface(interfaceId) */\n      tag_109\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2521:2532  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2497:2520  super.supportsInterface */\n      tag_110\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2497:2533  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_109:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2533  interfaceId == type(IERC721).interfaceId ||... */\n    tag_108:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2358:2533  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2240:2540  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3938:4027  function name() public view virtual returns (string memory) {... */\n    tag_32:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3983:3996  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4015:4020  _name */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4008:4020  return _name */\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_113\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3938:4027  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5477:5631  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_38:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5544:5551  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5563:5585  _requireOwned(tokenId) */\n      tag_119\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5577:5584  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5563:5576  _requireOwned */\n      tag_120\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5563:5585  _requireOwned(tokenId) */\n      jump\t// in\n    tag_119:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5603:5624  _getApproved(tokenId) */\n      tag_121\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5616:5623  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5603:5615  _getApproved */\n      tag_122\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5603:5624  _getApproved(tokenId) */\n      jump\t// in\n    tag_121:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5596:5624  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5477:5631  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5303:5416  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_44:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5374:5409  _approve(to, tokenId, _msgSender()) */\n      tag_124\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5383:5385  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5387:5394  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5396:5408  _msgSender() */\n      tag_125\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5396:5406  _msgSender */\n      tag_126\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5396:5408  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5374:5382  _approve */\n      tag_127\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5374:5409  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_124:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5303:5416  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":628:810  function urlmaker(string memory  _url) public view returns (string memory) {... */\n    tag_48:\n        /* \"myNFT.sol\":688:701  string memory */\n      0x60\n        /* \"myNFT.sol\":713:734  string memory baseURI */\n      0x00\n        /* \"myNFT.sol\":737:747  _baseURI() */\n      tag_129\n        /* \"myNFT.sol\":737:745  _baseURI */\n      tag_130\n        /* \"myNFT.sol\":737:747  _baseURI() */\n      jump\t// in\n    tag_129:\n        /* \"myNFT.sol\":713:747  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"myNFT.sol\":788:795  baseURI */\n      dup1\n        /* \"myNFT.sol\":797:801  _url */\n      dup4\n        /* \"myNFT.sol\":771:802  abi.encodePacked(baseURI, _url) */\n      add(0x20, mload(0x40))\n      tag_131\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"myNFT.sol\":757:803  return string(abi.encodePacked(baseURI, _url)) */\n      swap2\n      pop\n      pop\n        /* \"myNFT.sol\":628:810  function urlmaker(string memory  _url) public view returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6123:6701  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_53:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6231:6232  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6217:6233  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6217:6219  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6217:6233  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6213:6300  if (to == address(0)) {... */\n      tag_134\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6286:6287  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6256:6289  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6213:6300  if (to == address(0)) {... */\n    tag_134:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6518:6539  address previousOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6542:6576  _update(to, tokenId, _msgSender()) */\n      tag_136\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6550:6552  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6554:6561  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6563:6575  _msgSender() */\n      tag_137\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6563:6573  _msgSender */\n      tag_126\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6563:6575  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6542:6549  _update */\n      tag_138\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6542:6576  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_136:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6518:6576  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6607:6611  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6611  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6603  previousOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6611  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6586:6695  if (previousOwner != from) {... */\n      tag_139\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6655:6659  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6661:6668  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6670:6683  previousOwner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6634:6684  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6586:6695  if (previousOwner != from) {... */\n    tag_139:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6203:6701  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6123:6701  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":1066:1202  function setAppAll(address owner, address operator, bool approved) public {... */\n    tag_57:\n        /* \"myNFT.sol\":1150:1195  _setApprovalForAll(owner, operator, approved) */\n      tag_143\n        /* \"myNFT.sol\":1169:1174  owner */\n      dup4\n        /* \"myNFT.sol\":1176:1184  operator */\n      dup4\n        /* \"myNFT.sol\":1186:1194  approved */\n      dup4\n        /* \"myNFT.sol\":1150:1168  _setApprovalForAll */\n      tag_144\n        /* \"myNFT.sol\":1150:1195  _setApprovalForAll(owner, operator, approved) */\n      jump\t// in\n    tag_143:\n        /* \"myNFT.sol\":1066:1202  function setAppAll(address owner, address operator, bool approved) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6767:6899  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_60:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6853:6892  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_146\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6870:6874  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6876:6878  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6880:6887  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6853:6892  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6853:6869  safeTransferFrom */\n      tag_92\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6853:6892  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_146:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6767:6899  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3713:3831  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_63:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3776:3783  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3824  _requireOwned(tokenId) */\n      tag_148\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3816:3823  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3815  _requireOwned */\n      tag_120\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3824  _requireOwned(tokenId) */\n      jump\t// in\n    tag_148:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3795:3824  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3713:3831  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2684:2892  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2747:2754  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2787:2788  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2770:2789  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2770:2775  owner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2770:2789  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2853  if (owner == address(0)) {... */\n      tag_150\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2839:2840  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2812:2842  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2853  if (owner == address(0)) {... */\n    tag_150:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2869:2878  _balances */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2869:2885  _balances[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2879:2884  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2869:2885  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2862:2885  return _balances[owner] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2684:2892  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2895:3481  function msgsenderOwntoken(address owner) public view returns (uint256[] memory) {... */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2958:2974  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2982:3002  uint256[] memory arr */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3031  _totalsupply */\n      sload(0x02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3005:3032  new uint256[](_totalsupply) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_153\n      jumpi\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n    tag_153:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_156\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_156:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2982:3032  uint256[] memory arr = new uint256[](_totalsupply) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3087:3100  uint256 index */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3124  uint256 i */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3110:3254  for (uint256 i = 0; i < _totalsupply; i++) {... */\n    tag_157:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3134:3146  _totalsupply */\n      sload(0x02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3130:3131  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3130:3146  i < _totalsupply */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3110:3254  for (uint256 i = 0; i < _totalsupply; i++) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3176:3186  ownerOf(i) */\n      tag_160\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3184:3185  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3176:3183  ownerOf */\n      tag_63\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3176:3186  ownerOf(i) */\n      jump\t// in\n    tag_160:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3167:3186  owner == ownerOf(i) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3167:3172  owner */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3167:3186  owner == ownerOf(i) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3163:3248  if (owner == ownerOf(i)) {... */\n      tag_161\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3215:3216  i */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3202:3205  arr */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3206:3211  index */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3202:3212  arr[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n    tag_162:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3202:3216  arr[index] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3230:3237  index++ */\n      dup2\n      dup1\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3163:3248  if (owner == ownerOf(i)) {... */\n    tag_161:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3148:3151  i++ */\n      dup1\n      dup1\n      tag_167\n      swap1\n      tag_166\n      jump\t// in\n    tag_167:\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3110:3254  for (uint256 i = 0; i < _totalsupply; i++) {... */\n      jump(tag_157)\n    tag_158:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3336:3359  uint256[] memory result */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3376:3381  index */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3362:3382  new uint256[](index) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_168\n      jumpi\n      tag_169\n      tag_155\n      jump\t// in\n    tag_169:\n    tag_168:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_170:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3336:3382  uint256[] memory result = new uint256[](index) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3402  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3388:3459  for (uint256 i = 0; i < index; i++) {... */\n    tag_171:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3412:3417  index */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3408:3409  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3408:3417  i < index */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3388:3459  for (uint256 i = 0; i < index; i++) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3446:3449  arr */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3450:3451  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3446:3452  arr[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_175\n      tag_164\n      jump\t// in\n    tag_175:\n    tag_174:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3434:3440  result */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3441:3442  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3434:3443  result[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_177\n      tag_164\n      jump\t// in\n    tag_177:\n    tag_176:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3434:3452  result[i] = arr[i] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3419:3422  i++ */\n      dup1\n      dup1\n      tag_178\n      swap1\n      tag_166\n      jump\t// in\n    tag_178:\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3388:3459  for (uint256 i = 0; i < index; i++) {... */\n      jump(tag_171)\n    tag_172:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3472:3478  result */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3465:3478  return result */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2895:3481  function msgsenderOwntoken(address owner) public view returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4091:4184  function symbol() public view virtual returns (string memory) {... */\n    tag_77:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4138:4151  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4170:4177  _symbol */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4163:4177  return _symbol */\n      dup1\n      sload\n      tag_180\n      swap1\n      tag_113\n      jump\t// in\n    tag_180:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_113\n      jump\t// in\n    tag_181:\n      dup1\n      iszero\n      tag_182\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_183\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_182)\n    tag_183:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_184:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_184\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4091:4184  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5698:5842  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_82:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5783:5835  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_186\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5802:5814  _msgSender() */\n      tag_187\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5802:5812  _msgSender */\n      tag_126\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5802:5814  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5816:5824  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5826:5834  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5783:5801  _setApprovalForAll */\n      tag_144\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5783:5835  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_186:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5698:5842  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1197:1224  uint256 public _totalsupply */\n    tag_84:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12295:12387  function showtotalsupply() public view returns(uint256 ){... */\n    tag_87:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12342:12349  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12368:12380  _totalsupply */\n      sload(0x02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12361:12380  return _totalsupply */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12295:12387  function showtotalsupply() public view returns(uint256 ){... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6965:7173  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_92:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7078:7109  transferFrom(from, to, tokenId) */\n      tag_190\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7091:7095  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7097:7099  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7101:7108  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7078:7090  transferFrom */\n      tag_53\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7078:7109  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_190:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7119:7166  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_191\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7142:7146  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7148:7150  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7152:7159  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7161:7165  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7119:7141  _checkOnERC721Received */\n      tag_192\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7119:7166  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_191:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6965:7173  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":497:622  function tokenURI(uint256 _tokenId) public view override returns (string memory) {... */\n    tag_95:\n        /* \"myNFT.sol\":563:576  string memory */\n      0x60\n        /* \"myNFT.sol\":595:605  _tokenURIs */\n      0x07\n        /* \"myNFT.sol\":595:615  _tokenURIs[_tokenId] */\n      0x00\n        /* \"myNFT.sol\":606:614  _tokenId */\n      dup4\n        /* \"myNFT.sol\":595:615  _tokenURIs[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":588:615  return _tokenURIs[_tokenId] */\n      dup1\n      sload\n      tag_194\n      swap1\n      tag_113\n      jump\t// in\n    tag_194:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_195\n      swap1\n      tag_113\n      jump\t// in\n    tag_195:\n      dup1\n      iszero\n      tag_196\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_197\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_196)\n    tag_197:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_198:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_198\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"myNFT.sol\":497:622  function tokenURI(uint256 _tokenId) public view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":351:490  function minting(uint256 _tokenId,string memory tokenURI) public{... */\n    tag_100:\n        /* \"myNFT.sol\":443:451  tokenURI */\n      dup1\n        /* \"myNFT.sol\":420:430  _tokenURIs */\n      0x07\n        /* \"myNFT.sol\":420:440  _tokenURIs[_tokenId] */\n      0x00\n        /* \"myNFT.sol\":431:439  _tokenId */\n      dup5\n        /* \"myNFT.sol\":420:440  _tokenURIs[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":420:451  _tokenURIs[_tokenId] = tokenURI */\n      swap1\n      dup2\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      pop\n        /* \"myNFT.sol\":459:485  _mint(msg.sender,_tokenId) */\n      tag_202\n        /* \"myNFT.sol\":465:475  msg.sender */\n      caller\n        /* \"myNFT.sol\":476:484  _tokenId */\n      dup4\n        /* \"myNFT.sol\":459:464  _mint */\n      tag_203\n        /* \"myNFT.sol\":459:485  _mint(msg.sender,_tokenId) */\n      jump\t// in\n    tag_202:\n        /* \"myNFT.sol\":351:490  function minting(uint256 _tokenId,string memory tokenURI) public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5908:6061  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_104:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5996:6000  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6019:6037  _operatorApprovals */\n      0x06\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6019:6044  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6038:6043  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6019:6044  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6019:6054  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6045:6053  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6019:6054  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6012:6054  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5908:6061  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_110:\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18242:18483  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_120:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18305:18312  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18324:18337  address owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18340:18357  _ownerOf(tokenId) */\n      tag_207\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18349:18356  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18340:18348  _ownerOf */\n      tag_208\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18340:18357  _ownerOf(tokenId) */\n      jump\t// in\n    tag_207:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18324:18357  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18388:18389  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18371:18390  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18371:18376  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18371:18390  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18367:18455  if (owner == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18436:18443  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18413:18444  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18367:18455  if (owner == address(0)) {... */\n    tag_209:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18471:18476  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18464:18476  return owner */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18242:18483  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7918:8045  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_122:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7988:7995  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8014:8029  _tokenApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8014:8038  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8030:8037  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8014:8038  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8007:8038  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7918:8045  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_126:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16522:16642  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_127:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16602:16635  _approve(to, tokenId, auth, true) */\n      tag_214\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16611:16613  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16615:16622  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16624:16628  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16630:16634  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16602:16610  _approve */\n      tag_215\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16602:16635  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_214:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16522:16642  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":813:948  function _baseURI()internal view override returns (string memory){... */\n    tag_130:\n        /* \"myNFT.sol\":864:877  string memory */\n      0x60\n        /* \"myNFT.sol\":884:943  return \"https://coral-dear-gibbon-930.mypinata.cloud/ipfs/\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      data_d1f8d88b6e34b43596d2de84a0185752a3add6e83a91b900a9741f09edc98ffe\n      0x32\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"myNFT.sol\":813:948  function _baseURI()internal view override returns (string memory){... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10822:11617  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_138:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10908:10915  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10939  address from */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10942:10959  _ownerOf(tokenId) */\n      tag_218\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10951:10958  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10942:10950  _ownerOf */\n      tag_208\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10942:10959  _ownerOf(tokenId) */\n      jump\t// in\n    tag_218:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10959  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11035:11036  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11019:11037  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11019:11023  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11019:11037  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11015:11101  if (auth != address(0)) {... */\n      tag_219\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11053:11090  _checkAuthorized(from, auth, tokenId) */\n      tag_220\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11070:11074  from */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11080  auth */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11082:11089  tokenId */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11053:11069  _checkAuthorized */\n      tag_221\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11053:11090  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_220:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11015:11101  if (auth != address(0)) {... */\n    tag_219:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11161:11162  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11145:11163  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11145:11149  from */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11145:11163  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11141:11397  if (from != address(0)) {... */\n      tag_222\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11261:11309  _approve(address(0), tokenId, address(0), false) */\n      tag_223\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11278:11279  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11282:11289  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11299:11300  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11303:11308  false */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11261:11269  _approve */\n      tag_215\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11261:11309  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_223:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11371:11372  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11352:11361  _balances */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11352:11367  _balances[from] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11362:11366  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11352:11367  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11352:11372  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11141:11397  if (from != address(0)) {... */\n    tag_222:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11425:11426  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11411:11427  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11411:11413  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11411:11427  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11407:11514  if (to != address(0)) {... */\n      tag_224\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11488:11489  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11471:11480  _balances */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11471:11484  _balances[to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11481:11483  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11471:11484  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11471:11489  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11407:11514  if (to != address(0)) {... */\n    tag_224:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11543:11545  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11524:11531  _owners */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11524:11540  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11532:11539  tokenId */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11524:11540  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11524:11545  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11580:11587  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11576:11578  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11561:11588  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11570:11574  from */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11561:11588  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11606:11610  from */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11599:11610  return from */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10822:11617  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17695:18007  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_144:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17822:17823  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17802:17824  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17802:17810  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17802:17824  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17798:17889  if (operator == address(0)) {... */\n      tag_226\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17869:17877  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17847:17878  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17798:17889  if (operator == address(0)) {... */\n    tag_226:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17936:17944  approved */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17898:17916  _operatorApprovals */\n      0x06\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17898:17923  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17917:17922  owner */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17898:17923  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17898:17933  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17924:17932  operator */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17898:17933  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17898:17944  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17981:17989  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17959:18000  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17974:17979  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17959:18000  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17991:17999  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17959:18000  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17695:18007  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19022:19804  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_192:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19155:19156  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19138:19140  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19138:19152  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19138:19156  to.code.length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19134:19798  if (to.code.length > 0) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19192:19194  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19176:19212  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19213:19225  _msgSender() */\n      tag_231\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19213:19223  _msgSender */\n      tag_126\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19213:19225  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19227:19231  from */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19233:19240  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19242:19246  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19176:19247  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_235\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      0x01\n    tag_234:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19172:19788  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_237\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_242\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_241)\n    tag_242:\n      0x60\n      swap2\n      pop\n    tag_241:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19502:19503  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19485:19491  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19485:19498  reason.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19485:19503  reason.length == 0 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19481:19774  if (reason.length == 0) {... */\n      tag_243\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19556:19558  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19534:19559  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19481:19774  if (reason.length == 0) {... */\n    tag_243:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19726:19732  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19720:19733  mload(reason) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19711:19717  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19707:19709  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19703:19718  add(32, reason) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19696:19734  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19172:19788  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_237:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19304:19345  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19294:19345  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19294:19300  retval */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19294:19345  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19290:19420  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_247\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19398:19400  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19376:19401  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19290:19420  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_247:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19248:19434  returns (bytes4 retval) {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19134:19798  if (to.code.length > 0) {... */\n    tag_230:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19022:19804  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11939:12290  function _mint(address to, uint256 tokenId) internal {... */\n    tag_203:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12020:12021  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12006:12022  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12006:12008  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12006:12022  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12002:12089  if (to == address(0)) {... */\n      tag_250\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12075:12076  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12045:12078  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12002:12089  if (to == address(0)) {... */\n    tag_250:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12119  address previousOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12122:12154  _update(to, tokenId, address(0)) */\n      tag_252\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12130:12132  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12134:12141  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12151:12152  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12122:12129  _update */\n      tag_138\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12122:12154  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_252:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12154  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12193:12194  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12168:12195  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12168:12181  previousOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12168:12195  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12164:12260  if (previousOwner != address(0)) {... */\n      tag_253\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12246:12247  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12218:12249  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12164:12260  if (previousOwner != address(0)) {... */\n    tag_253:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12269:12281  _totalsupply */\n      0x02\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12269:12283  _totalsupply++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_255\n      swap1\n      tag_166\n      jump\t// in\n    tag_255:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11992:12290  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11939:12290  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7687:7802  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_208:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7753:7760  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7779:7786  _owners */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7779:7795  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7787:7794  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7779:7795  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7772:7795  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7687:7802  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16824:17486  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_215:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16984:16993  emitEvent */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16984:17015  emitEvent || auth != address(0) */\n      dup1\n      tag_258\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17013:17014  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16997:17015  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16997:17001  auth */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16997:17015  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16984:17015  emitEvent || auth != address(0) */\n    tag_258:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16980:17440  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17031:17044  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17047:17069  _requireOwned(tokenId) */\n      tag_260\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17061:17068  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17047:17060  _requireOwned */\n      tag_120\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17047:17069  _requireOwned(tokenId) */\n      jump\t// in\n    tag_260:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17031:17069  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17213:17214  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17197:17215  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17197:17201  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17197:17215  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17197:17232  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_261\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17228:17232  auth */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17219:17232  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17219:17224  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17219:17232  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17197:17232  auth != address(0) && owner != auth */\n    tag_261:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17197:17266  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_262\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17237:17266  isApprovedForAll(owner, auth) */\n      tag_263\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17254:17259  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17261:17265  auth */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17237:17253  isApprovedForAll */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17237:17266  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_263:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17236:17266  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17197:17266  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_262:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17193:17335  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17315:17319  auth */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17293:17320  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17193:17335  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_264:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17353:17362  emitEvent */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17349:17430  if (emitEvent) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17407:17414  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17403:17405  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17387:17415  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17396:17401  owner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17387:17415  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17349:17430  if (emitEvent) {... */\n    tag_266:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17017:17440  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16980:17440  if (emitEvent || auth != address(0)) {... */\n    tag_259:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17477:17479  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17450:17465  _tokenApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17450:17474  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17466:17473  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17450:17474  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17450:17479  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16824:17486  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9062:9430  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_221:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9174:9212  _isAuthorized(owner, spender, tokenId) */\n      tag_268\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9188:9193  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9195:9202  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9204:9211  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9174:9187  _isAuthorized */\n      tag_269\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9174:9212  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_268:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9169:9424  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_270\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9249:9250  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9232:9251  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9232:9237  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9232:9251  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9228:9414  if (owner == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9301:9308  tokenId */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9278:9309  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9228:9414  if (owner == address(0)) {... */\n    tag_271:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9382:9389  spender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9398  tokenId */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9355:9399  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9169:9424  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_270:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9062:9430  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8356:8628  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_269:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8459:8463  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8513:8514  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8494:8515  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8494:8501  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8494:8515  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8494:8621  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_277\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8541:8548  spender */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8532:8548  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8532:8537  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8532:8548  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8532:8584  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_278\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8552:8584  isApprovedForAll(owner, spender) */\n      tag_279\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8569:8574  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8576:8583  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8552:8568  isApprovedForAll */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8552:8584  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_279:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8532:8584  owner == spender || isApprovedForAll(owner, spender) */\n    tag_278:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8532:8620  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_280\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8613:8620  spender */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8588:8620  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8588:8609  _getApproved(tokenId) */\n      tag_281\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8601:8608  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8588:8600  _getApproved */\n      tag_122\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8588:8609  _getApproved(tokenId) */\n      jump\t// in\n    tag_281:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8588:8620  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8532:8620  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_280:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8494:8621  spender != address(0) &&... */\n    tag_277:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8475:8621  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8356:8628  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_282:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_283:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_284:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_285:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_286:\n        /* \"#utility.yul\":561:584   */\n      tag_353\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_285\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_354:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_287:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_356\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_286\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_359\n      tag_283\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":833:952   */\n    tag_358:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_360\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_287\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_288:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_289:\n        /* \"#utility.yul\":1268:1289   */\n      tag_363\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_288\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_365\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_289\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_290:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_291:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_292:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_369:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_369)\n    tag_371:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_293:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_294:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_374\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_290\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2329:2400   */\n      tag_375\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_291\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_376\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_292\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2499:2528   */\n      tag_377\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_293\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_34:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_379\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_294\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_295:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_296:\n        /* \"#utility.yul\":3016:3040   */\n      tag_382\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_295\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_383:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_297:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_385\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_296\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_37:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_388\n      tag_283\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3292:3411   */\n    tag_387:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_389\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_297\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_298:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_299:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_392\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_298\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_300:\n        /* \"#utility.yul\":3872:3896   */\n      tag_394\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_299\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_40:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_396\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_300\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_301:\n        /* \"#utility.yul\":4210:4234   */\n      tag_398\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_299\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_399:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_302:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_401\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_301\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_43:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_404\n      tag_283\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4503:4622   */\n    tag_403:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_405\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_302\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_406\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_297\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_303:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5130   */\n    tag_304:\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5119:5120   */\n      dup1\n        /* \"#utility.yul\":5112:5124   */\n      revert\n        /* \"#utility.yul\":5136:5316   */\n    tag_155:\n        /* \"#utility.yul\":5184:5261   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5174:5262   */\n      mstore\n        /* \"#utility.yul\":5281:5285   */\n      0x41\n        /* \"#utility.yul\":5278:5279   */\n      0x04\n        /* \"#utility.yul\":5271:5286   */\n      mstore\n        /* \"#utility.yul\":5305:5309   */\n      0x24\n        /* \"#utility.yul\":5302:5303   */\n      0x00\n        /* \"#utility.yul\":5295:5310   */\n      revert\n        /* \"#utility.yul\":5322:5603   */\n    tag_305:\n        /* \"#utility.yul\":5405:5432   */\n      tag_411\n        /* \"#utility.yul\":5427:5431   */\n      dup3\n        /* \"#utility.yul\":5405:5432   */\n      tag_293\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5397:5403   */\n      dup2\n        /* \"#utility.yul\":5393:5433   */\n      add\n        /* \"#utility.yul\":5535:5541   */\n      dup2\n        /* \"#utility.yul\":5523:5533   */\n      dup2\n        /* \"#utility.yul\":5520:5542   */\n      lt\n        /* \"#utility.yul\":5499:5517   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5487:5497   */\n      dup3\n        /* \"#utility.yul\":5484:5518   */\n      gt\n        /* \"#utility.yul\":5481:5543   */\n      or\n        /* \"#utility.yul\":5478:5566   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":5546:5564   */\n      tag_413\n      tag_155\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5478:5566   */\n    tag_412:\n        /* \"#utility.yul\":5586:5596   */\n      dup1\n        /* \"#utility.yul\":5582:5584   */\n      0x40\n        /* \"#utility.yul\":5575:5597   */\n      mstore\n        /* \"#utility.yul\":5365:5603   */\n      pop\n        /* \"#utility.yul\":5322:5603   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5609:5738   */\n    tag_306:\n        /* \"#utility.yul\":5643:5649   */\n      0x00\n        /* \"#utility.yul\":5670:5690   */\n      tag_415\n      tag_282\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5660:5690   */\n      swap1\n      pop\n        /* \"#utility.yul\":5699:5732   */\n      tag_416\n        /* \"#utility.yul\":5727:5731   */\n      dup3\n        /* \"#utility.yul\":5719:5725   */\n      dup3\n        /* \"#utility.yul\":5699:5732   */\n      tag_305\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5609:5738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5744:6052   */\n    tag_307:\n        /* \"#utility.yul\":5806:5810   */\n      0x00\n        /* \"#utility.yul\":5896:5914   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5888:5894   */\n      dup3\n        /* \"#utility.yul\":5885:5915   */\n      gt\n        /* \"#utility.yul\":5882:5938   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":5918:5936   */\n      tag_419\n      tag_155\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5882:5938   */\n    tag_418:\n        /* \"#utility.yul\":5956:5985   */\n      tag_420\n        /* \"#utility.yul\":5978:5984   */\n      dup3\n        /* \"#utility.yul\":5956:5985   */\n      tag_293\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5948:5985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6040:6044   */\n      0x20\n        /* \"#utility.yul\":6034:6038   */\n      dup2\n        /* \"#utility.yul\":6030:6045   */\n      add\n        /* \"#utility.yul\":6022:6045   */\n      swap1\n      pop\n        /* \"#utility.yul\":5744:6052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6204   */\n    tag_308:\n        /* \"#utility.yul\":6155:6161   */\n      dup3\n        /* \"#utility.yul\":6150:6153   */\n      dup2\n        /* \"#utility.yul\":6145:6148   */\n      dup4\n        /* \"#utility.yul\":6132:6162   */\n      calldatacopy\n        /* \"#utility.yul\":6196:6197   */\n      0x00\n        /* \"#utility.yul\":6187:6193   */\n      dup4\n        /* \"#utility.yul\":6182:6185   */\n      dup4\n        /* \"#utility.yul\":6178:6194   */\n      add\n        /* \"#utility.yul\":6171:6198   */\n      mstore\n        /* \"#utility.yul\":6058:6204   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6210:6635   */\n    tag_309:\n        /* \"#utility.yul\":6288:6293   */\n      0x00\n        /* \"#utility.yul\":6313:6379   */\n      tag_423\n        /* \"#utility.yul\":6329:6378   */\n      tag_424\n        /* \"#utility.yul\":6371:6377   */\n      dup5\n        /* \"#utility.yul\":6329:6378   */\n      tag_307\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6313:6379   */\n      tag_306\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6304:6379   */\n      swap1\n      pop\n        /* \"#utility.yul\":6402:6408   */\n      dup3\n        /* \"#utility.yul\":6395:6400   */\n      dup2\n        /* \"#utility.yul\":6388:6409   */\n      mstore\n        /* \"#utility.yul\":6440:6444   */\n      0x20\n        /* \"#utility.yul\":6433:6438   */\n      dup2\n        /* \"#utility.yul\":6429:6445   */\n      add\n        /* \"#utility.yul\":6478:6481   */\n      dup5\n        /* \"#utility.yul\":6469:6475   */\n      dup5\n        /* \"#utility.yul\":6464:6467   */\n      dup5\n        /* \"#utility.yul\":6460:6476   */\n      add\n        /* \"#utility.yul\":6457:6482   */\n      gt\n        /* \"#utility.yul\":6454:6566   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":6485:6564   */\n      tag_426\n      tag_304\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6454:6566   */\n    tag_425:\n        /* \"#utility.yul\":6575:6629   */\n      tag_427\n        /* \"#utility.yul\":6622:6628   */\n      dup5\n        /* \"#utility.yul\":6617:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6615   */\n      dup6\n        /* \"#utility.yul\":6575:6629   */\n      tag_308\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":6294:6635   */\n      pop\n        /* \"#utility.yul\":6210:6635   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6655:6995   */\n    tag_310:\n        /* \"#utility.yul\":6711:6716   */\n      0x00\n        /* \"#utility.yul\":6760:6763   */\n      dup3\n        /* \"#utility.yul\":6753:6757   */\n      0x1f\n        /* \"#utility.yul\":6745:6751   */\n      dup4\n        /* \"#utility.yul\":6741:6758   */\n      add\n        /* \"#utility.yul\":6737:6764   */\n      slt\n        /* \"#utility.yul\":6727:6849   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":6768:6847   */\n      tag_430\n      tag_303\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6727:6849   */\n    tag_429:\n        /* \"#utility.yul\":6885:6891   */\n      dup2\n        /* \"#utility.yul\":6872:6892   */\n      calldataload\n        /* \"#utility.yul\":6910:6989   */\n      tag_431\n        /* \"#utility.yul\":6985:6988   */\n      dup5\n        /* \"#utility.yul\":6977:6983   */\n      dup3\n        /* \"#utility.yul\":6970:6974   */\n      0x20\n        /* \"#utility.yul\":6962:6968   */\n      dup7\n        /* \"#utility.yul\":6958:6975   */\n      add\n        /* \"#utility.yul\":6910:6989   */\n      tag_309\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6901:6989   */\n      swap2\n      pop\n        /* \"#utility.yul\":6717:6995   */\n      pop\n        /* \"#utility.yul\":6655:6995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7001:7510   */\n    tag_47:\n        /* \"#utility.yul\":7070:7076   */\n      0x00\n        /* \"#utility.yul\":7119:7121   */\n      0x20\n        /* \"#utility.yul\":7107:7116   */\n      dup3\n        /* \"#utility.yul\":7098:7105   */\n      dup5\n        /* \"#utility.yul\":7094:7117   */\n      sub\n        /* \"#utility.yul\":7090:7122   */\n      slt\n        /* \"#utility.yul\":7087:7206   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":7125:7204   */\n      tag_434\n      tag_283\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":7087:7206   */\n    tag_433:\n        /* \"#utility.yul\":7273:7274   */\n      0x00\n        /* \"#utility.yul\":7262:7271   */\n      dup3\n        /* \"#utility.yul\":7258:7275   */\n      add\n        /* \"#utility.yul\":7245:7276   */\n      calldataload\n        /* \"#utility.yul\":7303:7321   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7295:7301   */\n      dup2\n        /* \"#utility.yul\":7292:7322   */\n      gt\n        /* \"#utility.yul\":7289:7406   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":7325:7404   */\n      tag_436\n      tag_284\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7289:7406   */\n    tag_435:\n        /* \"#utility.yul\":7430:7493   */\n      tag_437\n        /* \"#utility.yul\":7485:7492   */\n      dup5\n        /* \"#utility.yul\":7476:7482   */\n      dup3\n        /* \"#utility.yul\":7465:7474   */\n      dup6\n        /* \"#utility.yul\":7461:7483   */\n      add\n        /* \"#utility.yul\":7430:7493   */\n      tag_310\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7420:7493   */\n      swap2\n      pop\n        /* \"#utility.yul\":7216:7503   */\n      pop\n        /* \"#utility.yul\":7001:7510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7516:8135   */\n    tag_52:\n        /* \"#utility.yul\":7593:7599   */\n      0x00\n        /* \"#utility.yul\":7601:7607   */\n      dup1\n        /* \"#utility.yul\":7609:7615   */\n      0x00\n        /* \"#utility.yul\":7658:7660   */\n      0x60\n        /* \"#utility.yul\":7646:7655   */\n      dup5\n        /* \"#utility.yul\":7637:7644   */\n      dup7\n        /* \"#utility.yul\":7633:7656   */\n      sub\n        /* \"#utility.yul\":7629:7661   */\n      slt\n        /* \"#utility.yul\":7626:7745   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":7664:7743   */\n      tag_440\n      tag_283\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7626:7745   */\n    tag_439:\n        /* \"#utility.yul\":7784:7785   */\n      0x00\n        /* \"#utility.yul\":7809:7862   */\n      tag_441\n        /* \"#utility.yul\":7854:7861   */\n      dup7\n        /* \"#utility.yul\":7845:7851   */\n      dup3\n        /* \"#utility.yul\":7834:7843   */\n      dup8\n        /* \"#utility.yul\":7830:7852   */\n      add\n        /* \"#utility.yul\":7809:7862   */\n      tag_302\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7799:7862   */\n      swap4\n      pop\n        /* \"#utility.yul\":7755:7872   */\n      pop\n        /* \"#utility.yul\":7911:7913   */\n      0x20\n        /* \"#utility.yul\":7937:7990   */\n      tag_442\n        /* \"#utility.yul\":7982:7989   */\n      dup7\n        /* \"#utility.yul\":7973:7979   */\n      dup3\n        /* \"#utility.yul\":7962:7971   */\n      dup8\n        /* \"#utility.yul\":7958:7980   */\n      add\n        /* \"#utility.yul\":7937:7990   */\n      tag_302\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7927:7990   */\n      swap3\n      pop\n        /* \"#utility.yul\":7882:8000   */\n      pop\n        /* \"#utility.yul\":8039:8041   */\n      0x40\n        /* \"#utility.yul\":8065:8118   */\n      tag_443\n        /* \"#utility.yul\":8110:8117   */\n      dup7\n        /* \"#utility.yul\":8101:8107   */\n      dup3\n        /* \"#utility.yul\":8090:8099   */\n      dup8\n        /* \"#utility.yul\":8086:8108   */\n      add\n        /* \"#utility.yul\":8065:8118   */\n      tag_297\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8055:8118   */\n      swap2\n      pop\n        /* \"#utility.yul\":8010:8128   */\n      pop\n        /* \"#utility.yul\":7516:8135   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8141:8257   */\n    tag_311:\n        /* \"#utility.yul\":8211:8232   */\n      tag_445\n        /* \"#utility.yul\":8226:8231   */\n      dup2\n        /* \"#utility.yul\":8211:8232   */\n      tag_288\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8204:8209   */\n      dup2\n        /* \"#utility.yul\":8201:8233   */\n      eq\n        /* \"#utility.yul\":8191:8251   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":8247:8248   */\n      0x00\n        /* \"#utility.yul\":8244:8245   */\n      dup1\n        /* \"#utility.yul\":8237:8249   */\n      revert\n        /* \"#utility.yul\":8191:8251   */\n    tag_446:\n        /* \"#utility.yul\":8141:8257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8263:8396   */\n    tag_312:\n        /* \"#utility.yul\":8306:8311   */\n      0x00\n        /* \"#utility.yul\":8344:8350   */\n      dup2\n        /* \"#utility.yul\":8331:8351   */\n      calldataload\n        /* \"#utility.yul\":8322:8351   */\n      swap1\n      pop\n        /* \"#utility.yul\":8360:8390   */\n      tag_448\n        /* \"#utility.yul\":8384:8389   */\n      dup2\n        /* \"#utility.yul\":8360:8390   */\n      tag_311\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8263:8396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8402:9015   */\n    tag_56:\n        /* \"#utility.yul\":8476:8482   */\n      0x00\n        /* \"#utility.yul\":8484:8490   */\n      dup1\n        /* \"#utility.yul\":8492:8498   */\n      0x00\n        /* \"#utility.yul\":8541:8543   */\n      0x60\n        /* \"#utility.yul\":8529:8538   */\n      dup5\n        /* \"#utility.yul\":8520:8527   */\n      dup7\n        /* \"#utility.yul\":8516:8539   */\n      sub\n        /* \"#utility.yul\":8512:8544   */\n      slt\n        /* \"#utility.yul\":8509:8628   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":8547:8626   */\n      tag_451\n      tag_283\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8509:8628   */\n    tag_450:\n        /* \"#utility.yul\":8667:8668   */\n      0x00\n        /* \"#utility.yul\":8692:8745   */\n      tag_452\n        /* \"#utility.yul\":8737:8744   */\n      dup7\n        /* \"#utility.yul\":8728:8734   */\n      dup3\n        /* \"#utility.yul\":8717:8726   */\n      dup8\n        /* \"#utility.yul\":8713:8735   */\n      add\n        /* \"#utility.yul\":8692:8745   */\n      tag_302\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8682:8745   */\n      swap4\n      pop\n        /* \"#utility.yul\":8638:8755   */\n      pop\n        /* \"#utility.yul\":8794:8796   */\n      0x20\n        /* \"#utility.yul\":8820:8873   */\n      tag_453\n        /* \"#utility.yul\":8865:8872   */\n      dup7\n        /* \"#utility.yul\":8856:8862   */\n      dup3\n        /* \"#utility.yul\":8845:8854   */\n      dup8\n        /* \"#utility.yul\":8841:8863   */\n      add\n        /* \"#utility.yul\":8820:8873   */\n      tag_302\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8810:8873   */\n      swap3\n      pop\n        /* \"#utility.yul\":8765:8883   */\n      pop\n        /* \"#utility.yul\":8922:8924   */\n      0x40\n        /* \"#utility.yul\":8948:8998   */\n      tag_454\n        /* \"#utility.yul\":8990:8997   */\n      dup7\n        /* \"#utility.yul\":8981:8987   */\n      dup3\n        /* \"#utility.yul\":8970:8979   */\n      dup8\n        /* \"#utility.yul\":8966:8988   */\n      add\n        /* \"#utility.yul\":8948:8998   */\n      tag_312\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8938:8998   */\n      swap2\n      pop\n        /* \"#utility.yul\":8893:9008   */\n      pop\n        /* \"#utility.yul\":8402:9015   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9021:9350   */\n    tag_67:\n        /* \"#utility.yul\":9080:9086   */\n      0x00\n        /* \"#utility.yul\":9129:9131   */\n      0x20\n        /* \"#utility.yul\":9117:9126   */\n      dup3\n        /* \"#utility.yul\":9108:9115   */\n      dup5\n        /* \"#utility.yul\":9104:9127   */\n      sub\n        /* \"#utility.yul\":9100:9132   */\n      slt\n        /* \"#utility.yul\":9097:9216   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":9135:9214   */\n      tag_457\n      tag_283\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9097:9216   */\n    tag_456:\n        /* \"#utility.yul\":9255:9256   */\n      0x00\n        /* \"#utility.yul\":9280:9333   */\n      tag_458\n        /* \"#utility.yul\":9325:9332   */\n      dup5\n        /* \"#utility.yul\":9316:9322   */\n      dup3\n        /* \"#utility.yul\":9305:9314   */\n      dup6\n        /* \"#utility.yul\":9301:9323   */\n      add\n        /* \"#utility.yul\":9280:9333   */\n      tag_302\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9270:9333   */\n      swap2\n      pop\n        /* \"#utility.yul\":9226:9343   */\n      pop\n        /* \"#utility.yul\":9021:9350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9356:9474   */\n    tag_313:\n        /* \"#utility.yul\":9443:9467   */\n      tag_460\n        /* \"#utility.yul\":9461:9466   */\n      dup2\n        /* \"#utility.yul\":9443:9467   */\n      tag_295\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9438:9441   */\n      dup3\n        /* \"#utility.yul\":9431:9468   */\n      mstore\n        /* \"#utility.yul\":9356:9474   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9480:9702   */\n    tag_70:\n        /* \"#utility.yul\":9573:9577   */\n      0x00\n        /* \"#utility.yul\":9611:9613   */\n      0x20\n        /* \"#utility.yul\":9600:9609   */\n      dup3\n        /* \"#utility.yul\":9596:9614   */\n      add\n        /* \"#utility.yul\":9588:9614   */\n      swap1\n      pop\n        /* \"#utility.yul\":9624:9695   */\n      tag_462\n        /* \"#utility.yul\":9692:9693   */\n      0x00\n        /* \"#utility.yul\":9681:9690   */\n      dup4\n        /* \"#utility.yul\":9677:9694   */\n      add\n        /* \"#utility.yul\":9668:9674   */\n      dup5\n        /* \"#utility.yul\":9624:9695   */\n      tag_313\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9480:9702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9708:9822   */\n    tag_314:\n        /* \"#utility.yul\":9775:9781   */\n      0x00\n        /* \"#utility.yul\":9809:9814   */\n      dup2\n        /* \"#utility.yul\":9803:9815   */\n      mload\n        /* \"#utility.yul\":9793:9815   */\n      swap1\n      pop\n        /* \"#utility.yul\":9708:9822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9828:10012   */\n    tag_315:\n        /* \"#utility.yul\":9927:9938   */\n      0x00\n        /* \"#utility.yul\":9961:9967   */\n      dup3\n        /* \"#utility.yul\":9956:9959   */\n      dup3\n        /* \"#utility.yul\":9949:9968   */\n      mstore\n        /* \"#utility.yul\":10001:10005   */\n      0x20\n        /* \"#utility.yul\":9996:9999   */\n      dup3\n        /* \"#utility.yul\":9992:10006   */\n      add\n        /* \"#utility.yul\":9977:10006   */\n      swap1\n      pop\n        /* \"#utility.yul\":9828:10012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10018:10150   */\n    tag_316:\n        /* \"#utility.yul\":10085:10089   */\n      0x00\n        /* \"#utility.yul\":10108:10111   */\n      dup2\n        /* \"#utility.yul\":10100:10111   */\n      swap1\n      pop\n        /* \"#utility.yul\":10138:10142   */\n      0x20\n        /* \"#utility.yul\":10133:10136   */\n      dup3\n        /* \"#utility.yul\":10129:10143   */\n      add\n        /* \"#utility.yul\":10121:10143   */\n      swap1\n      pop\n        /* \"#utility.yul\":10018:10150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10156:10264   */\n    tag_317:\n        /* \"#utility.yul\":10233:10257   */\n      tag_467\n        /* \"#utility.yul\":10251:10256   */\n      dup2\n        /* \"#utility.yul\":10233:10257   */\n      tag_295\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10228:10231   */\n      dup3\n        /* \"#utility.yul\":10221:10258   */\n      mstore\n        /* \"#utility.yul\":10156:10264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10270:10449   */\n    tag_318:\n        /* \"#utility.yul\":10339:10349   */\n      0x00\n        /* \"#utility.yul\":10360:10406   */\n      tag_469\n        /* \"#utility.yul\":10402:10405   */\n      dup4\n        /* \"#utility.yul\":10394:10400   */\n      dup4\n        /* \"#utility.yul\":10360:10406   */\n      tag_317\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10438:10442   */\n      0x20\n        /* \"#utility.yul\":10433:10436   */\n      dup4\n        /* \"#utility.yul\":10429:10443   */\n      add\n        /* \"#utility.yul\":10415:10443   */\n      swap1\n      pop\n        /* \"#utility.yul\":10270:10449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10455:10568   */\n    tag_319:\n        /* \"#utility.yul\":10525:10529   */\n      0x00\n        /* \"#utility.yul\":10557:10561   */\n      0x20\n        /* \"#utility.yul\":10552:10555   */\n      dup3\n        /* \"#utility.yul\":10548:10562   */\n      add\n        /* \"#utility.yul\":10540:10562   */\n      swap1\n      pop\n        /* \"#utility.yul\":10455:10568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10604:11336   */\n    tag_320:\n        /* \"#utility.yul\":10723:10726   */\n      0x00\n        /* \"#utility.yul\":10752:10806   */\n      tag_472\n        /* \"#utility.yul\":10800:10805   */\n      dup3\n        /* \"#utility.yul\":10752:10806   */\n      tag_314\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10822:10908   */\n      tag_473\n        /* \"#utility.yul\":10901:10907   */\n      dup2\n        /* \"#utility.yul\":10896:10899   */\n      dup6\n        /* \"#utility.yul\":10822:10908   */\n      tag_315\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10815:10908   */\n      swap4\n      pop\n        /* \"#utility.yul\":10932:10988   */\n      tag_474\n        /* \"#utility.yul\":10982:10987   */\n      dup4\n        /* \"#utility.yul\":10932:10988   */\n      tag_316\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11011:11018   */\n      dup1\n        /* \"#utility.yul\":11042:11043   */\n      0x00\n        /* \"#utility.yul\":11027:11311   */\n    tag_475:\n        /* \"#utility.yul\":11052:11058   */\n      dup4\n        /* \"#utility.yul\":11049:11050   */\n      dup2\n        /* \"#utility.yul\":11046:11059   */\n      lt\n        /* \"#utility.yul\":11027:11311   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":11128:11134   */\n      dup2\n        /* \"#utility.yul\":11122:11135   */\n      mload\n        /* \"#utility.yul\":11155:11218   */\n      tag_478\n        /* \"#utility.yul\":11214:11217   */\n      dup9\n        /* \"#utility.yul\":11199:11212   */\n      dup3\n        /* \"#utility.yul\":11155:11218   */\n      tag_318\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11148:11218   */\n      swap8\n      pop\n        /* \"#utility.yul\":11241:11301   */\n      tag_479\n        /* \"#utility.yul\":11294:11300   */\n      dup4\n        /* \"#utility.yul\":11241:11301   */\n      tag_319\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11231:11301   */\n      swap3\n      pop\n        /* \"#utility.yul\":11087:11311   */\n      pop\n        /* \"#utility.yul\":11074:11075   */\n      0x01\n        /* \"#utility.yul\":11071:11072   */\n      dup2\n        /* \"#utility.yul\":11067:11076   */\n      add\n        /* \"#utility.yul\":11062:11076   */\n      swap1\n      pop\n        /* \"#utility.yul\":11027:11311   */\n      jump(tag_475)\n    tag_477:\n        /* \"#utility.yul\":11031:11045   */\n      pop\n        /* \"#utility.yul\":11327:11330   */\n      dup6\n        /* \"#utility.yul\":11320:11330   */\n      swap4\n      pop\n        /* \"#utility.yul\":10728:11336   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10604:11336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11342:11715   */\n    tag_75:\n        /* \"#utility.yul\":11485:11489   */\n      0x00\n        /* \"#utility.yul\":11523:11525   */\n      0x20\n        /* \"#utility.yul\":11512:11521   */\n      dup3\n        /* \"#utility.yul\":11508:11526   */\n      add\n        /* \"#utility.yul\":11500:11526   */\n      swap1\n      pop\n        /* \"#utility.yul\":11572:11581   */\n      dup2\n        /* \"#utility.yul\":11566:11570   */\n      dup2\n        /* \"#utility.yul\":11562:11582   */\n      sub\n        /* \"#utility.yul\":11558:11559   */\n      0x00\n        /* \"#utility.yul\":11547:11556   */\n      dup4\n        /* \"#utility.yul\":11543:11560   */\n      add\n        /* \"#utility.yul\":11536:11583   */\n      mstore\n        /* \"#utility.yul\":11600:11708   */\n      tag_481\n        /* \"#utility.yul\":11703:11707   */\n      dup2\n        /* \"#utility.yul\":11694:11700   */\n      dup5\n        /* \"#utility.yul\":11600:11708   */\n      tag_320\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11592:11708   */\n      swap1\n      pop\n        /* \"#utility.yul\":11342:11715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11721:12189   */\n    tag_81:\n        /* \"#utility.yul\":11786:11792   */\n      0x00\n        /* \"#utility.yul\":11794:11800   */\n      dup1\n        /* \"#utility.yul\":11843:11845   */\n      0x40\n        /* \"#utility.yul\":11831:11840   */\n      dup4\n        /* \"#utility.yul\":11822:11829   */\n      dup6\n        /* \"#utility.yul\":11818:11841   */\n      sub\n        /* \"#utility.yul\":11814:11846   */\n      slt\n        /* \"#utility.yul\":11811:11930   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":11849:11928   */\n      tag_484\n      tag_283\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11811:11930   */\n    tag_483:\n        /* \"#utility.yul\":11969:11970   */\n      0x00\n        /* \"#utility.yul\":11994:12047   */\n      tag_485\n        /* \"#utility.yul\":12039:12046   */\n      dup6\n        /* \"#utility.yul\":12030:12036   */\n      dup3\n        /* \"#utility.yul\":12019:12028   */\n      dup7\n        /* \"#utility.yul\":12015:12037   */\n      add\n        /* \"#utility.yul\":11994:12047   */\n      tag_302\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11984:12047   */\n      swap3\n      pop\n        /* \"#utility.yul\":11940:12057   */\n      pop\n        /* \"#utility.yul\":12096:12098   */\n      0x20\n        /* \"#utility.yul\":12122:12172   */\n      tag_486\n        /* \"#utility.yul\":12164:12171   */\n      dup6\n        /* \"#utility.yul\":12155:12161   */\n      dup3\n        /* \"#utility.yul\":12144:12153   */\n      dup7\n        /* \"#utility.yul\":12140:12162   */\n      add\n        /* \"#utility.yul\":12122:12172   */\n      tag_312\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12112:12172   */\n      swap2\n      pop\n        /* \"#utility.yul\":12067:12182   */\n      pop\n        /* \"#utility.yul\":11721:12189   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12195:12502   */\n    tag_321:\n        /* \"#utility.yul\":12256:12260   */\n      0x00\n        /* \"#utility.yul\":12346:12364   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12338:12344   */\n      dup3\n        /* \"#utility.yul\":12335:12365   */\n      gt\n        /* \"#utility.yul\":12332:12388   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":12368:12386   */\n      tag_489\n      tag_155\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":12332:12388   */\n    tag_488:\n        /* \"#utility.yul\":12406:12435   */\n      tag_490\n        /* \"#utility.yul\":12428:12434   */\n      dup3\n        /* \"#utility.yul\":12406:12435   */\n      tag_293\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12398:12435   */\n      swap1\n      pop\n        /* \"#utility.yul\":12490:12494   */\n      0x20\n        /* \"#utility.yul\":12484:12488   */\n      dup2\n        /* \"#utility.yul\":12480:12495   */\n      add\n        /* \"#utility.yul\":12472:12495   */\n      swap1\n      pop\n        /* \"#utility.yul\":12195:12502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12508:12931   */\n    tag_322:\n        /* \"#utility.yul\":12585:12590   */\n      0x00\n        /* \"#utility.yul\":12610:12675   */\n      tag_492\n        /* \"#utility.yul\":12626:12674   */\n      tag_493\n        /* \"#utility.yul\":12667:12673   */\n      dup5\n        /* \"#utility.yul\":12626:12674   */\n      tag_321\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12610:12675   */\n      tag_306\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12601:12675   */\n      swap1\n      pop\n        /* \"#utility.yul\":12698:12704   */\n      dup3\n        /* \"#utility.yul\":12691:12696   */\n      dup2\n        /* \"#utility.yul\":12684:12705   */\n      mstore\n        /* \"#utility.yul\":12736:12740   */\n      0x20\n        /* \"#utility.yul\":12729:12734   */\n      dup2\n        /* \"#utility.yul\":12725:12741   */\n      add\n        /* \"#utility.yul\":12774:12777   */\n      dup5\n        /* \"#utility.yul\":12765:12771   */\n      dup5\n        /* \"#utility.yul\":12760:12763   */\n      dup5\n        /* \"#utility.yul\":12756:12772   */\n      add\n        /* \"#utility.yul\":12753:12778   */\n      gt\n        /* \"#utility.yul\":12750:12862   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":12781:12860   */\n      tag_495\n      tag_304\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12750:12862   */\n    tag_494:\n        /* \"#utility.yul\":12871:12925   */\n      tag_496\n        /* \"#utility.yul\":12918:12924   */\n      dup5\n        /* \"#utility.yul\":12913:12916   */\n      dup3\n        /* \"#utility.yul\":12908:12911   */\n      dup6\n        /* \"#utility.yul\":12871:12925   */\n      tag_308\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12591:12931   */\n      pop\n        /* \"#utility.yul\":12508:12931   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12950:13288   */\n    tag_323:\n        /* \"#utility.yul\":13005:13010   */\n      0x00\n        /* \"#utility.yul\":13054:13057   */\n      dup3\n        /* \"#utility.yul\":13047:13051   */\n      0x1f\n        /* \"#utility.yul\":13039:13045   */\n      dup4\n        /* \"#utility.yul\":13035:13052   */\n      add\n        /* \"#utility.yul\":13031:13058   */\n      slt\n        /* \"#utility.yul\":13021:13143   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":13062:13141   */\n      tag_499\n      tag_303\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13021:13143   */\n    tag_498:\n        /* \"#utility.yul\":13179:13185   */\n      dup2\n        /* \"#utility.yul\":13166:13186   */\n      calldataload\n        /* \"#utility.yul\":13204:13282   */\n      tag_500\n        /* \"#utility.yul\":13278:13281   */\n      dup5\n        /* \"#utility.yul\":13270:13276   */\n      dup3\n        /* \"#utility.yul\":13263:13267   */\n      0x20\n        /* \"#utility.yul\":13255:13261   */\n      dup7\n        /* \"#utility.yul\":13251:13268   */\n      add\n        /* \"#utility.yul\":13204:13282   */\n      tag_322\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13195:13282   */\n      swap2\n      pop\n        /* \"#utility.yul\":13011:13288   */\n      pop\n        /* \"#utility.yul\":12950:13288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13294:14237   */\n    tag_91:\n        /* \"#utility.yul\":13389:13395   */\n      0x00\n        /* \"#utility.yul\":13397:13403   */\n      dup1\n        /* \"#utility.yul\":13405:13411   */\n      0x00\n        /* \"#utility.yul\":13413:13419   */\n      dup1\n        /* \"#utility.yul\":13462:13465   */\n      0x80\n        /* \"#utility.yul\":13450:13459   */\n      dup6\n        /* \"#utility.yul\":13441:13448   */\n      dup8\n        /* \"#utility.yul\":13437:13460   */\n      sub\n        /* \"#utility.yul\":13433:13466   */\n      slt\n        /* \"#utility.yul\":13430:13550   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":13469:13548   */\n      tag_503\n      tag_283\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":13430:13550   */\n    tag_502:\n        /* \"#utility.yul\":13589:13590   */\n      0x00\n        /* \"#utility.yul\":13614:13667   */\n      tag_504\n        /* \"#utility.yul\":13659:13666   */\n      dup8\n        /* \"#utility.yul\":13650:13656   */\n      dup3\n        /* \"#utility.yul\":13639:13648   */\n      dup9\n        /* \"#utility.yul\":13635:13657   */\n      add\n        /* \"#utility.yul\":13614:13667   */\n      tag_302\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13604:13667   */\n      swap5\n      pop\n        /* \"#utility.yul\":13560:13677   */\n      pop\n        /* \"#utility.yul\":13716:13718   */\n      0x20\n        /* \"#utility.yul\":13742:13795   */\n      tag_505\n        /* \"#utility.yul\":13787:13794   */\n      dup8\n        /* \"#utility.yul\":13778:13784   */\n      dup3\n        /* \"#utility.yul\":13767:13776   */\n      dup9\n        /* \"#utility.yul\":13763:13785   */\n      add\n        /* \"#utility.yul\":13742:13795   */\n      tag_302\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":13732:13795   */\n      swap4\n      pop\n        /* \"#utility.yul\":13687:13805   */\n      pop\n        /* \"#utility.yul\":13844:13846   */\n      0x40\n        /* \"#utility.yul\":13870:13923   */\n      tag_506\n        /* \"#utility.yul\":13915:13922   */\n      dup8\n        /* \"#utility.yul\":13906:13912   */\n      dup3\n        /* \"#utility.yul\":13895:13904   */\n      dup9\n        /* \"#utility.yul\":13891:13913   */\n      add\n        /* \"#utility.yul\":13870:13923   */\n      tag_297\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13860:13923   */\n      swap3\n      pop\n        /* \"#utility.yul\":13815:13933   */\n      pop\n        /* \"#utility.yul\":14000:14002   */\n      0x60\n        /* \"#utility.yul\":13989:13998   */\n      dup6\n        /* \"#utility.yul\":13985:14003   */\n      add\n        /* \"#utility.yul\":13972:14004   */\n      calldataload\n        /* \"#utility.yul\":14031:14049   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14023:14029   */\n      dup2\n        /* \"#utility.yul\":14020:14050   */\n      gt\n        /* \"#utility.yul\":14017:14134   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":14053:14132   */\n      tag_508\n      tag_284\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14017:14134   */\n    tag_507:\n        /* \"#utility.yul\":14158:14220   */\n      tag_509\n        /* \"#utility.yul\":14212:14219   */\n      dup8\n        /* \"#utility.yul\":14203:14209   */\n      dup3\n        /* \"#utility.yul\":14192:14201   */\n      dup9\n        /* \"#utility.yul\":14188:14210   */\n      add\n        /* \"#utility.yul\":14158:14220   */\n      tag_323\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":14148:14220   */\n      swap2\n      pop\n        /* \"#utility.yul\":13943:14230   */\n      pop\n        /* \"#utility.yul\":13294:14237   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14243:14897   */\n    tag_99:\n        /* \"#utility.yul\":14321:14327   */\n      0x00\n        /* \"#utility.yul\":14329:14335   */\n      dup1\n        /* \"#utility.yul\":14378:14380   */\n      0x40\n        /* \"#utility.yul\":14366:14375   */\n      dup4\n        /* \"#utility.yul\":14357:14364   */\n      dup6\n        /* \"#utility.yul\":14353:14376   */\n      sub\n        /* \"#utility.yul\":14349:14381   */\n      slt\n        /* \"#utility.yul\":14346:14465   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":14384:14463   */\n      tag_512\n      tag_283\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14346:14465   */\n    tag_511:\n        /* \"#utility.yul\":14504:14505   */\n      0x00\n        /* \"#utility.yul\":14529:14582   */\n      tag_513\n        /* \"#utility.yul\":14574:14581   */\n      dup6\n        /* \"#utility.yul\":14565:14571   */\n      dup3\n        /* \"#utility.yul\":14554:14563   */\n      dup7\n        /* \"#utility.yul\":14550:14572   */\n      add\n        /* \"#utility.yul\":14529:14582   */\n      tag_297\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":14519:14582   */\n      swap3\n      pop\n        /* \"#utility.yul\":14475:14592   */\n      pop\n        /* \"#utility.yul\":14659:14661   */\n      0x20\n        /* \"#utility.yul\":14648:14657   */\n      dup4\n        /* \"#utility.yul\":14644:14662   */\n      add\n        /* \"#utility.yul\":14631:14663   */\n      calldataload\n        /* \"#utility.yul\":14690:14708   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14682:14688   */\n      dup2\n        /* \"#utility.yul\":14679:14709   */\n      gt\n        /* \"#utility.yul\":14676:14793   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":14712:14791   */\n      tag_515\n      tag_284\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14676:14793   */\n    tag_514:\n        /* \"#utility.yul\":14817:14880   */\n      tag_516\n        /* \"#utility.yul\":14872:14879   */\n      dup6\n        /* \"#utility.yul\":14863:14869   */\n      dup3\n        /* \"#utility.yul\":14852:14861   */\n      dup7\n        /* \"#utility.yul\":14848:14870   */\n      add\n        /* \"#utility.yul\":14817:14880   */\n      tag_310\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14807:14880   */\n      swap2\n      pop\n        /* \"#utility.yul\":14602:14890   */\n      pop\n        /* \"#utility.yul\":14243:14897   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14903:15377   */\n    tag_103:\n        /* \"#utility.yul\":14971:14977   */\n      0x00\n        /* \"#utility.yul\":14979:14985   */\n      dup1\n        /* \"#utility.yul\":15028:15030   */\n      0x40\n        /* \"#utility.yul\":15016:15025   */\n      dup4\n        /* \"#utility.yul\":15007:15014   */\n      dup6\n        /* \"#utility.yul\":15003:15026   */\n      sub\n        /* \"#utility.yul\":14999:15031   */\n      slt\n        /* \"#utility.yul\":14996:15115   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":15034:15113   */\n      tag_519\n      tag_283\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14996:15115   */\n    tag_518:\n        /* \"#utility.yul\":15154:15155   */\n      0x00\n        /* \"#utility.yul\":15179:15232   */\n      tag_520\n        /* \"#utility.yul\":15224:15231   */\n      dup6\n        /* \"#utility.yul\":15215:15221   */\n      dup3\n        /* \"#utility.yul\":15204:15213   */\n      dup7\n        /* \"#utility.yul\":15200:15222   */\n      add\n        /* \"#utility.yul\":15179:15232   */\n      tag_302\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15169:15232   */\n      swap3\n      pop\n        /* \"#utility.yul\":15125:15242   */\n      pop\n        /* \"#utility.yul\":15281:15283   */\n      0x20\n        /* \"#utility.yul\":15307:15360   */\n      tag_521\n        /* \"#utility.yul\":15352:15359   */\n      dup6\n        /* \"#utility.yul\":15343:15349   */\n      dup3\n        /* \"#utility.yul\":15332:15341   */\n      dup7\n        /* \"#utility.yul\":15328:15350   */\n      add\n        /* \"#utility.yul\":15307:15360   */\n      tag_302\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15297:15360   */\n      swap2\n      pop\n        /* \"#utility.yul\":15252:15370   */\n      pop\n        /* \"#utility.yul\":14903:15377   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15383:15563   */\n    tag_324:\n        /* \"#utility.yul\":15431:15508   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15428:15429   */\n      0x00\n        /* \"#utility.yul\":15421:15509   */\n      mstore\n        /* \"#utility.yul\":15528:15532   */\n      0x22\n        /* \"#utility.yul\":15525:15526   */\n      0x04\n        /* \"#utility.yul\":15518:15533   */\n      mstore\n        /* \"#utility.yul\":15552:15556   */\n      0x24\n        /* \"#utility.yul\":15549:15550   */\n      0x00\n        /* \"#utility.yul\":15542:15557   */\n      revert\n        /* \"#utility.yul\":15569:15889   */\n    tag_113:\n        /* \"#utility.yul\":15613:15619   */\n      0x00\n        /* \"#utility.yul\":15650:15651   */\n      0x02\n        /* \"#utility.yul\":15644:15648   */\n      dup3\n        /* \"#utility.yul\":15640:15652   */\n      div\n        /* \"#utility.yul\":15630:15652   */\n      swap1\n      pop\n        /* \"#utility.yul\":15697:15698   */\n      0x01\n        /* \"#utility.yul\":15691:15695   */\n      dup3\n        /* \"#utility.yul\":15687:15699   */\n      and\n        /* \"#utility.yul\":15718:15736   */\n      dup1\n        /* \"#utility.yul\":15708:15789   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":15774:15778   */\n      0x7f\n        /* \"#utility.yul\":15766:15772   */\n      dup3\n        /* \"#utility.yul\":15762:15779   */\n      and\n        /* \"#utility.yul\":15752:15779   */\n      swap2\n      pop\n        /* \"#utility.yul\":15708:15789   */\n    tag_524:\n        /* \"#utility.yul\":15836:15838   */\n      0x20\n        /* \"#utility.yul\":15828:15834   */\n      dup3\n        /* \"#utility.yul\":15825:15839   */\n      lt\n        /* \"#utility.yul\":15805:15823   */\n      dup2\n        /* \"#utility.yul\":15802:15840   */\n      sub\n        /* \"#utility.yul\":15799:15883   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":15855:15873   */\n      tag_526\n      tag_324\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15799:15883   */\n    tag_525:\n        /* \"#utility.yul\":15620:15889   */\n      pop\n        /* \"#utility.yul\":15569:15889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15895:16043   */\n    tag_325:\n        /* \"#utility.yul\":15997:16008   */\n      0x00\n        /* \"#utility.yul\":16034:16037   */\n      dup2\n        /* \"#utility.yul\":16019:16037   */\n      swap1\n      pop\n        /* \"#utility.yul\":15895:16043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16049:16439   */\n    tag_326:\n        /* \"#utility.yul\":16155:16158   */\n      0x00\n        /* \"#utility.yul\":16183:16222   */\n      tag_529\n        /* \"#utility.yul\":16216:16221   */\n      dup3\n        /* \"#utility.yul\":16183:16222   */\n      tag_290\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":16238:16327   */\n      tag_530\n        /* \"#utility.yul\":16320:16326   */\n      dup2\n        /* \"#utility.yul\":16315:16318   */\n      dup6\n        /* \"#utility.yul\":16238:16327   */\n      tag_325\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16231:16327   */\n      swap4\n      pop\n        /* \"#utility.yul\":16336:16401   */\n      tag_531\n        /* \"#utility.yul\":16394:16400   */\n      dup2\n        /* \"#utility.yul\":16389:16392   */\n      dup6\n        /* \"#utility.yul\":16382:16386   */\n      0x20\n        /* \"#utility.yul\":16375:16380   */\n      dup7\n        /* \"#utility.yul\":16371:16387   */\n      add\n        /* \"#utility.yul\":16336:16401   */\n      tag_292\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16426:16432   */\n      dup1\n        /* \"#utility.yul\":16421:16424   */\n      dup5\n        /* \"#utility.yul\":16417:16433   */\n      add\n        /* \"#utility.yul\":16410:16433   */\n      swap2\n      pop\n        /* \"#utility.yul\":16159:16439   */\n      pop\n        /* \"#utility.yul\":16049:16439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16445:16880   */\n    tag_132:\n        /* \"#utility.yul\":16625:16628   */\n      0x00\n        /* \"#utility.yul\":16647:16742   */\n      tag_533\n        /* \"#utility.yul\":16738:16741   */\n      dup3\n        /* \"#utility.yul\":16729:16735   */\n      dup6\n        /* \"#utility.yul\":16647:16742   */\n      tag_326\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16640:16742   */\n      swap2\n      pop\n        /* \"#utility.yul\":16759:16854   */\n      tag_534\n        /* \"#utility.yul\":16850:16853   */\n      dup3\n        /* \"#utility.yul\":16841:16847   */\n      dup5\n        /* \"#utility.yul\":16759:16854   */\n      tag_326\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":16752:16854   */\n      swap2\n      pop\n        /* \"#utility.yul\":16871:16874   */\n      dup2\n        /* \"#utility.yul\":16864:16874   */\n      swap1\n      pop\n        /* \"#utility.yul\":16445:16880   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16886:17328   */\n    tag_141:\n        /* \"#utility.yul\":17035:17039   */\n      0x00\n        /* \"#utility.yul\":17073:17075   */\n      0x60\n        /* \"#utility.yul\":17062:17071   */\n      dup3\n        /* \"#utility.yul\":17058:17076   */\n      add\n        /* \"#utility.yul\":17050:17076   */\n      swap1\n      pop\n        /* \"#utility.yul\":17086:17157   */\n      tag_536\n        /* \"#utility.yul\":17154:17155   */\n      0x00\n        /* \"#utility.yul\":17143:17152   */\n      dup4\n        /* \"#utility.yul\":17139:17156   */\n      add\n        /* \"#utility.yul\":17130:17136   */\n      dup7\n        /* \"#utility.yul\":17086:17157   */\n      tag_300\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":17167:17239   */\n      tag_537\n        /* \"#utility.yul\":17235:17237   */\n      0x20\n        /* \"#utility.yul\":17224:17233   */\n      dup4\n        /* \"#utility.yul\":17220:17238   */\n      add\n        /* \"#utility.yul\":17211:17217   */\n      dup6\n        /* \"#utility.yul\":17167:17239   */\n      tag_313\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":17249:17321   */\n      tag_538\n        /* \"#utility.yul\":17317:17319   */\n      0x40\n        /* \"#utility.yul\":17306:17315   */\n      dup4\n        /* \"#utility.yul\":17302:17320   */\n      add\n        /* \"#utility.yul\":17293:17299   */\n      dup5\n        /* \"#utility.yul\":17249:17321   */\n      tag_300\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16886:17328   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17334:17514   */\n    tag_164:\n        /* \"#utility.yul\":17382:17459   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17379:17380   */\n      0x00\n        /* \"#utility.yul\":17372:17460   */\n      mstore\n        /* \"#utility.yul\":17479:17483   */\n      0x32\n        /* \"#utility.yul\":17476:17477   */\n      0x04\n        /* \"#utility.yul\":17469:17484   */\n      mstore\n        /* \"#utility.yul\":17503:17507   */\n      0x24\n        /* \"#utility.yul\":17500:17501   */\n      0x00\n        /* \"#utility.yul\":17493:17508   */\n      revert\n        /* \"#utility.yul\":17520:17700   */\n    tag_327:\n        /* \"#utility.yul\":17568:17645   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17565:17566   */\n      0x00\n        /* \"#utility.yul\":17558:17646   */\n      mstore\n        /* \"#utility.yul\":17665:17669   */\n      0x11\n        /* \"#utility.yul\":17662:17663   */\n      0x04\n        /* \"#utility.yul\":17655:17670   */\n      mstore\n        /* \"#utility.yul\":17689:17693   */\n      0x24\n        /* \"#utility.yul\":17686:17687   */\n      0x00\n        /* \"#utility.yul\":17679:17694   */\n      revert\n        /* \"#utility.yul\":17706:17939   */\n    tag_166:\n        /* \"#utility.yul\":17745:17748   */\n      0x00\n        /* \"#utility.yul\":17768:17792   */\n      tag_542\n        /* \"#utility.yul\":17786:17791   */\n      dup3\n        /* \"#utility.yul\":17768:17792   */\n      tag_295\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":17759:17792   */\n      swap2\n      pop\n        /* \"#utility.yul\":17814:17880   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17807:17812   */\n      dup3\n        /* \"#utility.yul\":17804:17881   */\n      sub\n        /* \"#utility.yul\":17801:17904   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":17884:17902   */\n      tag_544\n      tag_327\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":17801:17904   */\n    tag_543:\n        /* \"#utility.yul\":17931:17932   */\n      0x01\n        /* \"#utility.yul\":17924:17929   */\n      dup3\n        /* \"#utility.yul\":17920:17933   */\n      add\n        /* \"#utility.yul\":17913:17933   */\n      swap1\n      pop\n        /* \"#utility.yul\":17706:17939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17945:18086   */\n    tag_328:\n        /* \"#utility.yul\":17994:17998   */\n      0x00\n        /* \"#utility.yul\":18017:18020   */\n      dup2\n        /* \"#utility.yul\":18009:18020   */\n      swap1\n      pop\n        /* \"#utility.yul\":18040:18043   */\n      dup2\n        /* \"#utility.yul\":18037:18038   */\n      0x00\n        /* \"#utility.yul\":18030:18044   */\n      mstore\n        /* \"#utility.yul\":18074:18078   */\n      0x20\n        /* \"#utility.yul\":18071:18072   */\n      0x00\n        /* \"#utility.yul\":18061:18079   */\n      keccak256\n        /* \"#utility.yul\":18053:18079   */\n      swap1\n      pop\n        /* \"#utility.yul\":17945:18086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18092:18185   */\n    tag_329:\n        /* \"#utility.yul\":18129:18135   */\n      0x00\n        /* \"#utility.yul\":18176:18178   */\n      0x20\n        /* \"#utility.yul\":18171:18173   */\n      0x1f\n        /* \"#utility.yul\":18164:18169   */\n      dup4\n        /* \"#utility.yul\":18160:18174   */\n      add\n        /* \"#utility.yul\":18156:18179   */\n      div\n        /* \"#utility.yul\":18146:18179   */\n      swap1\n      pop\n        /* \"#utility.yul\":18092:18185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18191:18298   */\n    tag_330:\n        /* \"#utility.yul\":18235:18243   */\n      0x00\n        /* \"#utility.yul\":18285:18290   */\n      dup3\n        /* \"#utility.yul\":18279:18283   */\n      dup3\n        /* \"#utility.yul\":18275:18291   */\n      shl\n        /* \"#utility.yul\":18254:18291   */\n      swap1\n      pop\n        /* \"#utility.yul\":18191:18298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18304:18697   */\n    tag_331:\n        /* \"#utility.yul\":18373:18379   */\n      0x00\n        /* \"#utility.yul\":18423:18424   */\n      0x08\n        /* \"#utility.yul\":18411:18421   */\n      dup4\n        /* \"#utility.yul\":18407:18425   */\n      mul\n        /* \"#utility.yul\":18446:18543   */\n      tag_549\n        /* \"#utility.yul\":18476:18542   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18465:18474   */\n      dup3\n        /* \"#utility.yul\":18446:18543   */\n      tag_330\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":18564:18603   */\n      tag_550\n        /* \"#utility.yul\":18594:18602   */\n      dup7\n        /* \"#utility.yul\":18583:18592   */\n      dup4\n        /* \"#utility.yul\":18564:18603   */\n      tag_330\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":18552:18603   */\n      swap6\n      pop\n        /* \"#utility.yul\":18636:18640   */\n      dup1\n        /* \"#utility.yul\":18632:18641   */\n      not\n        /* \"#utility.yul\":18625:18630   */\n      dup5\n        /* \"#utility.yul\":18621:18642   */\n      and\n        /* \"#utility.yul\":18612:18642   */\n      swap4\n      pop\n        /* \"#utility.yul\":18685:18689   */\n      dup1\n        /* \"#utility.yul\":18675:18683   */\n      dup7\n        /* \"#utility.yul\":18671:18690   */\n      and\n        /* \"#utility.yul\":18664:18669   */\n      dup5\n        /* \"#utility.yul\":18661:18691   */\n      or\n        /* \"#utility.yul\":18651:18691   */\n      swap3\n      pop\n        /* \"#utility.yul\":18380:18697   */\n      pop\n      pop\n        /* \"#utility.yul\":18304:18697   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18703:18763   */\n    tag_332:\n        /* \"#utility.yul\":18731:18734   */\n      0x00\n        /* \"#utility.yul\":18752:18757   */\n      dup2\n        /* \"#utility.yul\":18745:18757   */\n      swap1\n      pop\n        /* \"#utility.yul\":18703:18763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18769:18911   */\n    tag_333:\n        /* \"#utility.yul\":18819:18828   */\n      0x00\n        /* \"#utility.yul\":18852:18905   */\n      tag_553\n        /* \"#utility.yul\":18870:18904   */\n      tag_554\n        /* \"#utility.yul\":18879:18903   */\n      tag_555\n        /* \"#utility.yul\":18897:18902   */\n      dup5\n        /* \"#utility.yul\":18879:18903   */\n      tag_295\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":18870:18904   */\n      tag_332\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":18852:18905   */\n      tag_295\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18839:18905   */\n      swap1\n      pop\n        /* \"#utility.yul\":18769:18911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18917:18992   */\n    tag_334:\n        /* \"#utility.yul\":18960:18963   */\n      0x00\n        /* \"#utility.yul\":18981:18986   */\n      dup2\n        /* \"#utility.yul\":18974:18986   */\n      swap1\n      pop\n        /* \"#utility.yul\":18917:18992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18998:19267   */\n    tag_335:\n        /* \"#utility.yul\":19108:19147   */\n      tag_558\n        /* \"#utility.yul\":19139:19146   */\n      dup4\n        /* \"#utility.yul\":19108:19147   */\n      tag_333\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19169:19260   */\n      tag_559\n        /* \"#utility.yul\":19218:19259   */\n      tag_560\n        /* \"#utility.yul\":19242:19258   */\n      dup3\n        /* \"#utility.yul\":19218:19259   */\n      tag_334\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":19210:19216   */\n      dup5\n        /* \"#utility.yul\":19203:19207   */\n      dup5\n        /* \"#utility.yul\":19197:19208   */\n      sload\n        /* \"#utility.yul\":19169:19260   */\n      tag_331\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":19163:19167   */\n      dup3\n        /* \"#utility.yul\":19156:19261   */\n      sstore\n        /* \"#utility.yul\":19074:19267   */\n      pop\n        /* \"#utility.yul\":18998:19267   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19273:19346   */\n    tag_336:\n        /* \"#utility.yul\":19318:19321   */\n      0x00\n        /* \"#utility.yul\":19273:19346   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19352:19541   */\n    tag_337:\n        /* \"#utility.yul\":19429:19461   */\n      tag_563\n      tag_336\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":19470:19535   */\n      tag_564\n        /* \"#utility.yul\":19528:19534   */\n      dup2\n        /* \"#utility.yul\":19520:19526   */\n      dup5\n        /* \"#utility.yul\":19514:19518   */\n      dup5\n        /* \"#utility.yul\":19470:19535   */\n      tag_335\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19405:19541   */\n      pop\n        /* \"#utility.yul\":19352:19541   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19547:19733   */\n    tag_338:\n        /* \"#utility.yul\":19607:19727   */\n    tag_566:\n        /* \"#utility.yul\":19624:19627   */\n      dup2\n        /* \"#utility.yul\":19617:19622   */\n      dup2\n        /* \"#utility.yul\":19614:19628   */\n      lt\n        /* \"#utility.yul\":19607:19727   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":19678:19717   */\n      tag_569\n        /* \"#utility.yul\":19715:19716   */\n      0x00\n        /* \"#utility.yul\":19708:19713   */\n      dup3\n        /* \"#utility.yul\":19678:19717   */\n      tag_337\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19651:19652   */\n      0x01\n        /* \"#utility.yul\":19644:19649   */\n      dup2\n        /* \"#utility.yul\":19640:19653   */\n      add\n        /* \"#utility.yul\":19631:19653   */\n      swap1\n      pop\n        /* \"#utility.yul\":19607:19727   */\n      jump(tag_566)\n    tag_568:\n        /* \"#utility.yul\":19547:19733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19739:20282   */\n    tag_339:\n        /* \"#utility.yul\":19840:19842   */\n      0x1f\n        /* \"#utility.yul\":19835:19838   */\n      dup3\n        /* \"#utility.yul\":19832:19843   */\n      gt\n        /* \"#utility.yul\":19829:20275   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":19874:19912   */\n      tag_572\n        /* \"#utility.yul\":19906:19911   */\n      dup2\n        /* \"#utility.yul\":19874:19912   */\n      tag_328\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":19958:19987   */\n      tag_573\n        /* \"#utility.yul\":19976:19986   */\n      dup5\n        /* \"#utility.yul\":19958:19987   */\n      tag_329\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19948:19956   */\n      dup2\n        /* \"#utility.yul\":19944:19988   */\n      add\n        /* \"#utility.yul\":20141:20143   */\n      0x20\n        /* \"#utility.yul\":20129:20139   */\n      dup6\n        /* \"#utility.yul\":20126:20144   */\n      lt\n        /* \"#utility.yul\":20123:20172   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":20162:20170   */\n      dup2\n        /* \"#utility.yul\":20147:20170   */\n      swap1\n      pop\n        /* \"#utility.yul\":20123:20172   */\n    tag_574:\n        /* \"#utility.yul\":20185:20265   */\n      tag_575\n        /* \"#utility.yul\":20241:20263   */\n      tag_576\n        /* \"#utility.yul\":20259:20262   */\n      dup6\n        /* \"#utility.yul\":20241:20263   */\n      tag_329\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":20231:20239   */\n      dup4\n        /* \"#utility.yul\":20227:20264   */\n      add\n        /* \"#utility.yul\":20214:20225   */\n      dup3\n        /* \"#utility.yul\":20185:20265   */\n      tag_338\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":19844:20275   */\n      pop\n      pop\n        /* \"#utility.yul\":19829:20275   */\n    tag_571:\n        /* \"#utility.yul\":19739:20282   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20288:20405   */\n    tag_340:\n        /* \"#utility.yul\":20342:20350   */\n      0x00\n        /* \"#utility.yul\":20392:20397   */\n      dup3\n        /* \"#utility.yul\":20386:20390   */\n      dup3\n        /* \"#utility.yul\":20382:20398   */\n      shr\n        /* \"#utility.yul\":20361:20398   */\n      swap1\n      pop\n        /* \"#utility.yul\":20288:20405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20411:20580   */\n    tag_341:\n        /* \"#utility.yul\":20455:20461   */\n      0x00\n        /* \"#utility.yul\":20488:20539   */\n      tag_579\n        /* \"#utility.yul\":20536:20537   */\n      0x00\n        /* \"#utility.yul\":20532:20538   */\n      not\n        /* \"#utility.yul\":20524:20529   */\n      dup5\n        /* \"#utility.yul\":20521:20522   */\n      0x08\n        /* \"#utility.yul\":20517:20530   */\n      mul\n        /* \"#utility.yul\":20488:20539   */\n      tag_340\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":20484:20540   */\n      not\n        /* \"#utility.yul\":20569:20573   */\n      dup1\n        /* \"#utility.yul\":20563:20567   */\n      dup4\n        /* \"#utility.yul\":20559:20574   */\n      and\n        /* \"#utility.yul\":20549:20574   */\n      swap2\n      pop\n        /* \"#utility.yul\":20462:20580   */\n      pop\n        /* \"#utility.yul\":20411:20580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20585:20880   */\n    tag_342:\n        /* \"#utility.yul\":20661:20665   */\n      0x00\n        /* \"#utility.yul\":20807:20836   */\n      tag_581\n        /* \"#utility.yul\":20832:20835   */\n      dup4\n        /* \"#utility.yul\":20826:20830   */\n      dup4\n        /* \"#utility.yul\":20807:20836   */\n      tag_341\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":20799:20836   */\n      swap2\n      pop\n        /* \"#utility.yul\":20869:20872   */\n      dup3\n        /* \"#utility.yul\":20866:20867   */\n      0x02\n        /* \"#utility.yul\":20862:20873   */\n      mul\n        /* \"#utility.yul\":20856:20860   */\n      dup3\n        /* \"#utility.yul\":20853:20874   */\n      or\n        /* \"#utility.yul\":20845:20874   */\n      swap1\n      pop\n        /* \"#utility.yul\":20585:20880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20885:22280   */\n    tag_201:\n        /* \"#utility.yul\":21002:21039   */\n      tag_583\n        /* \"#utility.yul\":21035:21038   */\n      dup3\n        /* \"#utility.yul\":21002:21039   */\n      tag_290\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":21104:21122   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21096:21102   */\n      dup2\n        /* \"#utility.yul\":21093:21123   */\n      gt\n        /* \"#utility.yul\":21090:21146   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":21126:21144   */\n      tag_585\n      tag_155\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":21090:21146   */\n    tag_584:\n        /* \"#utility.yul\":21170:21208   */\n      tag_586\n        /* \"#utility.yul\":21202:21206   */\n      dup3\n        /* \"#utility.yul\":21196:21207   */\n      sload\n        /* \"#utility.yul\":21170:21208   */\n      tag_113\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":21255:21322   */\n      tag_587\n        /* \"#utility.yul\":21315:21321   */\n      dup3\n        /* \"#utility.yul\":21307:21313   */\n      dup3\n        /* \"#utility.yul\":21301:21305   */\n      dup6\n        /* \"#utility.yul\":21255:21322   */\n      tag_339\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":21349:21350   */\n      0x00\n        /* \"#utility.yul\":21373:21377   */\n      0x20\n        /* \"#utility.yul\":21360:21377   */\n      swap1\n      pop\n        /* \"#utility.yul\":21405:21407   */\n      0x1f\n        /* \"#utility.yul\":21397:21403   */\n      dup4\n        /* \"#utility.yul\":21394:21408   */\n      gt\n        /* \"#utility.yul\":21422:21423   */\n      0x01\n        /* \"#utility.yul\":21417:22035   */\n      dup2\n      eq\n      tag_589\n      jumpi\n        /* \"#utility.yul\":22079:22080   */\n      0x00\n        /* \"#utility.yul\":22096:22102   */\n      dup5\n        /* \"#utility.yul\":22093:22170   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":22145:22154   */\n      dup3\n        /* \"#utility.yul\":22140:22143   */\n      dup8\n        /* \"#utility.yul\":22136:22155   */\n      add\n        /* \"#utility.yul\":22130:22156   */\n      mload\n        /* \"#utility.yul\":22121:22156   */\n      swap1\n      pop\n        /* \"#utility.yul\":22093:22170   */\n    tag_590:\n        /* \"#utility.yul\":22196:22263   */\n      tag_591\n        /* \"#utility.yul\":22256:22262   */\n      dup6\n        /* \"#utility.yul\":22249:22254   */\n      dup3\n        /* \"#utility.yul\":22196:22263   */\n      tag_342\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":22190:22194   */\n      dup7\n        /* \"#utility.yul\":22183:22264   */\n      sstore\n        /* \"#utility.yul\":22052:22274   */\n      pop\n        /* \"#utility.yul\":21387:22274   */\n      jump(tag_588)\n        /* \"#utility.yul\":21417:22035   */\n    tag_589:\n        /* \"#utility.yul\":21469:21473   */\n      0x1f\n        /* \"#utility.yul\":21465:21474   */\n      not\n        /* \"#utility.yul\":21457:21463   */\n      dup5\n        /* \"#utility.yul\":21453:21475   */\n      and\n        /* \"#utility.yul\":21503:21540   */\n      tag_592\n        /* \"#utility.yul\":21535:21539   */\n      dup7\n        /* \"#utility.yul\":21503:21540   */\n      tag_328\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":21562:21563   */\n      0x00\n        /* \"#utility.yul\":21576:21784   */\n    tag_593:\n        /* \"#utility.yul\":21590:21597   */\n      dup3\n        /* \"#utility.yul\":21587:21588   */\n      dup2\n        /* \"#utility.yul\":21584:21598   */\n      lt\n        /* \"#utility.yul\":21576:21784   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":21669:21678   */\n      dup5\n        /* \"#utility.yul\":21664:21667   */\n      dup10\n        /* \"#utility.yul\":21660:21679   */\n      add\n        /* \"#utility.yul\":21654:21680   */\n      mload\n        /* \"#utility.yul\":21646:21652   */\n      dup3\n        /* \"#utility.yul\":21639:21681   */\n      sstore\n        /* \"#utility.yul\":21720:21721   */\n      0x01\n        /* \"#utility.yul\":21712:21718   */\n      dup3\n        /* \"#utility.yul\":21708:21722   */\n      add\n        /* \"#utility.yul\":21698:21722   */\n      swap2\n      pop\n        /* \"#utility.yul\":21767:21769   */\n      0x20\n        /* \"#utility.yul\":21756:21765   */\n      dup6\n        /* \"#utility.yul\":21752:21770   */\n      add\n        /* \"#utility.yul\":21739:21770   */\n      swap5\n      pop\n        /* \"#utility.yul\":21613:21617   */\n      0x20\n        /* \"#utility.yul\":21610:21611   */\n      dup2\n        /* \"#utility.yul\":21606:21618   */\n      add\n        /* \"#utility.yul\":21601:21618   */\n      swap1\n      pop\n        /* \"#utility.yul\":21576:21784   */\n      jump(tag_593)\n    tag_595:\n        /* \"#utility.yul\":21812:21818   */\n      dup7\n        /* \"#utility.yul\":21803:21810   */\n      dup4\n        /* \"#utility.yul\":21800:21819   */\n      lt\n        /* \"#utility.yul\":21797:21976   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":21870:21879   */\n      dup5\n        /* \"#utility.yul\":21865:21868   */\n      dup10\n        /* \"#utility.yul\":21861:21880   */\n      add\n        /* \"#utility.yul\":21855:21881   */\n      mload\n        /* \"#utility.yul\":21913:21961   */\n      tag_597\n        /* \"#utility.yul\":21955:21959   */\n      0x1f\n        /* \"#utility.yul\":21947:21953   */\n      dup10\n        /* \"#utility.yul\":21943:21960   */\n      and\n        /* \"#utility.yul\":21932:21941   */\n      dup3\n        /* \"#utility.yul\":21913:21961   */\n      tag_341\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":21905:21911   */\n      dup4\n        /* \"#utility.yul\":21898:21962   */\n      sstore\n        /* \"#utility.yul\":21820:21976   */\n      pop\n        /* \"#utility.yul\":21797:21976   */\n    tag_596:\n        /* \"#utility.yul\":22022:22023   */\n      0x01\n        /* \"#utility.yul\":22018:22019   */\n      0x02\n        /* \"#utility.yul\":22010:22016   */\n      dup9\n        /* \"#utility.yul\":22006:22020   */\n      mul\n        /* \"#utility.yul\":22002:22024   */\n      add\n        /* \"#utility.yul\":21996:22000   */\n      dup9\n        /* \"#utility.yul\":21989:22025   */\n      sstore\n        /* \"#utility.yul\":21424:22035   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21387:22274   */\n    tag_588:\n      pop\n        /* \"#utility.yul\":20977:22280   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20885:22280   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22286:22384   */\n    tag_343:\n        /* \"#utility.yul\":22337:22343   */\n      0x00\n        /* \"#utility.yul\":22371:22376   */\n      dup2\n        /* \"#utility.yul\":22365:22377   */\n      mload\n        /* \"#utility.yul\":22355:22377   */\n      swap1\n      pop\n        /* \"#utility.yul\":22286:22384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22390:22558   */\n    tag_344:\n        /* \"#utility.yul\":22473:22484   */\n      0x00\n        /* \"#utility.yul\":22507:22513   */\n      dup3\n        /* \"#utility.yul\":22502:22505   */\n      dup3\n        /* \"#utility.yul\":22495:22514   */\n      mstore\n        /* \"#utility.yul\":22547:22551   */\n      0x20\n        /* \"#utility.yul\":22542:22545   */\n      dup3\n        /* \"#utility.yul\":22538:22552   */\n      add\n        /* \"#utility.yul\":22523:22552   */\n      swap1\n      pop\n        /* \"#utility.yul\":22390:22558   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22564:22937   */\n    tag_345:\n        /* \"#utility.yul\":22650:22653   */\n      0x00\n        /* \"#utility.yul\":22678:22716   */\n      tag_601\n        /* \"#utility.yul\":22710:22715   */\n      dup3\n        /* \"#utility.yul\":22678:22716   */\n      tag_343\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":22732:22802   */\n      tag_602\n        /* \"#utility.yul\":22795:22801   */\n      dup2\n        /* \"#utility.yul\":22790:22793   */\n      dup6\n        /* \"#utility.yul\":22732:22802   */\n      tag_344\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":22725:22802   */\n      swap4\n      pop\n        /* \"#utility.yul\":22811:22876   */\n      tag_603\n        /* \"#utility.yul\":22869:22875   */\n      dup2\n        /* \"#utility.yul\":22864:22867   */\n      dup6\n        /* \"#utility.yul\":22857:22861   */\n      0x20\n        /* \"#utility.yul\":22850:22855   */\n      dup7\n        /* \"#utility.yul\":22846:22862   */\n      add\n        /* \"#utility.yul\":22811:22876   */\n      tag_292\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":22901:22930   */\n      tag_604\n        /* \"#utility.yul\":22923:22929   */\n      dup2\n        /* \"#utility.yul\":22901:22930   */\n      tag_293\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":22896:22899   */\n      dup5\n        /* \"#utility.yul\":22892:22931   */\n      add\n        /* \"#utility.yul\":22885:22931   */\n      swap2\n      pop\n        /* \"#utility.yul\":22654:22937   */\n      pop\n        /* \"#utility.yul\":22564:22937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22943:23583   */\n    tag_233:\n        /* \"#utility.yul\":23138:23142   */\n      0x00\n        /* \"#utility.yul\":23176:23179   */\n      0x80\n        /* \"#utility.yul\":23165:23174   */\n      dup3\n        /* \"#utility.yul\":23161:23180   */\n      add\n        /* \"#utility.yul\":23153:23180   */\n      swap1\n      pop\n        /* \"#utility.yul\":23190:23261   */\n      tag_606\n        /* \"#utility.yul\":23258:23259   */\n      0x00\n        /* \"#utility.yul\":23247:23256   */\n      dup4\n        /* \"#utility.yul\":23243:23260   */\n      add\n        /* \"#utility.yul\":23234:23240   */\n      dup8\n        /* \"#utility.yul\":23190:23261   */\n      tag_300\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":23271:23343   */\n      tag_607\n        /* \"#utility.yul\":23339:23341   */\n      0x20\n        /* \"#utility.yul\":23328:23337   */\n      dup4\n        /* \"#utility.yul\":23324:23342   */\n      add\n        /* \"#utility.yul\":23315:23321   */\n      dup7\n        /* \"#utility.yul\":23271:23343   */\n      tag_300\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":23353:23425   */\n      tag_608\n        /* \"#utility.yul\":23421:23423   */\n      0x40\n        /* \"#utility.yul\":23410:23419   */\n      dup4\n        /* \"#utility.yul\":23406:23424   */\n      add\n        /* \"#utility.yul\":23397:23403   */\n      dup6\n        /* \"#utility.yul\":23353:23425   */\n      tag_313\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":23472:23481   */\n      dup2\n        /* \"#utility.yul\":23466:23470   */\n      dup2\n        /* \"#utility.yul\":23462:23482   */\n      sub\n        /* \"#utility.yul\":23457:23459   */\n      0x60\n        /* \"#utility.yul\":23446:23455   */\n      dup4\n        /* \"#utility.yul\":23442:23460   */\n      add\n        /* \"#utility.yul\":23435:23483   */\n      mstore\n        /* \"#utility.yul\":23500:23576   */\n      tag_609\n        /* \"#utility.yul\":23571:23575   */\n      dup2\n        /* \"#utility.yul\":23562:23568   */\n      dup5\n        /* \"#utility.yul\":23500:23576   */\n      tag_345\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":23492:23576   */\n      swap1\n      pop\n        /* \"#utility.yul\":22943:23583   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23589:23730   */\n    tag_346:\n        /* \"#utility.yul\":23645:23650   */\n      0x00\n        /* \"#utility.yul\":23676:23682   */\n      dup2\n        /* \"#utility.yul\":23670:23683   */\n      mload\n        /* \"#utility.yul\":23661:23683   */\n      swap1\n      pop\n        /* \"#utility.yul\":23692:23724   */\n      tag_611\n        /* \"#utility.yul\":23718:23723   */\n      dup2\n        /* \"#utility.yul\":23692:23724   */\n      tag_286\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":23589:23730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23736:24085   */\n    tag_236:\n        /* \"#utility.yul\":23805:23811   */\n      0x00\n        /* \"#utility.yul\":23854:23856   */\n      0x20\n        /* \"#utility.yul\":23842:23851   */\n      dup3\n        /* \"#utility.yul\":23833:23840   */\n      dup5\n        /* \"#utility.yul\":23829:23852   */\n      sub\n        /* \"#utility.yul\":23825:23857   */\n      slt\n        /* \"#utility.yul\":23822:23941   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":23860:23939   */\n      tag_614\n      tag_283\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":23822:23941   */\n    tag_613:\n        /* \"#utility.yul\":23980:23981   */\n      0x00\n        /* \"#utility.yul\":24005:24068   */\n      tag_615\n        /* \"#utility.yul\":24060:24067   */\n      dup5\n        /* \"#utility.yul\":24051:24057   */\n      dup3\n        /* \"#utility.yul\":24040:24049   */\n      dup6\n        /* \"#utility.yul\":24036:24058   */\n      add\n        /* \"#utility.yul\":24005:24068   */\n      tag_346\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":23995:24068   */\n      swap2\n      pop\n        /* \"#utility.yul\":23951:24078   */\n      pop\n        /* \"#utility.yul\":23736:24085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24091:24423   */\n    tag_275:\n        /* \"#utility.yul\":24212:24216   */\n      0x00\n        /* \"#utility.yul\":24250:24252   */\n      0x40\n        /* \"#utility.yul\":24239:24248   */\n      dup3\n        /* \"#utility.yul\":24235:24253   */\n      add\n        /* \"#utility.yul\":24227:24253   */\n      swap1\n      pop\n        /* \"#utility.yul\":24263:24334   */\n      tag_617\n        /* \"#utility.yul\":24331:24332   */\n      0x00\n        /* \"#utility.yul\":24320:24329   */\n      dup4\n        /* \"#utility.yul\":24316:24333   */\n      add\n        /* \"#utility.yul\":24307:24313   */\n      dup6\n        /* \"#utility.yul\":24263:24334   */\n      tag_300\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":24344:24416   */\n      tag_618\n        /* \"#utility.yul\":24412:24414   */\n      0x20\n        /* \"#utility.yul\":24401:24410   */\n      dup4\n        /* \"#utility.yul\":24397:24415   */\n      add\n        /* \"#utility.yul\":24388:24394   */\n      dup5\n        /* \"#utility.yul\":24344:24416   */\n      tag_313\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":24091:24423   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_d1f8d88b6e34b43596d2de84a0185752a3add6e83a91b900a9741f09edc98ffe 68747470733a2f2f636f72616c2d646561722d676962626f6e2d3933302e6d7970696e6174612e636c6f75642f697066732f\n\n    auxdata: 0xa264697066735822122061576c8260056190c3c57e00d237e99e57f8f85a2a926586deac2bb74dcc300864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_314": {
									"entryPoint": null,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:12",
																"statements": []
															},
															"src": "1701:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:12"
															},
															"nodeType": "YulIf",
															"src": "2117:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:12",
														"type": ""
													}
												],
												"src": "1862:434:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:12"
															},
															"nodeType": "YulIf",
															"src": "2399:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:12",
														"type": ""
													}
												],
												"src": "2316:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:12"
															},
															"nodeType": "YulIf",
															"src": "2801:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:12",
														"type": ""
													}
												],
												"src": "2677:853:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:12",
														"type": ""
													}
												],
												"src": "3536:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:12"
															},
															"nodeType": "YulIf",
															"src": "3966:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:12"
															},
															"nodeType": "YulIf",
															"src": "4057:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:12",
														"type": ""
													}
												],
												"src": "3827:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:12",
														"type": ""
													}
												],
												"src": "4153:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:12",
														"type": ""
													}
												],
												"src": "4300:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:12",
														"type": ""
													}
												],
												"src": "4399:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:12",
														"type": ""
													}
												],
												"src": "4512:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:12",
														"type": ""
													}
												],
												"src": "4911:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:12",
														"type": ""
													}
												],
												"src": "4994:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:12",
														"type": ""
													}
												],
												"src": "5060:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:12",
														"type": ""
													}
												],
												"src": "5208:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:12",
														"type": ""
													}
												],
												"src": "5289:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:12",
														"type": ""
													}
												],
												"src": "5564:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:12",
														"type": ""
													}
												],
												"src": "5643:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:12",
																"statements": []
															},
															"src": "5898:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:12",
														"type": ""
													}
												],
												"src": "5838:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:12"
															},
															"nodeType": "YulIf",
															"src": "6120:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:12",
														"type": ""
													}
												],
												"src": "6030:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:12",
														"type": ""
													}
												],
												"src": "6579:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:12",
														"type": ""
													}
												],
												"src": "6702:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:12",
														"type": ""
													}
												],
												"src": "6876:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:12"
															},
															"nodeType": "YulIf",
															"src": "7381:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:12",
																					"statements": []
																				},
																				"src": "7867:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:12",
														"type": ""
													}
												],
												"src": "7176:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200295a3803806200295a8339818101604052810190620000369190620001f1565b8181815f9081620000489190620004ab565b5080600190816200005a9190620004ab565b505f600281905550505050506200058f565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000cd8262000085565b810181811067ffffffffffffffff82111715620000ef57620000ee62000095565b5b80604052505050565b5f620001036200006c565b9050620001118282620000c2565b919050565b5f67ffffffffffffffff82111562000133576200013262000095565b5b6200013e8262000085565b9050602081019050919050565b5f5b838110156200016a5780820151818401526020810190506200014d565b5f8484015250505050565b5f6200018b620001858462000116565b620000f8565b905082815260208101848484011115620001aa57620001a962000081565b5b620001b78482856200014b565b509392505050565b5f82601f830112620001d657620001d56200007d565b5b8151620001e884826020860162000175565b91505092915050565b5f80604083850312156200020a576200020962000075565b5b5f83015167ffffffffffffffff8111156200022a576200022962000079565b5b6200023885828601620001bf565b925050602083015167ffffffffffffffff8111156200025c576200025b62000079565b5b6200026a85828601620001bf565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002c357607f821691505b602082108103620002d957620002d86200027e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200033d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000300565b62000349868362000300565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003936200038d620003878462000361565b6200036a565b62000361565b9050919050565b5f819050919050565b620003ae8362000373565b620003c6620003bd826200039a565b8484546200030c565b825550505050565b5f90565b620003dc620003ce565b620003e9818484620003a3565b505050565b5b818110156200041057620004045f82620003d2565b600181019050620003ef565b5050565b601f8211156200045f576200042981620002df565b6200043484620002f1565b8101602085101562000444578190505b6200045c6200045385620002f1565b830182620003ee565b50505b505050565b5f82821c905092915050565b5f620004815f198460080262000464565b1980831691505092915050565b5f6200049b838362000470565b9150826002028217905092915050565b620004b68262000274565b67ffffffffffffffff811115620004d257620004d162000095565b5b620004de8254620002ab565b620004eb82828562000414565b5f60209050601f83116001811462000521575f84156200050c578287015190505b6200051885826200048e565b86555062000587565b601f1984166200053186620002df565b5f5b828110156200055a5784890151825560018201915060208501945060208101905062000533565b868310156200057a578489015162000576601f89168262000470565b8355505b6001600288020188555050505b505050505050565b6123bd806200059d5f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c806370a08231116100ab578063abec71011161006f578063abec710114610329578063b88d4fde14610347578063c87b56dd14610363578063e2c4c4b214610393578063e985e9c5146103af5761011f565b806370a0823114610271578063828e7a01146102a157806395d89b41146102d1578063a22cb465146102ef578063a393dc441461030b5761011f565b80631b00fd16116100f25780631b00fd16146101bd57806323b872dd146101ed57806329d6724e1461020957806342842e0e146102255780636352211e146102415761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc14610171578063095ea7b3146101a1575b5f80fd5b61013d600480360381019061013891906116d6565b6103df565b60405161014a919061171b565b60405180910390f35b61015b6104c0565b60405161016891906117be565b60405180910390f35b61018b60048036038101906101869190611811565b61054f565b604051610198919061187b565b60405180910390f35b6101bb60048036038101906101b691906118be565b61056a565b005b6101d760048036038101906101d29190611a28565b610580565b6040516101e491906117be565b60405180910390f35b61020760048036038101906102029190611a6f565b6105b7565b005b610223600480360381019061021e9190611ae9565b6106b6565b005b61023f600480360381019061023a9190611a6f565b6106c6565b005b61025b60048036038101906102569190611811565b6106e5565b604051610268919061187b565b60405180910390f35b61028b60048036038101906102869190611b39565b6106f6565b6040516102989190611b73565b60405180910390f35b6102bb60048036038101906102b69190611b39565b6107ac565b6040516102c89190611c43565b60405180910390f35b6102d9610936565b6040516102e691906117be565b60405180910390f35b61030960048036038101906103049190611c63565b6109c6565b005b6103136109dc565b6040516103209190611b73565b60405180910390f35b6103316109e2565b60405161033e9190611b73565b60405180910390f35b610361600480360381019061035c9190611d3f565b6109eb565b005b61037d60048036038101906103789190611811565b610a08565b60405161038a91906117be565b60405180910390f35b6103ad60048036038101906103a89190611dbf565b610aa9565b005b6103c960048036038101906103c49190611e19565b610ad6565b6040516103d6919061171b565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104a957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104b957506104b882610b64565b5b9050919050565b60605f80546104ce90611e84565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa90611e84565b80156105455780601f1061051c57610100808354040283529160200191610545565b820191905f5260205f20905b81548152906001019060200180831161052857829003601f168201915b5050505050905090565b5f61055982610bcd565b5061056382610c53565b9050919050565b61057c8282610577610c8c565b610c93565b5050565b60605f61058b610ca5565b905080836040516020016105a0929190611eee565b604051602081830303815290604052915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610627575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161061e919061187b565b60405180910390fd5b5f61063a8383610635610c8c565b610cc5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106b0578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106a793929190611f11565b60405180910390fd5b50505050565b6106c1838383610ed0565b505050565b6106e083838360405180602001604052805f8152506109eb565b505050565b5f6106ef82610bcd565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610767575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161075e919061187b565b60405180910390fd5b60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60605f60025467ffffffffffffffff8111156107cb576107ca611904565b5b6040519080825280602002602001820160405280156107f95781602001602082028036833780820191505090505b5090505f805b60025481101561088657610812816106e5565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610873578083838151811061085857610857611f46565b5b602002602001018181525050818061086f90611fa0565b9250505b808061087e90611fa0565b9150506107ff565b505f8167ffffffffffffffff8111156108a2576108a1611904565b5b6040519080825280602002602001820160405280156108d05781602001602082028036833780820191505090505b5090505f5b8281101561092a578381815181106108f0576108ef611f46565b5b602002602001015182828151811061090b5761090a611f46565b5b602002602001018181525050808061092290611fa0565b9150506108d5565b50809350505050919050565b60606001805461094590611e84565b80601f016020809104026020016040519081016040528092919081815260200182805461097190611e84565b80156109bc5780601f10610993576101008083540402835291602001916109bc565b820191905f5260205f20905b81548152906001019060200180831161099f57829003601f168201915b5050505050905090565b6109d86109d1610c8c565b8383610ed0565b5050565b60025481565b5f600254905090565b6109f68484846105b7565b610a0284848484611039565b50505050565b606060075f8381526020019081526020015f208054610a2690611e84565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5290611e84565b8015610a9d5780601f10610a7457610100808354040283529160200191610a9d565b820191905f5260205f20905b815481529060010190602001808311610a8057829003601f168201915b50505050509050919050565b8060075f8481526020019081526020015f209081610ac79190612184565b50610ad233836111eb565b5050565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610bd8836112f5565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c4a57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c419190611b73565b60405180910390fd5b80915050919050565b5f60055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ca0838383600161132e565b505050565b606060405180606001604052806032815260200161235660329139905090565b5f80610cd0846112f5565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d1157610d108184866114ed565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d9c57610d505f855f8061132e565b600160045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e1b57600160045f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460035f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f4057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f37919061187b565b60405180910390fd5b8060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161102c919061171b565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156111e5578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261107c610c8c565b8685856040518563ffffffff1660e01b815260040161109e94939291906122a5565b6020604051808303815f875af19250505080156110d957506040513d601f19601f820116820180604052508101906110d69190612303565b60015b61115a573d805f8114611107576040519150601f19603f3d011682016040523d82523d5f602084013e61110c565b606091505b505f81510361115257836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611149919061187b565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e357836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111da919061187b565b60405180910390fd5b505b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361125b575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611252919061187b565b60405180910390fd5b5f61126783835f610cc5565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112d9575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016112d0919061187b565b60405180910390fd5b60025f8154809291906112eb90611fa0565b9190505550505050565b5f60035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061136657505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611498575f61137584610bcd565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113df57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113f257506113f08184610ad6565b155b1561143457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161142b919061187b565b60405180910390fd5b811561149657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360055f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114f88383836115b0565b6115ab575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361156c57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016115639190611b73565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016115a292919061232e565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561166757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061162857506116278484610ad6565b5b8061166657508273ffffffffffffffffffffffffffffffffffffffff1661164e83610c53565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116b581611681565b81146116bf575f80fd5b50565b5f813590506116d0816116ac565b92915050565b5f602082840312156116eb576116ea611679565b5b5f6116f8848285016116c2565b91505092915050565b5f8115159050919050565b61171581611701565b82525050565b5f60208201905061172e5f83018461170c565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561176b578082015181840152602081019050611750565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61179082611734565b61179a818561173e565b93506117aa81856020860161174e565b6117b381611776565b840191505092915050565b5f6020820190508181035f8301526117d68184611786565b905092915050565b5f819050919050565b6117f0816117de565b81146117fa575f80fd5b50565b5f8135905061180b816117e7565b92915050565b5f6020828403121561182657611825611679565b5b5f611833848285016117fd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118658261183c565b9050919050565b6118758161185b565b82525050565b5f60208201905061188e5f83018461186c565b92915050565b61189d8161185b565b81146118a7575f80fd5b50565b5f813590506118b881611894565b92915050565b5f80604083850312156118d4576118d3611679565b5b5f6118e1858286016118aa565b92505060206118f2858286016117fd565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61193a82611776565b810181811067ffffffffffffffff8211171561195957611958611904565b5b80604052505050565b5f61196b611670565b90506119778282611931565b919050565b5f67ffffffffffffffff82111561199657611995611904565b5b61199f82611776565b9050602081019050919050565b828183375f83830152505050565b5f6119cc6119c78461197c565b611962565b9050828152602081018484840111156119e8576119e7611900565b5b6119f38482856119ac565b509392505050565b5f82601f830112611a0f57611a0e6118fc565b5b8135611a1f8482602086016119ba565b91505092915050565b5f60208284031215611a3d57611a3c611679565b5b5f82013567ffffffffffffffff811115611a5a57611a5961167d565b5b611a66848285016119fb565b91505092915050565b5f805f60608486031215611a8657611a85611679565b5b5f611a93868287016118aa565b9350506020611aa4868287016118aa565b9250506040611ab5868287016117fd565b9150509250925092565b611ac881611701565b8114611ad2575f80fd5b50565b5f81359050611ae381611abf565b92915050565b5f805f60608486031215611b0057611aff611679565b5b5f611b0d868287016118aa565b9350506020611b1e868287016118aa565b9250506040611b2f86828701611ad5565b9150509250925092565b5f60208284031215611b4e57611b4d611679565b5b5f611b5b848285016118aa565b91505092915050565b611b6d816117de565b82525050565b5f602082019050611b865f830184611b64565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611bbe816117de565b82525050565b5f611bcf8383611bb5565b60208301905092915050565b5f602082019050919050565b5f611bf182611b8c565b611bfb8185611b96565b9350611c0683611ba6565b805f5b83811015611c36578151611c1d8882611bc4565b9750611c2883611bdb565b925050600181019050611c09565b5085935050505092915050565b5f6020820190508181035f830152611c5b8184611be7565b905092915050565b5f8060408385031215611c7957611c78611679565b5b5f611c86858286016118aa565b9250506020611c9785828601611ad5565b9150509250929050565b5f67ffffffffffffffff821115611cbb57611cba611904565b5b611cc482611776565b9050602081019050919050565b5f611ce3611cde84611ca1565b611962565b905082815260208101848484011115611cff57611cfe611900565b5b611d0a8482856119ac565b509392505050565b5f82601f830112611d2657611d256118fc565b5b8135611d36848260208601611cd1565b91505092915050565b5f805f8060808587031215611d5757611d56611679565b5b5f611d64878288016118aa565b9450506020611d75878288016118aa565b9350506040611d86878288016117fd565b925050606085013567ffffffffffffffff811115611da757611da661167d565b5b611db387828801611d12565b91505092959194509250565b5f8060408385031215611dd557611dd4611679565b5b5f611de2858286016117fd565b925050602083013567ffffffffffffffff811115611e0357611e0261167d565b5b611e0f858286016119fb565b9150509250929050565b5f8060408385031215611e2f57611e2e611679565b5b5f611e3c858286016118aa565b9250506020611e4d858286016118aa565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e9b57607f821691505b602082108103611eae57611ead611e57565b5b50919050565b5f81905092915050565b5f611ec882611734565b611ed28185611eb4565b9350611ee281856020860161174e565b80840191505092915050565b5f611ef98285611ebe565b9150611f058284611ebe565b91508190509392505050565b5f606082019050611f245f83018661186c565b611f316020830185611b64565b611f3e604083018461186c565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611faa826117de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611fdc57611fdb611f73565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612008565b61204d8683612008565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61208861208361207e846117de565b612065565b6117de565b9050919050565b5f819050919050565b6120a18361206e565b6120b56120ad8261208f565b848454612014565b825550505050565b5f90565b6120c96120bd565b6120d4818484612098565b505050565b5b818110156120f7576120ec5f826120c1565b6001810190506120da565b5050565b601f82111561213c5761210d81611fe7565b61211684611ff9565b81016020851015612125578190505b61213961213185611ff9565b8301826120d9565b50505b505050565b5f82821c905092915050565b5f61215c5f1984600802612141565b1980831691505092915050565b5f612174838361214d565b9150826002028217905092915050565b61218d82611734565b67ffffffffffffffff8111156121a6576121a5611904565b5b6121b08254611e84565b6121bb8282856120fb565b5f60209050601f8311600181146121ec575f84156121da578287015190505b6121e48582612169565b86555061224b565b601f1984166121fa86611fe7565b5f5b82811015612221578489015182556001820191506020850194506020810190506121fc565b8683101561223e578489015161223a601f89168261214d565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f61227782612253565b612281818561225d565b935061229181856020860161174e565b61229a81611776565b840191505092915050565b5f6080820190506122b85f83018761186c565b6122c5602083018661186c565b6122d26040830185611b64565b81810360608301526122e4818461226d565b905095945050505050565b5f815190506122fd816116ac565b92915050565b5f6020828403121561231857612317611679565b5b5f612325848285016122ef565b91505092915050565b5f6040820190506123415f83018561186c565b61234e6020830184611b64565b939250505056fe68747470733a2f2f636f72616c2d646561722d676962626f6e2d3933302e6d7970696e6174612e636c6f75642f697066732fa264697066735822122061576c8260056190c3c57e00d237e99e57f8f85a2a926586deac2bb74dcc300864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x295A CODESIZE SUB DUP1 PUSH3 0x295A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1F1 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4AB JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4AB JUMP JUMPDEST POP PUSH0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x58F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xCD DUP3 PUSH3 0x85 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEE PUSH3 0x95 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x103 PUSH3 0x6C JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x133 JUMPI PUSH3 0x132 PUSH3 0x95 JUMP JUMPDEST JUMPDEST PUSH3 0x13E DUP3 PUSH3 0x85 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x18B PUSH3 0x185 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AA JUMPI PUSH3 0x1A9 PUSH3 0x81 JUMP JUMPDEST JUMPDEST PUSH3 0x1B7 DUP5 DUP3 DUP6 PUSH3 0x14B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D6 JUMPI PUSH3 0x1D5 PUSH3 0x7D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x175 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x20A JUMPI PUSH3 0x209 PUSH3 0x75 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x22A JUMPI PUSH3 0x229 PUSH3 0x79 JUMP JUMPDEST JUMPDEST PUSH3 0x238 DUP6 DUP3 DUP7 ADD PUSH3 0x1BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x25C JUMPI PUSH3 0x25B PUSH3 0x79 JUMP JUMPDEST JUMPDEST PUSH3 0x26A DUP6 DUP3 DUP7 ADD PUSH3 0x1BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D9 JUMPI PUSH3 0x2D8 PUSH3 0x27E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x33D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x300 JUMP JUMPDEST PUSH3 0x349 DUP7 DUP4 PUSH3 0x300 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x393 PUSH3 0x38D PUSH3 0x387 DUP5 PUSH3 0x361 JUMP JUMPDEST PUSH3 0x36A JUMP JUMPDEST PUSH3 0x361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3AE DUP4 PUSH3 0x373 JUMP JUMPDEST PUSH3 0x3C6 PUSH3 0x3BD DUP3 PUSH3 0x39A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x30C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3DC PUSH3 0x3CE JUMP JUMPDEST PUSH3 0x3E9 DUP2 DUP5 DUP5 PUSH3 0x3A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x410 JUMPI PUSH3 0x404 PUSH0 DUP3 PUSH3 0x3D2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x45F JUMPI PUSH3 0x429 DUP2 PUSH3 0x2DF JUMP JUMPDEST PUSH3 0x434 DUP5 PUSH3 0x2F1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x444 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x45C PUSH3 0x453 DUP6 PUSH3 0x2F1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3EE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x481 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x464 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x49B DUP4 DUP4 PUSH3 0x470 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4B6 DUP3 PUSH3 0x274 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4D2 JUMPI PUSH3 0x4D1 PUSH3 0x95 JUMP JUMPDEST JUMPDEST PUSH3 0x4DE DUP3 SLOAD PUSH3 0x2AB JUMP JUMPDEST PUSH3 0x4EB DUP3 DUP3 DUP6 PUSH3 0x414 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x521 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x50C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x518 DUP6 DUP3 PUSH3 0x48E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x587 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x531 DUP7 PUSH3 0x2DF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x55A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x533 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x57A JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x576 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x470 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x23BD DUP1 PUSH3 0x59D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xABEC7101 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xABEC7101 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xE2C4C4B2 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3AF JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x828E7A01 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA393DC44 EQ PUSH2 0x30B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1B00FD16 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1B00FD16 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x29D6724E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x241 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4A9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4B9 JUMPI POP PUSH2 0x4B8 DUP3 PUSH2 0xB64 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x545 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x528 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x559 DUP3 PUSH2 0xBCD JUMP JUMPDEST POP PUSH2 0x563 DUP3 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57C DUP3 DUP3 PUSH2 0x577 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x58B PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x627 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x63A DUP4 DUP4 PUSH2 0x635 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B0 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6C1 DUP4 DUP4 DUP4 PUSH2 0xED0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6E0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6EF DUP3 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x767 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7CB JUMPI PUSH2 0x7CA PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7F9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x886 JUMPI PUSH2 0x812 DUP2 PUSH2 0x6E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x873 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x858 JUMPI PUSH2 0x857 PUSH2 0x1F46 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x86F SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x87E SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7FF JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8A2 JUMPI PUSH2 0x8A1 PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x92A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8F0 JUMPI PUSH2 0x8EF PUSH2 0x1F46 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0x1F46 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x922 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D5 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x945 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x971 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x993 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D8 PUSH2 0x9D1 PUSH2 0xC8C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xED0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9F6 DUP5 DUP5 DUP5 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0xA02 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1039 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xA26 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA52 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA74 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xAC7 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST POP PUSH2 0xAD2 CALLER DUP4 PUSH2 0x11EB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBD8 DUP4 PUSH2 0x12F5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCA0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x132E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2356 PUSH1 0x32 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCD0 DUP5 PUSH2 0x12F5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD11 JUMPI PUSH2 0xD10 DUP2 DUP5 DUP7 PUSH2 0x14ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD9C JUMPI PUSH2 0xD50 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x132E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE1B JUMPI PUSH1 0x1 PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF40 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x11E5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x107C PUSH2 0xC8C JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D6 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x115A JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1107 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x110C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1152 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1149 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11E3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DA SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1267 DUP4 DUP4 PUSH0 PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12EB SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1366 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1498 JUMPI PUSH0 PUSH2 0x1375 DUP5 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13DF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13F2 JUMPI POP PUSH2 0x13F0 DUP2 DUP5 PUSH2 0xAD6 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1434 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1496 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14F8 DUP4 DUP4 DUP4 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x15AB JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x156C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1563 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A2 SWAP3 SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1667 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1628 JUMPI POP PUSH2 0x1627 DUP5 DUP5 PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1666 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x164E DUP4 PUSH2 0xC53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x1681 JUMP JUMPDEST DUP2 EQ PUSH2 0x16BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D0 DUP2 PUSH2 0x16AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F8 DUP5 DUP3 DUP6 ADD PUSH2 0x16C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1715 DUP2 PUSH2 0x1701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172E PUSH0 DUP4 ADD DUP5 PUSH2 0x170C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1750 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1790 DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x179A DUP2 DUP6 PUSH2 0x173E JUMP JUMPDEST SWAP4 POP PUSH2 0x17AA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174E JUMP JUMPDEST PUSH2 0x17B3 DUP2 PUSH2 0x1776 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D6 DUP2 DUP5 PUSH2 0x1786 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F0 DUP2 PUSH2 0x17DE JUMP JUMPDEST DUP2 EQ PUSH2 0x17FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180B DUP2 PUSH2 0x17E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1826 JUMPI PUSH2 0x1825 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1833 DUP5 DUP3 DUP6 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1865 DUP3 PUSH2 0x183C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1875 DUP2 PUSH2 0x185B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188E PUSH0 DUP4 ADD DUP5 PUSH2 0x186C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x189D DUP2 PUSH2 0x185B JUMP JUMPDEST DUP2 EQ PUSH2 0x18A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18B8 DUP2 PUSH2 0x1894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D4 JUMPI PUSH2 0x18D3 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18E1 DUP6 DUP3 DUP7 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18F2 DUP6 DUP3 DUP7 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x193A DUP3 PUSH2 0x1776 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1959 JUMPI PUSH2 0x1958 PUSH2 0x1904 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x196B PUSH2 0x1670 JUMP JUMPDEST SWAP1 POP PUSH2 0x1977 DUP3 DUP3 PUSH2 0x1931 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1996 JUMPI PUSH2 0x1995 PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH2 0x199F DUP3 PUSH2 0x1776 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19CC PUSH2 0x19C7 DUP5 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19E8 JUMPI PUSH2 0x19E7 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST PUSH2 0x19F3 DUP5 DUP3 DUP6 PUSH2 0x19AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x167D JUMP JUMPDEST JUMPDEST PUSH2 0x1A66 DUP5 DUP3 DUP6 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A86 JUMPI PUSH2 0x1A85 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A93 DUP7 DUP3 DUP8 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AA4 DUP7 DUP3 DUP8 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AB5 DUP7 DUP3 DUP8 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1AC8 DUP2 PUSH2 0x1701 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE3 DUP2 PUSH2 0x1ABF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0D DUP7 DUP3 DUP8 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B1E DUP7 DUP3 DUP8 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B2F DUP7 DUP3 DUP8 ADD PUSH2 0x1AD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4E JUMPI PUSH2 0x1B4D PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B5B DUP5 DUP3 DUP6 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B6D DUP2 PUSH2 0x17DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B86 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBE DUP2 PUSH2 0x17DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCF DUP4 DUP4 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF1 DUP3 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x1BFB DUP2 DUP6 PUSH2 0x1B96 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C06 DUP4 PUSH2 0x1BA6 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C36 JUMPI DUP2 MLOAD PUSH2 0x1C1D DUP9 DUP3 PUSH2 0x1BC4 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C28 DUP4 PUSH2 0x1BDB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C09 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C5B DUP2 DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH2 0x1C78 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C86 DUP6 DUP3 DUP7 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C97 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH2 0x1CC4 DUP3 PUSH2 0x1776 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE3 PUSH2 0x1CDE DUP5 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CFF JUMPI PUSH2 0x1CFE PUSH2 0x1900 JUMP JUMPDEST JUMPDEST PUSH2 0x1D0A DUP5 DUP3 DUP6 PUSH2 0x19AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D36 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D57 JUMPI PUSH2 0x1D56 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D64 DUP8 DUP3 DUP9 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D75 DUP8 DUP3 DUP9 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D86 DUP8 DUP3 DUP9 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA7 JUMPI PUSH2 0x1DA6 PUSH2 0x167D JUMP JUMPDEST JUMPDEST PUSH2 0x1DB3 DUP8 DUP3 DUP9 ADD PUSH2 0x1D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD5 JUMPI PUSH2 0x1DD4 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE2 DUP6 DUP3 DUP7 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E03 JUMPI PUSH2 0x1E02 PUSH2 0x167D JUMP JUMPDEST JUMPDEST PUSH2 0x1E0F DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E2F JUMPI PUSH2 0x1E2E PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E3C DUP6 DUP3 DUP7 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E4D DUP6 DUP3 DUP7 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E9B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EAE JUMPI PUSH2 0x1EAD PUSH2 0x1E57 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC8 DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1ED2 DUP2 DUP6 PUSH2 0x1EB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF9 DUP3 DUP6 PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F05 DUP3 DUP5 PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F24 PUSH0 DUP4 ADD DUP7 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x1F31 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x1F3E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x186C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FAA DUP3 PUSH2 0x17DE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x1F73 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2043 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x204D DUP7 DUP4 PUSH2 0x2008 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2088 PUSH2 0x2083 PUSH2 0x207E DUP5 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x2065 JUMP JUMPDEST PUSH2 0x17DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A1 DUP4 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x20B5 PUSH2 0x20AD DUP3 PUSH2 0x208F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2014 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x20C9 PUSH2 0x20BD JUMP JUMPDEST PUSH2 0x20D4 DUP2 DUP5 DUP5 PUSH2 0x2098 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20EC PUSH0 DUP3 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20DA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x213C JUMPI PUSH2 0x210D DUP2 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0x2116 DUP5 PUSH2 0x1FF9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2125 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2139 PUSH2 0x2131 DUP6 PUSH2 0x1FF9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x20D9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x215C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2141 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2174 DUP4 DUP4 PUSH2 0x214D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x218D DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH2 0x21B0 DUP3 SLOAD PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x21BB DUP3 DUP3 DUP6 PUSH2 0x20FB JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21EC JUMPI PUSH0 DUP5 ISZERO PUSH2 0x21DA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x21E4 DUP6 DUP3 PUSH2 0x2169 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x224B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x21FA DUP7 PUSH2 0x1FE7 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2221 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21FC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x223E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x223A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x214D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2277 DUP3 PUSH2 0x2253 JUMP JUMPDEST PUSH2 0x2281 DUP2 DUP6 PUSH2 0x225D JUMP JUMPDEST SWAP4 POP PUSH2 0x2291 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174E JUMP JUMPDEST PUSH2 0x229A DUP2 PUSH2 0x1776 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22B8 PUSH0 DUP4 ADD DUP8 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x22C5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x22D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B64 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22E4 DUP2 DUP5 PUSH2 0x226D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22FD DUP2 PUSH2 0x16AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2318 JUMPI PUSH2 0x2317 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2325 DUP5 DUP3 DUP6 ADD PUSH2 0x22EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2341 PUSH0 DUP4 ADD DUP6 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x234E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH9 0x747470733A2F2F636F PUSH19 0x616C2D646561722D676962626F6E2D3933302E PUSH14 0x7970696E6174612E636C6F75642F PUSH10 0x7066732FA26469706673 PC 0x22 SLT KECCAK256 PUSH2 0x576C DUP3 PUSH1 0x5 PUSH2 0x90C3 0xC5 PUSH31 0xD237E99E57F8F85A2A926586DEAC2BB74DCC300864736F6C634300081400 CALLER ",
							"sourceMap": "129:1089:0:-:0;;;157:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;219:5;225:7;2009:5:2;2001;:13;;;;;;:::i;:::-;;2034:7;2024;:17;;;;;;:::i;:::-;;2064:1;2051:12;:14;;;;1935:137;;157:78:0;;129:1089;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;129:1089:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1152": {
									"entryPoint": 3219,
									"id": 1152,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1218": {
									"entryPoint": 4910,
									"id": 1218,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_84": {
									"entryPoint": 3237,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_789": {
									"entryPoint": 5357,
									"id": 789,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1348": {
									"entryPoint": 4153,
									"id": 1348,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_716": {
									"entryPoint": 3155,
									"id": 716,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_752": {
									"entryPoint": 5552,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_948": {
									"entryPoint": 4587,
									"id": 948,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1524": {
									"entryPoint": 3212,
									"id": 1524,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_703": {
									"entryPoint": 4853,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1284": {
									"entryPoint": 3021,
									"id": 1284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1255": {
									"entryPoint": 3792,
									"id": 1255,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_totalsupply_275": {
									"entryPoint": 2524,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_895": {
									"entryPoint": 3269,
									"id": 895,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_550": {
									"entryPoint": 1386,
									"id": 550,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_373": {
									"entryPoint": 1782,
									"id": 373,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_567": {
									"entryPoint": 1359,
									"id": 567,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_600": {
									"entryPoint": 2774,
									"id": 600,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minting_40": {
									"entryPoint": 2729,
									"id": 40,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@msgsenderOwntoken_458": {
									"entryPoint": 1964,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_480": {
									"entryPoint": 1216,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_471": {
									"entryPoint": 1765,
									"id": 471,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_664": {
									"entryPoint": 1734,
									"id": 664,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_690": {
									"entryPoint": 2539,
									"id": 690,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setAppAll_100": {
									"entryPoint": 1718,
									"id": 100,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_583": {
									"entryPoint": 2502,
									"id": 583,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@showtotalsupply_956": {
									"entryPoint": 2530,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_1812": {
									"entryPoint": 2916,
									"id": 1812,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_345": {
									"entryPoint": 991,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_489": {
									"entryPoint": 2358,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_53": {
									"entryPoint": 2568,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_646": {
									"entryPoint": 1463,
									"id": 646,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@urlmaker_75": {
									"entryPoint": 1408,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7377,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6586,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_bool": {
									"entryPoint": 6889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptr": {
									"entryPoint": 7615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7918,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8869,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7953,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8443,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5966,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6396,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8212,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24426:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:12"
															},
															"nodeType": "YulIf",
															"src": "2996:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:12",
														"type": ""
													}
												],
												"src": "2943:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:12",
														"type": ""
													}
												],
												"src": "3071:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:12"
															},
															"nodeType": "YulIf",
															"src": "3292:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:12",
														"type": ""
													}
												],
												"src": "3216:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:12",
														"type": ""
													}
												],
												"src": "3551:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:12",
														"type": ""
													}
												],
												"src": "3683:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:12",
														"type": ""
													}
												],
												"src": "3785:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:12",
														"type": ""
													}
												],
												"src": "3909:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:12"
															},
															"nodeType": "YulIf",
															"src": "4190:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:12",
														"type": ""
													}
												],
												"src": "4137:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:12",
														"type": ""
													}
												],
												"src": "4265:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:12"
															},
															"nodeType": "YulIf",
															"src": "4503:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:12",
														"type": ""
													}
												],
												"src": "4410:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4979:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5119:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5112:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5164:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5184:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5174:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5278:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5281:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5271:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5305:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5295:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5136:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5397:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5427:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5405:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5393:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5393:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5379:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5544:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5546:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5546:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5546:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5487:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5499:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5484:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5484:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5523:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5535:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5520:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5520:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5481:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:62:12"
															},
															"nodeType": "YulIf",
															"src": "5478:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5586:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5575:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5575:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5575:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5351:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5359:4:12",
														"type": ""
													}
												],
												"src": "5322:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5650:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5660:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5670:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5719:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5727:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5699:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5699:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5634:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5643:6:12",
														"type": ""
													}
												],
												"src": "5609:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5811:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5916:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5918:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5918:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5918:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5888:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5896:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5885:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:30:12"
															},
															"nodeType": "YulIf",
															"src": "5882:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5948:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5978:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5956:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5948:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6022:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6034:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6040:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6022:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5795:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5806:4:12",
														"type": ""
													}
												],
												"src": "5744:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6122:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6145:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6150:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6132:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6132:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6182:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6187:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6178:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6178:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6196:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6104:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6109:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6114:6:12",
														"type": ""
													}
												],
												"src": "6058:146:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:341:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6304:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6371:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6329:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6329:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6313:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6313:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6304:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6395:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6402:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6388:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6388:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6418:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6433:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6440:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6422:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6483:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "6485:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6485:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6485:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6464:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6469:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6460:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6460:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6478:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6457:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:25:12"
															},
															"nodeType": "YulIf",
															"src": "6454:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6612:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6617:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6622:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6575:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6575:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6575:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6267:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6272:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6280:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6288:5:12",
														"type": ""
													}
												],
												"src": "6210:425:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6717:278:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6766:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6768:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6768:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6768:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6745:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6753:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6741:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6741:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6760:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6737:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6737:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6730:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6730:35:12"
															},
															"nodeType": "YulIf",
															"src": "6727:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6858:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6885:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6872:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6862:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6901:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6962:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6970:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6977:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6985:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6910:47:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6901:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6695:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6703:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6711:5:12",
														"type": ""
													}
												],
												"src": "6655:340:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7077:433:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7123:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7125:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7125:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7125:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7098:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7094:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7090:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:32:12"
															},
															"nodeType": "YulIf",
															"src": "7087:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "7216:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7231:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7262:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7273:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7258:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7258:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7245:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7245:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7235:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7323:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7325:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7325:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7325:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7295:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7303:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7292:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7292:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "7289:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7420:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7465:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7476:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7461:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7461:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7485:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7430:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7430:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7420:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7047:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7058:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7070:6:12",
														"type": ""
													}
												],
												"src": "7001:509:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7616:519:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7662:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7664:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7664:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7664:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7637:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7646:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7633:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7633:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7658:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7629:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7629:32:12"
															},
															"nodeType": "YulIf",
															"src": "7626:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "7755:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7770:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7784:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7774:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7799:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7834:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7845:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7830:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7830:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7854:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7809:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7809:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7799:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7882:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7897:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7911:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7901:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7927:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7962:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7973:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7958:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7958:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7982:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7937:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7937:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7927:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8010:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8025:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8039:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8029:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8055:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8090:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8101:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8086:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8086:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8110:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8065:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8065:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8055:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7570:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7581:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7593:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7601:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7609:6:12",
														"type": ""
													}
												],
												"src": "7516:619:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8181:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8235:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8244:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8247:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8237:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8237:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8237:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8204:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8226:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "8211:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8211:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8201:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8201:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8194:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:40:12"
															},
															"nodeType": "YulIf",
															"src": "8191:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8174:5:12",
														"type": ""
													}
												],
												"src": "8141:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8312:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8322:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8344:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8331:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8331:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8322:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8384:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8360:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8360:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8360:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8290:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8298:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8306:5:12",
														"type": ""
													}
												],
												"src": "8263:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8499:516:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8545:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8547:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8547:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8547:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8520:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8529:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8516:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8516:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8541:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8512:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8512:32:12"
															},
															"nodeType": "YulIf",
															"src": "8509:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "8638:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8653:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8667:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8657:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8682:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8717:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8728:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8713:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8713:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8737:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8692:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8692:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8682:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8765:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8780:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8794:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8784:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8810:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8845:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8856:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8841:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8841:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8865:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8820:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8820:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8810:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8893:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8908:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8922:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8912:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8938:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8970:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8981:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8966:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8966:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8990:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "8948:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8948:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8938:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8453:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8464:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8476:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8484:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8492:6:12",
														"type": ""
													}
												],
												"src": "8402:613:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9087:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9133:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9135:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9135:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9135:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9108:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9104:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9104:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9129:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9100:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9100:32:12"
															},
															"nodeType": "YulIf",
															"src": "9097:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "9226:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9241:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9255:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9245:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9270:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9305:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9316:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9301:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9301:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9325:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9280:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9280:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9270:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9057:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9068:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9080:6:12",
														"type": ""
													}
												],
												"src": "9021:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9421:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9438:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9461:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9443:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9443:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9431:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9431:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9431:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9409:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9416:3:12",
														"type": ""
													}
												],
												"src": "9356:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9578:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9588:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9600:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9611:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9596:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9588:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9668:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9681:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9692:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9677:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9677:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9624:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9624:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9624:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9550:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9562:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9573:4:12",
														"type": ""
													}
												],
												"src": "9480:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9782:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9793:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9809:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9803:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9803:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9793:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9765:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9775:6:12",
														"type": ""
													}
												],
												"src": "9708:114:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9939:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9956:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9961:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9949:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9949:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9949:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9977:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9996:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10001:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9992:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9992:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9977:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9911:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9916:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9927:11:12",
														"type": ""
													}
												],
												"src": "9828:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10090:60:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10100:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "10108:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10100:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10121:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10133:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10138:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10129:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10129:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10121:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10077:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10085:4:12",
														"type": ""
													}
												],
												"src": "10018:132:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10211:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10228:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10251:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10233:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10233:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10221:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10221:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10221:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10199:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10206:3:12",
														"type": ""
													}
												],
												"src": "10156:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10350:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10394:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10402:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10360:33:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10360:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10360:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10415:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10433:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10438:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10429:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10429:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "10415:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10323:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10331:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "10339:10:12",
														"type": ""
													}
												],
												"src": "10270:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10530:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10540:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10552:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10557:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10548:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "10540:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10517:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "10525:4:12",
														"type": ""
													}
												],
												"src": "10455:113:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10728:608:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10738:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10800:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10752:47:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10752:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10742:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10815:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10896:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10901:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10822:73:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10815:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10917:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10982:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10932:49:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10932:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10921:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10997:21:12",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "11011:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "11001:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11087:224:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11101:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11128:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11122:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11122:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "11105:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11148:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "11199:13:12"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11214:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "11155:43:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11155:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11148:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11231:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11294:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "11241:52:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11241:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11231:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11049:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11052:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11046:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11046:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11060:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11062:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11071:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11074:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11067:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11067:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11062:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11031:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11033:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11042:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "11037:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11027:284:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11320:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11327:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11320:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10707:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10714:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10723:3:12",
														"type": ""
													}
												],
												"src": "10604:732:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11490:225:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11500:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11512:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11523:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11500:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11547:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11558:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11543:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11543:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11566:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11572:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11562:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11562:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11536:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11536:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11536:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11592:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11694:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11703:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11600:93:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11600:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11592:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11462:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11474:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11485:4:12",
														"type": ""
													}
												],
												"src": "11342:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11801:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11847:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11849:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11849:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11849:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11822:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11831:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11818:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11818:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11843:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11814:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11814:32:12"
															},
															"nodeType": "YulIf",
															"src": "11811:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "11940:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11955:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11969:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11959:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11984:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12019:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12030:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12015:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12015:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12039:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11994:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11994:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11984:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12067:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12082:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12096:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12086:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12112:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12144:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12155:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12140:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12140:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12164:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "12122:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12122:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12112:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11763:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11774:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11786:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11794:6:12",
														"type": ""
													}
												],
												"src": "11721:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12261:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12366:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12368:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12368:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12368:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12338:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12346:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12335:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12335:30:12"
															},
															"nodeType": "YulIf",
															"src": "12332:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12398:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12428:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "12406:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12406:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "12398:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12472:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "12484:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12490:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12480:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12480:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "12472:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12245:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12256:4:12",
														"type": ""
													}
												],
												"src": "12195:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12591:340:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12601:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12667:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12626:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12626:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12610:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12610:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12601:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12691:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12698:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12684:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12684:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12684:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12714:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12729:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12736:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12725:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12725:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "12718:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12779:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "12781:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12781:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12781:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12760:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12765:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12756:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12756:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12774:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12753:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12753:25:12"
															},
															"nodeType": "YulIf",
															"src": "12750:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12908:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "12913:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12918:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12871:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12871:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12871:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12564:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12569:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12577:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12585:5:12",
														"type": ""
													}
												],
												"src": "12508:423:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13011:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13060:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "13062:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13062:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13062:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13039:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13047:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13035:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13035:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "13054:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13031:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13031:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13024:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13024:35:12"
															},
															"nodeType": "YulIf",
															"src": "13021:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13152:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13179:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "13166:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13166:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13156:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13195:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13255:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13263:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13251:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13251:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13270:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "13278:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13204:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13204:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "13195:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12989:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12997:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "13005:5:12",
														"type": ""
													}
												],
												"src": "12950:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13420:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13467:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13469:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13469:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13469:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13441:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13450:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13437:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13462:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13433:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13433:33:12"
															},
															"nodeType": "YulIf",
															"src": "13430:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "13560:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13575:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13589:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13579:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13604:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13639:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13650:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13635:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13635:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13659:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13614:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13614:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13604:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13687:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13702:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13716:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13706:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13732:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13767:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13778:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13763:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13763:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13787:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13742:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13742:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13732:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13815:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13830:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13844:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13834:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13860:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13895:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13906:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13891:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13891:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13915:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13870:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13870:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "13860:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13943:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13958:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13989:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14000:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13985:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13985:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13972:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13972:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13962:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14051:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "14053:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14053:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14053:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14023:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14031:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14020:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14020:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "14017:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14148:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14192:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14203:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14188:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14188:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14212:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14158:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14158:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "14148:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13366:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13377:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13389:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13397:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13405:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13413:6:12",
														"type": ""
													}
												],
												"src": "13294:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14336:561:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14382:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14384:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14384:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14384:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14357:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14366:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14353:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14353:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14378:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14349:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14349:32:12"
															},
															"nodeType": "YulIf",
															"src": "14346:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "14475:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14490:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14504:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14494:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14519:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14554:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14565:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14550:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14550:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14574:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14529:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14529:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14519:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14602:288:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14617:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14648:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14659:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14644:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14644:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "14631:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14631:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14621:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14710:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "14712:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14712:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14712:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14682:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14690:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14679:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14679:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "14676:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14807:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14852:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14863:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14848:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14848:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14872:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14817:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14817:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "14807:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14298:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14309:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14321:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14329:6:12",
														"type": ""
													}
												],
												"src": "14243:654:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14986:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15032:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15034:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15034:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15034:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15007:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15016:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15003:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15003:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15028:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14999:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14999:32:12"
															},
															"nodeType": "YulIf",
															"src": "14996:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "15125:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15140:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15154:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15144:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15169:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15204:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15215:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15200:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15200:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15224:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15179:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15179:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15169:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15252:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15267:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15281:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15271:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15297:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15332:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15343:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15328:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15328:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15352:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15307:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15307:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15297:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14948:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14959:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14971:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14979:6:12",
														"type": ""
													}
												],
												"src": "14903:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15411:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15428:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15431:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15421:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15421:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15421:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15525:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15528:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15518:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15518:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15518:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15549:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15552:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15542:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15542:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15542:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "15383:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15620:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15630:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15644:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15650:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15640:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15640:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15630:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15661:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15691:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15697:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15687:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15687:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "15665:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15738:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15752:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "15766:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15774:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15762:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15752:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "15718:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15711:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15711:26:12"
															},
															"nodeType": "YulIf",
															"src": "15708:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15841:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "15855:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15855:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15855:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "15805:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15828:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15836:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15825:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15825:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15802:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15802:38:12"
															},
															"nodeType": "YulIf",
															"src": "15799:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15604:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15613:6:12",
														"type": ""
													}
												],
												"src": "15569:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16009:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16019:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16034:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16019:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15981:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15986:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15997:11:12",
														"type": ""
													}
												],
												"src": "15895:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16159:280:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16169:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16216:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16183:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16183:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16173:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16231:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16315:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16320:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16238:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16238:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16231:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16375:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16382:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16371:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16371:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16389:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16394:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16336:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16336:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16336:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16410:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16421:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16426:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16417:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16417:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16410:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16140:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16147:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16155:3:12",
														"type": ""
													}
												],
												"src": "16049:390:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16629:251:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16640:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16738:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16647:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16647:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16640:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16752:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16841:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16850:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16759:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16759:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16752:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16864:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16871:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16864:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16600:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16606:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16614:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16625:3:12",
														"type": ""
													}
												],
												"src": "16445:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17040:288:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17050:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17062:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17073:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17058:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17058:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17050:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17130:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17143:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17154:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17139:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17139:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17086:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17086:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17086:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17211:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17224:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17235:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17220:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17220:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17167:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17167:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17167:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17293:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17306:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17317:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17302:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17302:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17249:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17249:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17249:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16996:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17008:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17016:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17024:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17035:4:12",
														"type": ""
													}
												],
												"src": "16886:442:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17362:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17379:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17382:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17372:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17372:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17372:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17476:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17479:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17469:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17469:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17469:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17500:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17503:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17493:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17493:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17493:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17334:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17548:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17565:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17568:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17558:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17558:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17558:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17662:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17665:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17655:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17655:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17655:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17686:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17689:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17679:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17679:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "17520:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17749:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17759:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17786:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17768:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17768:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17759:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17882:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17884:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17884:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17884:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17807:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17814:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17804:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17804:77:12"
															},
															"nodeType": "YulIf",
															"src": "17801:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17913:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17924:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17931:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17920:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17920:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17913:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17735:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17745:3:12",
														"type": ""
													}
												],
												"src": "17706:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17999:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18009:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "18017:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18009:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18037:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18040:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18030:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18030:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18030:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18053:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18071:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18074:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "18061:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18061:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18053:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "17986:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17994:4:12",
														"type": ""
													}
												],
												"src": "17945:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18136:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18146:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18164:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18171:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18160:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18160:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18176:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18156:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18156:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18146:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18119:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "18129:6:12",
														"type": ""
													}
												],
												"src": "18092:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18244:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18254:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "18279:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18285:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "18275:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18275:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "18254:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "18219:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18225:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "18235:8:12",
														"type": ""
													}
												],
												"src": "18191:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18380:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18390:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "18411:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18423:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18407:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18407:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "18394:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18434:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "18465:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18476:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "18446:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18446:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "18438:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18552:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "18583:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "18594:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "18564:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18564:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "18552:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18612:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18625:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "18636:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18632:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18632:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18621:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18621:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18612:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18651:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18664:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "18675:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "18685:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18671:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18671:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18661:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18661:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18651:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18341:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "18348:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "18360:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "18373:6:12",
														"type": ""
													}
												],
												"src": "18304:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18735:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18745:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18752:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18745:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18721:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18731:3:12",
														"type": ""
													}
												],
												"src": "18703:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18829:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18839:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18897:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18879:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18879:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "18870:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18870:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18852:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18852:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18839:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18809:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18819:9:12",
														"type": ""
													}
												],
												"src": "18769:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18964:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18974:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18981:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18974:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18950:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18960:3:12",
														"type": ""
													}
												],
												"src": "18917:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19074:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19084:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "19139:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19108:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19108:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "19088:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "19163:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "19203:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "19197:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19197:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19210:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "19242:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "19218:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19218:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "19169:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19169:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "19156:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19156:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19156:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "19051:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19057:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "19065:7:12",
														"type": ""
													}
												],
												"src": "18998:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19322:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19332:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19339:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19332:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19318:3:12",
														"type": ""
													}
												],
												"src": "19273:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19405:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19415:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19429:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19429:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "19419:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "19514:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19520:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "19528:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19470:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19470:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19470:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "19391:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19397:6:12",
														"type": ""
													}
												],
												"src": "19352:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19597:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19664:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "19708:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19715:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "19678:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19678:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19678:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "19617:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "19624:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19614:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19614:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19629:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19631:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "19644:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19651:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19640:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19640:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "19631:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19611:2:12",
																"statements": []
															},
															"src": "19607:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "19585:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19592:3:12",
														"type": ""
													}
												],
												"src": "19547:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19818:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19844:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19858:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "19906:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "19874:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19874:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "19862:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19925:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "19948:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "19976:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "19958:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19958:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19944:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19944:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "19929:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "20145:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "20147:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "20162:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "20147:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "20129:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20141:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "20126:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20126:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "20123:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "20214:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "20231:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "20259:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "20241:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20241:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20227:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20227:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "20185:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20185:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20185:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "19835:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19840:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19832:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19832:11:12"
															},
															"nodeType": "YulIf",
															"src": "19829:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "19794:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "19801:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "19806:10:12",
														"type": ""
													}
												],
												"src": "19739:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20351:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20361:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "20386:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20392:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "20382:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20382:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "20361:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "20326:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20332:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "20342:8:12",
														"type": ""
													}
												],
												"src": "20288:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20462:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20472:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20521:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "20524:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "20517:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20517:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20536:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "20532:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20532:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "20488:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20488:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "20484:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20484:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "20476:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20549:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20563:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "20569:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20559:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20559:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "20549:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20439:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "20445:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "20455:6:12",
														"type": ""
													}
												],
												"src": "20411:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20666:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20799:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20826:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "20832:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "20807:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20807:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "20799:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20845:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20856:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20866:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "20869:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "20862:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20862:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "20853:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20853:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "20845:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20647:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "20653:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "20661:4:12",
														"type": ""
													}
												],
												"src": "20585:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20977:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20988:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "21035:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21002:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21002:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "20992:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21124:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "21126:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21126:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21126:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "21096:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21104:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21093:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21093:30:12"
															},
															"nodeType": "YulIf",
															"src": "21090:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21156:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "21202:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "21196:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21196:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "21170:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21170:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "21160:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "21301:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "21307:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "21315:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "21255:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21255:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21255:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21332:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21349:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "21336:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21360:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21373:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "21360:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "21424:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "21438:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "21457:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "21469:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "21465:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21465:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "21453:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21453:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "21442:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "21489:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "21535:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "21503:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21503:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "21493:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "21553:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21562:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "21557:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "21621:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "21646:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "21664:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "21669:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "21660:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "21660:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "21654:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "21654:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "21639:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21639:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "21639:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "21698:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "21712:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21720:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "21708:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21708:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "21698:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "21739:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "21756:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21767:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "21752:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21752:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "21739:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "21587:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "21590:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "21584:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21584:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "21599:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "21601:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "21610:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21613:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "21606:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21606:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21601:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "21580:3:12",
																					"statements": []
																				},
																				"src": "21576:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "21820:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "21838:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "21865:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "21870:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "21861:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "21861:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "21855:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21855:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "21842:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "21905:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "21932:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "21947:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "21955:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "21943:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "21943:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "21913:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "21913:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "21898:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21898:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "21898:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "21803:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "21812:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "21800:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21800:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "21797:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "21996:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "22010:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "22018:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "22006:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "22006:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "22022:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "22002:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22002:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "21989:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21989:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "21989:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "21417:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21422:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "22052:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "22066:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22079:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "22070:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "22103:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "22121:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "22140:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "22145:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "22136:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "22136:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "22130:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22130:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "22121:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "22096:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "22093:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "22190:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "22249:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "22256:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "22196:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22196:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "22183:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22183:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "22183:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "22044:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "21397:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21405:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21394:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21394:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "21387:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "20966:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20972:3:12",
														"type": ""
													}
												],
												"src": "20885:1395:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22344:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22355:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22371:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22365:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22365:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22355:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22327:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22337:6:12",
														"type": ""
													}
												],
												"src": "22286:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22485:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22502:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22507:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22495:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22495:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22495:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22523:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22542:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22547:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22538:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22538:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22523:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22457:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22462:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22473:11:12",
														"type": ""
													}
												],
												"src": "22390:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22654:283:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22664:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22710:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22678:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22678:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22668:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22725:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22790:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22795:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22732:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22732:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22725:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22850:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22857:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22846:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22846:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22864:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22869:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "22811:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22811:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22811:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22885:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22896:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "22923:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "22901:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22901:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22892:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22892:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22885:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22635:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22642:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22650:3:12",
														"type": ""
													}
												],
												"src": "22564:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23143:440:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23153:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23165:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23176:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23161:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23161:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23153:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23234:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23247:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23258:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23243:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23243:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23190:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23190:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23190:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23315:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23328:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23339:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23324:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23324:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23271:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23271:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23271:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23397:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23410:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23421:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23406:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23406:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23353:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23353:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23353:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23446:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23457:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23442:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23442:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23466:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23472:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23462:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23462:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23435:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23435:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23435:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23492:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "23562:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23571:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23500:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23500:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23492:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23091:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "23103:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23111:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23119:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23127:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23138:4:12",
														"type": ""
													}
												],
												"src": "22943:640:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23651:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23661:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "23676:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23670:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23670:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23661:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23718:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "23692:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23692:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23692:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "23629:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23637:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23645:5:12",
														"type": ""
													}
												],
												"src": "23589:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23812:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23858:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "23860:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23860:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23860:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23833:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23842:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23829:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23829:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23854:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "23825:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23825:32:12"
															},
															"nodeType": "YulIf",
															"src": "23822:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "23951:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "23966:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23980:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "23970:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "23995:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "24040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "24051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "24005:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24005:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "23995:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23782:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "23793:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23805:6:12",
														"type": ""
													}
												],
												"src": "23736:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24217:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24227:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24239:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24250:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24235:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24235:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24227:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24307:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24320:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24331:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24316:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24316:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24263:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24263:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24263:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24388:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24401:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24412:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24397:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24397:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24344:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24344:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24344:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24181:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24193:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24201:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24212:4:12",
														"type": ""
													}
												],
												"src": "24091:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c806370a08231116100ab578063abec71011161006f578063abec710114610329578063b88d4fde14610347578063c87b56dd14610363578063e2c4c4b214610393578063e985e9c5146103af5761011f565b806370a0823114610271578063828e7a01146102a157806395d89b41146102d1578063a22cb465146102ef578063a393dc441461030b5761011f565b80631b00fd16116100f25780631b00fd16146101bd57806323b872dd146101ed57806329d6724e1461020957806342842e0e146102255780636352211e146102415761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc14610171578063095ea7b3146101a1575b5f80fd5b61013d600480360381019061013891906116d6565b6103df565b60405161014a919061171b565b60405180910390f35b61015b6104c0565b60405161016891906117be565b60405180910390f35b61018b60048036038101906101869190611811565b61054f565b604051610198919061187b565b60405180910390f35b6101bb60048036038101906101b691906118be565b61056a565b005b6101d760048036038101906101d29190611a28565b610580565b6040516101e491906117be565b60405180910390f35b61020760048036038101906102029190611a6f565b6105b7565b005b610223600480360381019061021e9190611ae9565b6106b6565b005b61023f600480360381019061023a9190611a6f565b6106c6565b005b61025b60048036038101906102569190611811565b6106e5565b604051610268919061187b565b60405180910390f35b61028b60048036038101906102869190611b39565b6106f6565b6040516102989190611b73565b60405180910390f35b6102bb60048036038101906102b69190611b39565b6107ac565b6040516102c89190611c43565b60405180910390f35b6102d9610936565b6040516102e691906117be565b60405180910390f35b61030960048036038101906103049190611c63565b6109c6565b005b6103136109dc565b6040516103209190611b73565b60405180910390f35b6103316109e2565b60405161033e9190611b73565b60405180910390f35b610361600480360381019061035c9190611d3f565b6109eb565b005b61037d60048036038101906103789190611811565b610a08565b60405161038a91906117be565b60405180910390f35b6103ad60048036038101906103a89190611dbf565b610aa9565b005b6103c960048036038101906103c49190611e19565b610ad6565b6040516103d6919061171b565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104a957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104b957506104b882610b64565b5b9050919050565b60605f80546104ce90611e84565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa90611e84565b80156105455780601f1061051c57610100808354040283529160200191610545565b820191905f5260205f20905b81548152906001019060200180831161052857829003601f168201915b5050505050905090565b5f61055982610bcd565b5061056382610c53565b9050919050565b61057c8282610577610c8c565b610c93565b5050565b60605f61058b610ca5565b905080836040516020016105a0929190611eee565b604051602081830303815290604052915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610627575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161061e919061187b565b60405180910390fd5b5f61063a8383610635610c8c565b610cc5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106b0578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106a793929190611f11565b60405180910390fd5b50505050565b6106c1838383610ed0565b505050565b6106e083838360405180602001604052805f8152506109eb565b505050565b5f6106ef82610bcd565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610767575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161075e919061187b565b60405180910390fd5b60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60605f60025467ffffffffffffffff8111156107cb576107ca611904565b5b6040519080825280602002602001820160405280156107f95781602001602082028036833780820191505090505b5090505f805b60025481101561088657610812816106e5565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610873578083838151811061085857610857611f46565b5b602002602001018181525050818061086f90611fa0565b9250505b808061087e90611fa0565b9150506107ff565b505f8167ffffffffffffffff8111156108a2576108a1611904565b5b6040519080825280602002602001820160405280156108d05781602001602082028036833780820191505090505b5090505f5b8281101561092a578381815181106108f0576108ef611f46565b5b602002602001015182828151811061090b5761090a611f46565b5b602002602001018181525050808061092290611fa0565b9150506108d5565b50809350505050919050565b60606001805461094590611e84565b80601f016020809104026020016040519081016040528092919081815260200182805461097190611e84565b80156109bc5780601f10610993576101008083540402835291602001916109bc565b820191905f5260205f20905b81548152906001019060200180831161099f57829003601f168201915b5050505050905090565b6109d86109d1610c8c565b8383610ed0565b5050565b60025481565b5f600254905090565b6109f68484846105b7565b610a0284848484611039565b50505050565b606060075f8381526020019081526020015f208054610a2690611e84565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5290611e84565b8015610a9d5780601f10610a7457610100808354040283529160200191610a9d565b820191905f5260205f20905b815481529060010190602001808311610a8057829003601f168201915b50505050509050919050565b8060075f8481526020019081526020015f209081610ac79190612184565b50610ad233836111eb565b5050565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610bd8836112f5565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c4a57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c419190611b73565b60405180910390fd5b80915050919050565b5f60055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ca0838383600161132e565b505050565b606060405180606001604052806032815260200161235660329139905090565b5f80610cd0846112f5565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d1157610d108184866114ed565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d9c57610d505f855f8061132e565b600160045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e1b57600160045f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460035f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f4057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f37919061187b565b60405180910390fd5b8060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161102c919061171b565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156111e5578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261107c610c8c565b8685856040518563ffffffff1660e01b815260040161109e94939291906122a5565b6020604051808303815f875af19250505080156110d957506040513d601f19601f820116820180604052508101906110d69190612303565b60015b61115a573d805f8114611107576040519150601f19603f3d011682016040523d82523d5f602084013e61110c565b606091505b505f81510361115257836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611149919061187b565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e357836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111da919061187b565b60405180910390fd5b505b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361125b575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611252919061187b565b60405180910390fd5b5f61126783835f610cc5565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112d9575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016112d0919061187b565b60405180910390fd5b60025f8154809291906112eb90611fa0565b9190505550505050565b5f60035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061136657505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611498575f61137584610bcd565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113df57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113f257506113f08184610ad6565b155b1561143457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161142b919061187b565b60405180910390fd5b811561149657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360055f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114f88383836115b0565b6115ab575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361156c57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016115639190611b73565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016115a292919061232e565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561166757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061162857506116278484610ad6565b5b8061166657508273ffffffffffffffffffffffffffffffffffffffff1661164e83610c53565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116b581611681565b81146116bf575f80fd5b50565b5f813590506116d0816116ac565b92915050565b5f602082840312156116eb576116ea611679565b5b5f6116f8848285016116c2565b91505092915050565b5f8115159050919050565b61171581611701565b82525050565b5f60208201905061172e5f83018461170c565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561176b578082015181840152602081019050611750565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61179082611734565b61179a818561173e565b93506117aa81856020860161174e565b6117b381611776565b840191505092915050565b5f6020820190508181035f8301526117d68184611786565b905092915050565b5f819050919050565b6117f0816117de565b81146117fa575f80fd5b50565b5f8135905061180b816117e7565b92915050565b5f6020828403121561182657611825611679565b5b5f611833848285016117fd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118658261183c565b9050919050565b6118758161185b565b82525050565b5f60208201905061188e5f83018461186c565b92915050565b61189d8161185b565b81146118a7575f80fd5b50565b5f813590506118b881611894565b92915050565b5f80604083850312156118d4576118d3611679565b5b5f6118e1858286016118aa565b92505060206118f2858286016117fd565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61193a82611776565b810181811067ffffffffffffffff8211171561195957611958611904565b5b80604052505050565b5f61196b611670565b90506119778282611931565b919050565b5f67ffffffffffffffff82111561199657611995611904565b5b61199f82611776565b9050602081019050919050565b828183375f83830152505050565b5f6119cc6119c78461197c565b611962565b9050828152602081018484840111156119e8576119e7611900565b5b6119f38482856119ac565b509392505050565b5f82601f830112611a0f57611a0e6118fc565b5b8135611a1f8482602086016119ba565b91505092915050565b5f60208284031215611a3d57611a3c611679565b5b5f82013567ffffffffffffffff811115611a5a57611a5961167d565b5b611a66848285016119fb565b91505092915050565b5f805f60608486031215611a8657611a85611679565b5b5f611a93868287016118aa565b9350506020611aa4868287016118aa565b9250506040611ab5868287016117fd565b9150509250925092565b611ac881611701565b8114611ad2575f80fd5b50565b5f81359050611ae381611abf565b92915050565b5f805f60608486031215611b0057611aff611679565b5b5f611b0d868287016118aa565b9350506020611b1e868287016118aa565b9250506040611b2f86828701611ad5565b9150509250925092565b5f60208284031215611b4e57611b4d611679565b5b5f611b5b848285016118aa565b91505092915050565b611b6d816117de565b82525050565b5f602082019050611b865f830184611b64565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611bbe816117de565b82525050565b5f611bcf8383611bb5565b60208301905092915050565b5f602082019050919050565b5f611bf182611b8c565b611bfb8185611b96565b9350611c0683611ba6565b805f5b83811015611c36578151611c1d8882611bc4565b9750611c2883611bdb565b925050600181019050611c09565b5085935050505092915050565b5f6020820190508181035f830152611c5b8184611be7565b905092915050565b5f8060408385031215611c7957611c78611679565b5b5f611c86858286016118aa565b9250506020611c9785828601611ad5565b9150509250929050565b5f67ffffffffffffffff821115611cbb57611cba611904565b5b611cc482611776565b9050602081019050919050565b5f611ce3611cde84611ca1565b611962565b905082815260208101848484011115611cff57611cfe611900565b5b611d0a8482856119ac565b509392505050565b5f82601f830112611d2657611d256118fc565b5b8135611d36848260208601611cd1565b91505092915050565b5f805f8060808587031215611d5757611d56611679565b5b5f611d64878288016118aa565b9450506020611d75878288016118aa565b9350506040611d86878288016117fd565b925050606085013567ffffffffffffffff811115611da757611da661167d565b5b611db387828801611d12565b91505092959194509250565b5f8060408385031215611dd557611dd4611679565b5b5f611de2858286016117fd565b925050602083013567ffffffffffffffff811115611e0357611e0261167d565b5b611e0f858286016119fb565b9150509250929050565b5f8060408385031215611e2f57611e2e611679565b5b5f611e3c858286016118aa565b9250506020611e4d858286016118aa565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e9b57607f821691505b602082108103611eae57611ead611e57565b5b50919050565b5f81905092915050565b5f611ec882611734565b611ed28185611eb4565b9350611ee281856020860161174e565b80840191505092915050565b5f611ef98285611ebe565b9150611f058284611ebe565b91508190509392505050565b5f606082019050611f245f83018661186c565b611f316020830185611b64565b611f3e604083018461186c565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611faa826117de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611fdc57611fdb611f73565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612008565b61204d8683612008565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61208861208361207e846117de565b612065565b6117de565b9050919050565b5f819050919050565b6120a18361206e565b6120b56120ad8261208f565b848454612014565b825550505050565b5f90565b6120c96120bd565b6120d4818484612098565b505050565b5b818110156120f7576120ec5f826120c1565b6001810190506120da565b5050565b601f82111561213c5761210d81611fe7565b61211684611ff9565b81016020851015612125578190505b61213961213185611ff9565b8301826120d9565b50505b505050565b5f82821c905092915050565b5f61215c5f1984600802612141565b1980831691505092915050565b5f612174838361214d565b9150826002028217905092915050565b61218d82611734565b67ffffffffffffffff8111156121a6576121a5611904565b5b6121b08254611e84565b6121bb8282856120fb565b5f60209050601f8311600181146121ec575f84156121da578287015190505b6121e48582612169565b86555061224b565b601f1984166121fa86611fe7565b5f5b82811015612221578489015182556001820191506020850194506020810190506121fc565b8683101561223e578489015161223a601f89168261214d565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f61227782612253565b612281818561225d565b935061229181856020860161174e565b61229a81611776565b840191505092915050565b5f6080820190506122b85f83018761186c565b6122c5602083018661186c565b6122d26040830185611b64565b81810360608301526122e4818461226d565b905095945050505050565b5f815190506122fd816116ac565b92915050565b5f6020828403121561231857612317611679565b5b5f612325848285016122ef565b91505092915050565b5f6040820190506123415f83018561186c565b61234e6020830184611b64565b939250505056fe68747470733a2f2f636f72616c2d646561722d676962626f6e2d3933302e6d7970696e6174612e636c6f75642f697066732fa264697066735822122061576c8260056190c3c57e00d237e99e57f8f85a2a926586deac2bb74dcc300864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xABEC7101 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xABEC7101 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xE2C4C4B2 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3AF JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x828E7A01 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA393DC44 EQ PUSH2 0x30B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1B00FD16 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1B00FD16 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x29D6724E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x241 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4A9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4B9 JUMPI POP PUSH2 0x4B8 DUP3 PUSH2 0xB64 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x545 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x528 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x559 DUP3 PUSH2 0xBCD JUMP JUMPDEST POP PUSH2 0x563 DUP3 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57C DUP3 DUP3 PUSH2 0x577 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x58B PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x627 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x63A DUP4 DUP4 PUSH2 0x635 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B0 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6C1 DUP4 DUP4 DUP4 PUSH2 0xED0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6E0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6EF DUP3 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x767 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7CB JUMPI PUSH2 0x7CA PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7F9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x886 JUMPI PUSH2 0x812 DUP2 PUSH2 0x6E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x873 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x858 JUMPI PUSH2 0x857 PUSH2 0x1F46 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x86F SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x87E SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7FF JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8A2 JUMPI PUSH2 0x8A1 PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x92A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8F0 JUMPI PUSH2 0x8EF PUSH2 0x1F46 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0x1F46 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x922 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D5 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x945 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x971 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x993 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D8 PUSH2 0x9D1 PUSH2 0xC8C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xED0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9F6 DUP5 DUP5 DUP5 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0xA02 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1039 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xA26 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA52 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA74 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xAC7 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST POP PUSH2 0xAD2 CALLER DUP4 PUSH2 0x11EB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBD8 DUP4 PUSH2 0x12F5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCA0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x132E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2356 PUSH1 0x32 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCD0 DUP5 PUSH2 0x12F5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD11 JUMPI PUSH2 0xD10 DUP2 DUP5 DUP7 PUSH2 0x14ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD9C JUMPI PUSH2 0xD50 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x132E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE1B JUMPI PUSH1 0x1 PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF40 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x11E5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x107C PUSH2 0xC8C JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D6 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x115A JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1107 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x110C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1152 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1149 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11E3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DA SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1267 DUP4 DUP4 PUSH0 PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12EB SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1366 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1498 JUMPI PUSH0 PUSH2 0x1375 DUP5 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13DF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13F2 JUMPI POP PUSH2 0x13F0 DUP2 DUP5 PUSH2 0xAD6 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1434 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1496 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14F8 DUP4 DUP4 DUP4 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x15AB JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x156C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1563 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A2 SWAP3 SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1667 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1628 JUMPI POP PUSH2 0x1627 DUP5 DUP5 PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1666 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x164E DUP4 PUSH2 0xC53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x1681 JUMP JUMPDEST DUP2 EQ PUSH2 0x16BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D0 DUP2 PUSH2 0x16AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F8 DUP5 DUP3 DUP6 ADD PUSH2 0x16C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1715 DUP2 PUSH2 0x1701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172E PUSH0 DUP4 ADD DUP5 PUSH2 0x170C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1750 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1790 DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x179A DUP2 DUP6 PUSH2 0x173E JUMP JUMPDEST SWAP4 POP PUSH2 0x17AA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174E JUMP JUMPDEST PUSH2 0x17B3 DUP2 PUSH2 0x1776 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D6 DUP2 DUP5 PUSH2 0x1786 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F0 DUP2 PUSH2 0x17DE JUMP JUMPDEST DUP2 EQ PUSH2 0x17FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180B DUP2 PUSH2 0x17E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1826 JUMPI PUSH2 0x1825 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1833 DUP5 DUP3 DUP6 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1865 DUP3 PUSH2 0x183C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1875 DUP2 PUSH2 0x185B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188E PUSH0 DUP4 ADD DUP5 PUSH2 0x186C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x189D DUP2 PUSH2 0x185B JUMP JUMPDEST DUP2 EQ PUSH2 0x18A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18B8 DUP2 PUSH2 0x1894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D4 JUMPI PUSH2 0x18D3 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18E1 DUP6 DUP3 DUP7 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18F2 DUP6 DUP3 DUP7 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x193A DUP3 PUSH2 0x1776 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1959 JUMPI PUSH2 0x1958 PUSH2 0x1904 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x196B PUSH2 0x1670 JUMP JUMPDEST SWAP1 POP PUSH2 0x1977 DUP3 DUP3 PUSH2 0x1931 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1996 JUMPI PUSH2 0x1995 PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH2 0x199F DUP3 PUSH2 0x1776 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19CC PUSH2 0x19C7 DUP5 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19E8 JUMPI PUSH2 0x19E7 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST PUSH2 0x19F3 DUP5 DUP3 DUP6 PUSH2 0x19AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x167D JUMP JUMPDEST JUMPDEST PUSH2 0x1A66 DUP5 DUP3 DUP6 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A86 JUMPI PUSH2 0x1A85 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A93 DUP7 DUP3 DUP8 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AA4 DUP7 DUP3 DUP8 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AB5 DUP7 DUP3 DUP8 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1AC8 DUP2 PUSH2 0x1701 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE3 DUP2 PUSH2 0x1ABF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0D DUP7 DUP3 DUP8 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B1E DUP7 DUP3 DUP8 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B2F DUP7 DUP3 DUP8 ADD PUSH2 0x1AD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4E JUMPI PUSH2 0x1B4D PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B5B DUP5 DUP3 DUP6 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B6D DUP2 PUSH2 0x17DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B86 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBE DUP2 PUSH2 0x17DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCF DUP4 DUP4 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF1 DUP3 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x1BFB DUP2 DUP6 PUSH2 0x1B96 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C06 DUP4 PUSH2 0x1BA6 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C36 JUMPI DUP2 MLOAD PUSH2 0x1C1D DUP9 DUP3 PUSH2 0x1BC4 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C28 DUP4 PUSH2 0x1BDB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C09 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C5B DUP2 DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH2 0x1C78 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C86 DUP6 DUP3 DUP7 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C97 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH2 0x1CC4 DUP3 PUSH2 0x1776 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE3 PUSH2 0x1CDE DUP5 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CFF JUMPI PUSH2 0x1CFE PUSH2 0x1900 JUMP JUMPDEST JUMPDEST PUSH2 0x1D0A DUP5 DUP3 DUP6 PUSH2 0x19AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D36 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D57 JUMPI PUSH2 0x1D56 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D64 DUP8 DUP3 DUP9 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D75 DUP8 DUP3 DUP9 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D86 DUP8 DUP3 DUP9 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA7 JUMPI PUSH2 0x1DA6 PUSH2 0x167D JUMP JUMPDEST JUMPDEST PUSH2 0x1DB3 DUP8 DUP3 DUP9 ADD PUSH2 0x1D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD5 JUMPI PUSH2 0x1DD4 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE2 DUP6 DUP3 DUP7 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E03 JUMPI PUSH2 0x1E02 PUSH2 0x167D JUMP JUMPDEST JUMPDEST PUSH2 0x1E0F DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E2F JUMPI PUSH2 0x1E2E PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E3C DUP6 DUP3 DUP7 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E4D DUP6 DUP3 DUP7 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E9B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EAE JUMPI PUSH2 0x1EAD PUSH2 0x1E57 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC8 DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1ED2 DUP2 DUP6 PUSH2 0x1EB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF9 DUP3 DUP6 PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F05 DUP3 DUP5 PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F24 PUSH0 DUP4 ADD DUP7 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x1F31 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x1F3E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x186C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FAA DUP3 PUSH2 0x17DE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x1F73 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2043 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x204D DUP7 DUP4 PUSH2 0x2008 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2088 PUSH2 0x2083 PUSH2 0x207E DUP5 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x2065 JUMP JUMPDEST PUSH2 0x17DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A1 DUP4 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x20B5 PUSH2 0x20AD DUP3 PUSH2 0x208F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2014 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x20C9 PUSH2 0x20BD JUMP JUMPDEST PUSH2 0x20D4 DUP2 DUP5 DUP5 PUSH2 0x2098 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20EC PUSH0 DUP3 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20DA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x213C JUMPI PUSH2 0x210D DUP2 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0x2116 DUP5 PUSH2 0x1FF9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2125 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2139 PUSH2 0x2131 DUP6 PUSH2 0x1FF9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x20D9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x215C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2141 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2174 DUP4 DUP4 PUSH2 0x214D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x218D DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH2 0x21B0 DUP3 SLOAD PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x21BB DUP3 DUP3 DUP6 PUSH2 0x20FB JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21EC JUMPI PUSH0 DUP5 ISZERO PUSH2 0x21DA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x21E4 DUP6 DUP3 PUSH2 0x2169 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x224B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x21FA DUP7 PUSH2 0x1FE7 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2221 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21FC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x223E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x223A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x214D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2277 DUP3 PUSH2 0x2253 JUMP JUMPDEST PUSH2 0x2281 DUP2 DUP6 PUSH2 0x225D JUMP JUMPDEST SWAP4 POP PUSH2 0x2291 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174E JUMP JUMPDEST PUSH2 0x229A DUP2 PUSH2 0x1776 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22B8 PUSH0 DUP4 ADD DUP8 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x22C5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x22D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B64 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22E4 DUP2 DUP5 PUSH2 0x226D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22FD DUP2 PUSH2 0x16AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2318 JUMPI PUSH2 0x2317 PUSH2 0x1679 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2325 DUP5 DUP3 DUP6 ADD PUSH2 0x22EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2341 PUSH0 DUP4 ADD DUP6 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x234E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH9 0x747470733A2F2F636F PUSH19 0x616C2D646561722D676962626F6E2D3933302E PUSH14 0x7970696E6174612E636C6F75642F PUSH10 0x7066732FA26469706673 PC 0x22 SLT KECCAK256 PUSH2 0x576C DUP3 PUSH1 0x5 PUSH2 0x90C3 0xC5 PUSH31 0xD237E99E57F8F85A2A926586DEAC2BB74DCC300864736F6C634300081400 CALLER ",
							"sourceMap": "129:1089:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3938:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5477:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5303:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;628:182:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6123:578:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1066:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6767:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3713:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2684:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:586;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5698:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1197:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12295:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6965:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;497:125:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;351:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5908:153:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2240:300;2342:4;2392:25;2377:40;;;:11;:40;;;;:104;;;;2448:33;2433:48;;;:11;:48;;;;2377:104;:156;;;;2497:36;2521:11;2497:23;:36::i;:::-;2377:156;2358:175;;2240:300;;;:::o;3938:89::-;3983:13;4015:5;4008:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3938:89;:::o;5477:154::-;5544:7;5563:22;5577:7;5563:13;:22::i;:::-;;5603:21;5616:7;5603:12;:21::i;:::-;5596:28;;5477:154;;;:::o;5303:113::-;5374:35;5383:2;5387:7;5396:12;:10;:12::i;:::-;5374:8;:35::i;:::-;5303:113;;:::o;628:182:0:-;688:13;713:21;737:10;:8;:10::i;:::-;713:34;;788:7;797:4;771:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;757:46;;;628:182;;;:::o;6123:578:2:-;6231:1;6217:16;;:2;:16;;;6213:87;;6286:1;6256:33;;;;;;;;;;;:::i;:::-;;;;;;;;6213:87;6518:21;6542:34;6550:2;6554:7;6563:12;:10;:12::i;:::-;6542:7;:34::i;:::-;6518:58;;6607:4;6590:21;;:13;:21;;;6586:109;;6655:4;6661:7;6670:13;6634:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6586:109;6203:498;6123:578;;;:::o;1066:136:0:-;1150:45;1169:5;1176:8;1186;1150:18;:45::i;:::-;1066:136;;;:::o;6767:132:2:-;6853:39;6870:4;6876:2;6880:7;6853:39;;;;;;;;;;;;:16;:39::i;:::-;6767:132;;;:::o;3713:118::-;3776:7;3802:22;3816:7;3802:13;:22::i;:::-;3795:29;;3713:118;;;:::o;2684:208::-;2747:7;2787:1;2770:19;;:5;:19;;;2766:87;;2839:1;2812:30;;;;;;;;;;;:::i;:::-;;;;;;;;2766:87;2869:9;:16;2879:5;2869:16;;;;;;;;;;;;;;;;2862:23;;2684:208;;;:::o;2895:586::-;2958:16;2982:20;3019:12;;3005:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2982:50;;3087:13;3115:9;3110:144;3134:12;;3130:1;:16;3110:144;;;3176:10;3184:1;3176:7;:10::i;:::-;3167:19;;:5;:19;;;3163:85;;3215:1;3202:3;3206:5;3202:10;;;;;;;;:::i;:::-;;;;;;;:14;;;;;3230:7;;;;;:::i;:::-;;;;3163:85;3148:3;;;;;:::i;:::-;;;;3110:144;;;;3336:23;3376:5;3362:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3336:46;;3393:9;3388:71;3412:5;3408:1;:9;3388:71;;;3446:3;3450:1;3446:6;;;;;;;;:::i;:::-;;;;;;;;3434;3441:1;3434:9;;;;;;;;:::i;:::-;;;;;;;:18;;;;;3419:3;;;;;:::i;:::-;;;;3388:71;;;;3472:6;3465:13;;;;;2895:586;;;:::o;4091:93::-;4138:13;4170:7;4163:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4091:93;:::o;5698:144::-;5783:52;5802:12;:10;:12::i;:::-;5816:8;5826;5783:18;:52::i;:::-;5698:144;;:::o;1197:27::-;;;;:::o;12295:92::-;12342:7;12368:12;;12361:19;;12295:92;:::o;6965:208::-;7078:31;7091:4;7097:2;7101:7;7078:12;:31::i;:::-;7119:47;7142:4;7148:2;7152:7;7161:4;7119:22;:47::i;:::-;6965:208;;;;:::o;497:125:0:-;563:13;595:10;:20;606:8;595:20;;;;;;;;;;;588:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:125;;;:::o;351:139::-;443:8;420:10;:20;431:8;420:20;;;;;;;;;;;:31;;;;;;:::i;:::-;;459:26;465:10;476:8;459:5;:26::i;:::-;351:139;;:::o;5908:153:2:-;5996:4;6019:18;:25;6038:5;6019:25;;;;;;;;;;;;;;;:35;6045:8;6019:35;;;;;;;;;;;;;;;;;;;;;;;;;6012:42;;5908:153;;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;18242:241:2:-;18305:7;18324:13;18340:17;18349:7;18340:8;:17::i;:::-;18324:33;;18388:1;18371:19;;:5;:19;;;18367:88;;18436:7;18413:31;;;;;;;;;;;:::i;:::-;;;;;;;;18367:88;18471:5;18464:12;;;18242:241;;;:::o;7918:127::-;7988:7;8014:15;:24;8030:7;8014:24;;;;;;;;;;;;;;;;;;;;;8007:31;;7918:127;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;16522:120:2:-;16602:33;16611:2;16615:7;16624:4;16630;16602:8;:33::i;:::-;16522:120;;;:::o;813:135:0:-;864:13;884:59;;;;;;;;;;;;;;;;;;;813:135;:::o;10822:795:2:-;10908:7;10927:12;10942:17;10951:7;10942:8;:17::i;:::-;10927:32;;11035:1;11019:18;;:4;:18;;;11015:86;;11053:37;11070:4;11076;11082:7;11053:16;:37::i;:::-;11015:86;11161:1;11145:18;;:4;:18;;;11141:256;;11261:48;11278:1;11282:7;11299:1;11303:5;11261:8;:48::i;:::-;11371:1;11352:9;:15;11362:4;11352:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;11141:256;11425:1;11411:16;;:2;:16;;;11407:107;;11488:1;11471:9;:13;11481:2;11471:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;11407:107;11543:2;11524:7;:16;11532:7;11524:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;11580:7;11576:2;11561:27;;11570:4;11561:27;;;;;;;;;;;;11606:4;11599:11;;;10822:795;;;;;:::o;17695:312::-;17822:1;17802:22;;:8;:22;;;17798:91;;17869:8;17847:31;;;;;;;;;;;:::i;:::-;;;;;;;;17798:91;17936:8;17898:18;:25;17917:5;17898:25;;;;;;;;;;;;;;;:35;17924:8;17898:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;17981:8;17959:41;;17974:5;17959:41;;;17991:8;17959:41;;;;;;:::i;:::-;;;;;;;;17695:312;;;:::o;19022:782::-;19155:1;19138:2;:14;;;:18;19134:664;;;19192:2;19176:36;;;19213:12;:10;:12::i;:::-;19227:4;19233:7;19242:4;19176:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;19172:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19502:1;19485:6;:13;:18;19481:293;;19556:2;19534:25;;;;;;;;;;;:::i;:::-;;;;;;;;19481:293;19726:6;19720:13;19711:6;19707:2;19703:15;19696:38;19172:616;19304:41;;;19294:51;;;:6;:51;;;;19290:130;;19398:2;19376:25;;;;;;;;;;;:::i;:::-;;;;;;;;19290:130;19248:186;19134:664;19022:782;;;;:::o;11939:351::-;12020:1;12006:16;;:2;:16;;;12002:87;;12075:1;12045:33;;;;;;;;;;;:::i;:::-;;;;;;;;12002:87;12098:21;12122:32;12130:2;12134:7;12151:1;12122:7;:32::i;:::-;12098:56;;12193:1;12168:27;;:13;:27;;;12164:96;;12246:1;12218:31;;;;;;;;;;;:::i;:::-;;;;;;;;12164:96;12269:12;;:14;;;;;;;;;:::i;:::-;;;;;;11992:298;11939:351;;:::o;7687:115::-;7753:7;7779;:16;7787:7;7779:16;;;;;;;;;;;;;;;;;;;;;7772:23;;7687:115;;;:::o;16824:662::-;16984:9;:31;;;;17013:1;16997:18;;:4;:18;;;;16984:31;16980:460;;;17031:13;17047:22;17061:7;17047:13;:22::i;:::-;17031:38;;17213:1;17197:18;;:4;:18;;;;:35;;;;;17228:4;17219:13;;:5;:13;;;;17197:35;:69;;;;;17237:29;17254:5;17261:4;17237:16;:29::i;:::-;17236:30;17197:69;17193:142;;;17315:4;17293:27;;;;;;;;;;;:::i;:::-;;;;;;;;17193:142;17353:9;17349:81;;;17407:7;17403:2;17387:28;;17396:5;17387:28;;;;;;;;;;;;17349:81;17017:423;16980:460;17477:2;17450:15;:24;17466:7;17450:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16824:662;;;;:::o;9062:368::-;9174:38;9188:5;9195:7;9204;9174:13;:38::i;:::-;9169:255;;9249:1;9232:19;;:5;:19;;;9228:186;;9301:7;9278:31;;;;;;;;;;;:::i;:::-;;;;;;;;9228:186;9382:7;9391;9355:44;;;;;;;;;;;;:::i;:::-;;;;;;;;9169:255;9062:368;;;:::o;8356:272::-;8459:4;8513:1;8494:21;;:7;:21;;;;:127;;;;;8541:7;8532:16;;:5;:16;;;:52;;;;8552:32;8569:5;8576:7;8552:16;:32::i;:::-;8532:52;:88;;;;8613:7;8588:32;;:21;8601:7;8588:12;:21::i;:::-;:32;;;8532:88;8494:127;8475:146;;8356:272;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:117;5122:1;5119;5112:12;5136:180;5184:77;5181:1;5174:88;5281:4;5278:1;5271:15;5305:4;5302:1;5295:15;5322:281;5405:27;5427:4;5405:27;:::i;:::-;5397:6;5393:40;5535:6;5523:10;5520:22;5499:18;5487:10;5484:34;5481:62;5478:88;;;5546:18;;:::i;:::-;5478:88;5586:10;5582:2;5575:22;5365:238;5322:281;;:::o;5609:129::-;5643:6;5670:20;;:::i;:::-;5660:30;;5699:33;5727:4;5719:6;5699:33;:::i;:::-;5609:129;;;:::o;5744:308::-;5806:4;5896:18;5888:6;5885:30;5882:56;;;5918:18;;:::i;:::-;5882:56;5956:29;5978:6;5956:29;:::i;:::-;5948:37;;6040:4;6034;6030:15;6022:23;;5744:308;;;:::o;6058:146::-;6155:6;6150:3;6145;6132:30;6196:1;6187:6;6182:3;6178:16;6171:27;6058:146;;;:::o;6210:425::-;6288:5;6313:66;6329:49;6371:6;6329:49;:::i;:::-;6313:66;:::i;:::-;6304:75;;6402:6;6395:5;6388:21;6440:4;6433:5;6429:16;6478:3;6469:6;6464:3;6460:16;6457:25;6454:112;;;6485:79;;:::i;:::-;6454:112;6575:54;6622:6;6617:3;6612;6575:54;:::i;:::-;6294:341;6210:425;;;;;:::o;6655:340::-;6711:5;6760:3;6753:4;6745:6;6741:17;6737:27;6727:122;;6768:79;;:::i;:::-;6727:122;6885:6;6872:20;6910:79;6985:3;6977:6;6970:4;6962:6;6958:17;6910:79;:::i;:::-;6901:88;;6717:278;6655:340;;;;:::o;7001:509::-;7070:6;7119:2;7107:9;7098:7;7094:23;7090:32;7087:119;;;7125:79;;:::i;:::-;7087:119;7273:1;7262:9;7258:17;7245:31;7303:18;7295:6;7292:30;7289:117;;;7325:79;;:::i;:::-;7289:117;7430:63;7485:7;7476:6;7465:9;7461:22;7430:63;:::i;:::-;7420:73;;7216:287;7001:509;;;;:::o;7516:619::-;7593:6;7601;7609;7658:2;7646:9;7637:7;7633:23;7629:32;7626:119;;;7664:79;;:::i;:::-;7626:119;7784:1;7809:53;7854:7;7845:6;7834:9;7830:22;7809:53;:::i;:::-;7799:63;;7755:117;7911:2;7937:53;7982:7;7973:6;7962:9;7958:22;7937:53;:::i;:::-;7927:63;;7882:118;8039:2;8065:53;8110:7;8101:6;8090:9;8086:22;8065:53;:::i;:::-;8055:63;;8010:118;7516:619;;;;;:::o;8141:116::-;8211:21;8226:5;8211:21;:::i;:::-;8204:5;8201:32;8191:60;;8247:1;8244;8237:12;8191:60;8141:116;:::o;8263:133::-;8306:5;8344:6;8331:20;8322:29;;8360:30;8384:5;8360:30;:::i;:::-;8263:133;;;;:::o;8402:613::-;8476:6;8484;8492;8541:2;8529:9;8520:7;8516:23;8512:32;8509:119;;;8547:79;;:::i;:::-;8509:119;8667:1;8692:53;8737:7;8728:6;8717:9;8713:22;8692:53;:::i;:::-;8682:63;;8638:117;8794:2;8820:53;8865:7;8856:6;8845:9;8841:22;8820:53;:::i;:::-;8810:63;;8765:118;8922:2;8948:50;8990:7;8981:6;8970:9;8966:22;8948:50;:::i;:::-;8938:60;;8893:115;8402:613;;;;;:::o;9021:329::-;9080:6;9129:2;9117:9;9108:7;9104:23;9100:32;9097:119;;;9135:79;;:::i;:::-;9097:119;9255:1;9280:53;9325:7;9316:6;9305:9;9301:22;9280:53;:::i;:::-;9270:63;;9226:117;9021:329;;;;:::o;9356:118::-;9443:24;9461:5;9443:24;:::i;:::-;9438:3;9431:37;9356:118;;:::o;9480:222::-;9573:4;9611:2;9600:9;9596:18;9588:26;;9624:71;9692:1;9681:9;9677:17;9668:6;9624:71;:::i;:::-;9480:222;;;;:::o;9708:114::-;9775:6;9809:5;9803:12;9793:22;;9708:114;;;:::o;9828:184::-;9927:11;9961:6;9956:3;9949:19;10001:4;9996:3;9992:14;9977:29;;9828:184;;;;:::o;10018:132::-;10085:4;10108:3;10100:11;;10138:4;10133:3;10129:14;10121:22;;10018:132;;;:::o;10156:108::-;10233:24;10251:5;10233:24;:::i;:::-;10228:3;10221:37;10156:108;;:::o;10270:179::-;10339:10;10360:46;10402:3;10394:6;10360:46;:::i;:::-;10438:4;10433:3;10429:14;10415:28;;10270:179;;;;:::o;10455:113::-;10525:4;10557;10552:3;10548:14;10540:22;;10455:113;;;:::o;10604:732::-;10723:3;10752:54;10800:5;10752:54;:::i;:::-;10822:86;10901:6;10896:3;10822:86;:::i;:::-;10815:93;;10932:56;10982:5;10932:56;:::i;:::-;11011:7;11042:1;11027:284;11052:6;11049:1;11046:13;11027:284;;;11128:6;11122:13;11155:63;11214:3;11199:13;11155:63;:::i;:::-;11148:70;;11241:60;11294:6;11241:60;:::i;:::-;11231:70;;11087:224;11074:1;11071;11067:9;11062:14;;11027:284;;;11031:14;11327:3;11320:10;;10728:608;;;10604:732;;;;:::o;11342:373::-;11485:4;11523:2;11512:9;11508:18;11500:26;;11572:9;11566:4;11562:20;11558:1;11547:9;11543:17;11536:47;11600:108;11703:4;11694:6;11600:108;:::i;:::-;11592:116;;11342:373;;;;:::o;11721:468::-;11786:6;11794;11843:2;11831:9;11822:7;11818:23;11814:32;11811:119;;;11849:79;;:::i;:::-;11811:119;11969:1;11994:53;12039:7;12030:6;12019:9;12015:22;11994:53;:::i;:::-;11984:63;;11940:117;12096:2;12122:50;12164:7;12155:6;12144:9;12140:22;12122:50;:::i;:::-;12112:60;;12067:115;11721:468;;;;;:::o;12195:307::-;12256:4;12346:18;12338:6;12335:30;12332:56;;;12368:18;;:::i;:::-;12332:56;12406:29;12428:6;12406:29;:::i;:::-;12398:37;;12490:4;12484;12480:15;12472:23;;12195:307;;;:::o;12508:423::-;12585:5;12610:65;12626:48;12667:6;12626:48;:::i;:::-;12610:65;:::i;:::-;12601:74;;12698:6;12691:5;12684:21;12736:4;12729:5;12725:16;12774:3;12765:6;12760:3;12756:16;12753:25;12750:112;;;12781:79;;:::i;:::-;12750:112;12871:54;12918:6;12913:3;12908;12871:54;:::i;:::-;12591:340;12508:423;;;;;:::o;12950:338::-;13005:5;13054:3;13047:4;13039:6;13035:17;13031:27;13021:122;;13062:79;;:::i;:::-;13021:122;13179:6;13166:20;13204:78;13278:3;13270:6;13263:4;13255:6;13251:17;13204:78;:::i;:::-;13195:87;;13011:277;12950:338;;;;:::o;13294:943::-;13389:6;13397;13405;13413;13462:3;13450:9;13441:7;13437:23;13433:33;13430:120;;;13469:79;;:::i;:::-;13430:120;13589:1;13614:53;13659:7;13650:6;13639:9;13635:22;13614:53;:::i;:::-;13604:63;;13560:117;13716:2;13742:53;13787:7;13778:6;13767:9;13763:22;13742:53;:::i;:::-;13732:63;;13687:118;13844:2;13870:53;13915:7;13906:6;13895:9;13891:22;13870:53;:::i;:::-;13860:63;;13815:118;14000:2;13989:9;13985:18;13972:32;14031:18;14023:6;14020:30;14017:117;;;14053:79;;:::i;:::-;14017:117;14158:62;14212:7;14203:6;14192:9;14188:22;14158:62;:::i;:::-;14148:72;;13943:287;13294:943;;;;;;;:::o;14243:654::-;14321:6;14329;14378:2;14366:9;14357:7;14353:23;14349:32;14346:119;;;14384:79;;:::i;:::-;14346:119;14504:1;14529:53;14574:7;14565:6;14554:9;14550:22;14529:53;:::i;:::-;14519:63;;14475:117;14659:2;14648:9;14644:18;14631:32;14690:18;14682:6;14679:30;14676:117;;;14712:79;;:::i;:::-;14676:117;14817:63;14872:7;14863:6;14852:9;14848:22;14817:63;:::i;:::-;14807:73;;14602:288;14243:654;;;;;:::o;14903:474::-;14971:6;14979;15028:2;15016:9;15007:7;15003:23;14999:32;14996:119;;;15034:79;;:::i;:::-;14996:119;15154:1;15179:53;15224:7;15215:6;15204:9;15200:22;15179:53;:::i;:::-;15169:63;;15125:117;15281:2;15307:53;15352:7;15343:6;15332:9;15328:22;15307:53;:::i;:::-;15297:63;;15252:118;14903:474;;;;;:::o;15383:180::-;15431:77;15428:1;15421:88;15528:4;15525:1;15518:15;15552:4;15549:1;15542:15;15569:320;15613:6;15650:1;15644:4;15640:12;15630:22;;15697:1;15691:4;15687:12;15718:18;15708:81;;15774:4;15766:6;15762:17;15752:27;;15708:81;15836:2;15828:6;15825:14;15805:18;15802:38;15799:84;;15855:18;;:::i;:::-;15799:84;15620:269;15569:320;;;:::o;15895:148::-;15997:11;16034:3;16019:18;;15895:148;;;;:::o;16049:390::-;16155:3;16183:39;16216:5;16183:39;:::i;:::-;16238:89;16320:6;16315:3;16238:89;:::i;:::-;16231:96;;16336:65;16394:6;16389:3;16382:4;16375:5;16371:16;16336:65;:::i;:::-;16426:6;16421:3;16417:16;16410:23;;16159:280;16049:390;;;;:::o;16445:435::-;16625:3;16647:95;16738:3;16729:6;16647:95;:::i;:::-;16640:102;;16759:95;16850:3;16841:6;16759:95;:::i;:::-;16752:102;;16871:3;16864:10;;16445:435;;;;;:::o;16886:442::-;17035:4;17073:2;17062:9;17058:18;17050:26;;17086:71;17154:1;17143:9;17139:17;17130:6;17086:71;:::i;:::-;17167:72;17235:2;17224:9;17220:18;17211:6;17167:72;:::i;:::-;17249;17317:2;17306:9;17302:18;17293:6;17249:72;:::i;:::-;16886:442;;;;;;:::o;17334:180::-;17382:77;17379:1;17372:88;17479:4;17476:1;17469:15;17503:4;17500:1;17493:15;17520:180;17568:77;17565:1;17558:88;17665:4;17662:1;17655:15;17689:4;17686:1;17679:15;17706:233;17745:3;17768:24;17786:5;17768:24;:::i;:::-;17759:33;;17814:66;17807:5;17804:77;17801:103;;17884:18;;:::i;:::-;17801:103;17931:1;17924:5;17920:13;17913:20;;17706:233;;;:::o;17945:141::-;17994:4;18017:3;18009:11;;18040:3;18037:1;18030:14;18074:4;18071:1;18061:18;18053:26;;17945:141;;;:::o;18092:93::-;18129:6;18176:2;18171;18164:5;18160:14;18156:23;18146:33;;18092:93;;;:::o;18191:107::-;18235:8;18285:5;18279:4;18275:16;18254:37;;18191:107;;;;:::o;18304:393::-;18373:6;18423:1;18411:10;18407:18;18446:97;18476:66;18465:9;18446:97;:::i;:::-;18564:39;18594:8;18583:9;18564:39;:::i;:::-;18552:51;;18636:4;18632:9;18625:5;18621:21;18612:30;;18685:4;18675:8;18671:19;18664:5;18661:30;18651:40;;18380:317;;18304:393;;;;;:::o;18703:60::-;18731:3;18752:5;18745:12;;18703:60;;;:::o;18769:142::-;18819:9;18852:53;18870:34;18879:24;18897:5;18879:24;:::i;:::-;18870:34;:::i;:::-;18852:53;:::i;:::-;18839:66;;18769:142;;;:::o;18917:75::-;18960:3;18981:5;18974:12;;18917:75;;;:::o;18998:269::-;19108:39;19139:7;19108:39;:::i;:::-;19169:91;19218:41;19242:16;19218:41;:::i;:::-;19210:6;19203:4;19197:11;19169:91;:::i;:::-;19163:4;19156:105;19074:193;18998:269;;;:::o;19273:73::-;19318:3;19273:73;:::o;19352:189::-;19429:32;;:::i;:::-;19470:65;19528:6;19520;19514:4;19470:65;:::i;:::-;19405:136;19352:189;;:::o;19547:186::-;19607:120;19624:3;19617:5;19614:14;19607:120;;;19678:39;19715:1;19708:5;19678:39;:::i;:::-;19651:1;19644:5;19640:13;19631:22;;19607:120;;;19547:186;;:::o;19739:543::-;19840:2;19835:3;19832:11;19829:446;;;19874:38;19906:5;19874:38;:::i;:::-;19958:29;19976:10;19958:29;:::i;:::-;19948:8;19944:44;20141:2;20129:10;20126:18;20123:49;;;20162:8;20147:23;;20123:49;20185:80;20241:22;20259:3;20241:22;:::i;:::-;20231:8;20227:37;20214:11;20185:80;:::i;:::-;19844:431;;19829:446;19739:543;;;:::o;20288:117::-;20342:8;20392:5;20386:4;20382:16;20361:37;;20288:117;;;;:::o;20411:169::-;20455:6;20488:51;20536:1;20532:6;20524:5;20521:1;20517:13;20488:51;:::i;:::-;20484:56;20569:4;20563;20559:15;20549:25;;20462:118;20411:169;;;;:::o;20585:295::-;20661:4;20807:29;20832:3;20826:4;20807:29;:::i;:::-;20799:37;;20869:3;20866:1;20862:11;20856:4;20853:21;20845:29;;20585:295;;;;:::o;20885:1395::-;21002:37;21035:3;21002:37;:::i;:::-;21104:18;21096:6;21093:30;21090:56;;;21126:18;;:::i;:::-;21090:56;21170:38;21202:4;21196:11;21170:38;:::i;:::-;21255:67;21315:6;21307;21301:4;21255:67;:::i;:::-;21349:1;21373:4;21360:17;;21405:2;21397:6;21394:14;21422:1;21417:618;;;;22079:1;22096:6;22093:77;;;22145:9;22140:3;22136:19;22130:26;22121:35;;22093:77;22196:67;22256:6;22249:5;22196:67;:::i;:::-;22190:4;22183:81;22052:222;21387:887;;21417:618;21469:4;21465:9;21457:6;21453:22;21503:37;21535:4;21503:37;:::i;:::-;21562:1;21576:208;21590:7;21587:1;21584:14;21576:208;;;21669:9;21664:3;21660:19;21654:26;21646:6;21639:42;21720:1;21712:6;21708:14;21698:24;;21767:2;21756:9;21752:18;21739:31;;21613:4;21610:1;21606:12;21601:17;;21576:208;;;21812:6;21803:7;21800:19;21797:179;;;21870:9;21865:3;21861:19;21855:26;21913:48;21955:4;21947:6;21943:17;21932:9;21913:48;:::i;:::-;21905:6;21898:64;21820:156;21797:179;22022:1;22018;22010:6;22006:14;22002:22;21996:4;21989:36;21424:611;;;21387:887;;20977:1303;;;20885:1395;;:::o;22286:98::-;22337:6;22371:5;22365:12;22355:22;;22286:98;;;:::o;22390:168::-;22473:11;22507:6;22502:3;22495:19;22547:4;22542:3;22538:14;22523:29;;22390:168;;;;:::o;22564:373::-;22650:3;22678:38;22710:5;22678:38;:::i;:::-;22732:70;22795:6;22790:3;22732:70;:::i;:::-;22725:77;;22811:65;22869:6;22864:3;22857:4;22850:5;22846:16;22811:65;:::i;:::-;22901:29;22923:6;22901:29;:::i;:::-;22896:3;22892:39;22885:46;;22654:283;22564:373;;;;:::o;22943:640::-;23138:4;23176:3;23165:9;23161:19;23153:27;;23190:71;23258:1;23247:9;23243:17;23234:6;23190:71;:::i;:::-;23271:72;23339:2;23328:9;23324:18;23315:6;23271:72;:::i;:::-;23353;23421:2;23410:9;23406:18;23397:6;23353:72;:::i;:::-;23472:9;23466:4;23462:20;23457:2;23446:9;23442:18;23435:48;23500:76;23571:4;23562:6;23500:76;:::i;:::-;23492:84;;22943:640;;;;;;;:::o;23589:141::-;23645:5;23676:6;23670:13;23661:22;;23692:32;23718:5;23692:32;:::i;:::-;23589:141;;;;:::o;23736:349::-;23805:6;23854:2;23842:9;23833:7;23829:23;23825:32;23822:119;;;23860:79;;:::i;:::-;23822:119;23980:1;24005:63;24060:7;24051:6;24040:9;24036:22;24005:63;:::i;:::-;23995:73;;23951:127;23736:349;;;;:::o;24091:332::-;24212:4;24250:2;24239:9;24235:18;24227:26;;24263:71;24331:1;24320:9;24316:17;24307:6;24263:71;:::i;:::-;24344:72;24412:2;24401:9;24397:18;24388:6;24344:72;:::i;:::-;24091:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1829800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_totalsupply()": "2536",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"minting(uint256,string)": "infinite",
								"msgsenderOwntoken(address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setAppAll(address,address,bool)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"showtotalsupply()": "2454",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"urlmaker(string)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 1218,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 157,
									"end": 235,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 235,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 157,
									"end": 235,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 235,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 235,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 157,
									"end": 235,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 157,
									"end": 235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 157,
									"end": 235,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 219,
									"end": 224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 225,
									"end": 232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2009,
									"end": 2014,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2001,
									"end": 2006,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2001,
									"end": 2014,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2001,
									"end": 2014,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2001,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2001,
									"end": 2014,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2001,
									"end": 2014,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2001,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2001,
									"end": 2014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2001,
									"end": 2014,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2001,
									"end": 2014,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2001,
									"end": 2014,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2034,
									"end": 2041,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2024,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2024,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2064,
									"end": 2065,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2051,
									"end": 2063,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2051,
									"end": 2065,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2051,
									"end": 2065,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2051,
									"end": 2065,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2051,
									"end": 2065,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1935,
									"end": 2072,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1935,
									"end": 2072,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 157,
									"end": 235,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 157,
									"end": 235,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 1218,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061576c8260056190c3c57e00d237e99e57f8f85a2a926586deac2bb74dcc300864736f6c63430008140033",
									".code": [
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "ABEC7101"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "ABEC7101"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "E2C4C4B2"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "828E7A01"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "A393DC44"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "1B00FD16"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "1B00FD16"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "29D6724E"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 1218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2240,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2240,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2240,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3938,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3938,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5477,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5477,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5303,
											"end": 5416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5303,
											"end": 5416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 628,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 628,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 628,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6123,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6123,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1066,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1066,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6767,
											"end": 6899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6767,
											"end": 6899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3713,
											"end": 3831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3713,
											"end": 3831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2684,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2684,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2684,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2895,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2895,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2895,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4091,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4091,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5698,
											"end": 5842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5698,
											"end": 5842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1197,
											"end": 1224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1197,
											"end": 1224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 12295,
											"end": 12387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 12295,
											"end": 12387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6965,
											"end": 7173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6965,
											"end": 7173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 497,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 497,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 497,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 497,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 351,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 351,
											"end": 490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 351,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 351,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 351,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 351,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5908,
											"end": 6061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5908,
											"end": 6061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5908,
											"end": 6061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2417,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2377,
											"end": 2417,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2377,
											"end": 2417,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2417,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2417,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2377,
											"end": 2417,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2417,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2417,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2377,
											"end": 2481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2433,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2433,
											"end": 2481,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2433,
											"end": 2481,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2481,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2481,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2377,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2377,
											"end": 2533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2521,
											"end": 2532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2497,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2377,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4015,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4008,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4008,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5577,
											"end": 5584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5563,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5616,
											"end": 5623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5603,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5603,
											"end": 5624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 5624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5383,
											"end": 5385,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5387,
											"end": 5394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5396,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5396,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5374,
											"end": 5409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5409,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5374,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 628,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 737,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 737,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 737,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 713,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 797,
											"end": 801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 771,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 757,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 757,
											"end": 803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6231,
											"end": 6232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6233,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6217,
											"end": 6233,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6219,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6233,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6217,
											"end": 6233,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6233,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6213,
											"end": 6300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6256,
											"end": 6289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6300,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6213,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6539,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6550,
											"end": 6552,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6554,
											"end": 6561,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6563,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6563,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6563,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6563,
											"end": 6575,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6563,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6542,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6542,
											"end": 6576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6542,
											"end": 6576,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6542,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6576,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 6611,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6586,
											"end": 6695,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6668,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6670,
											"end": 6683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6634,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6695,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6586,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6203,
											"end": 6701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1169,
											"end": 1174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1150,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1195,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1150,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6870,
											"end": 6874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6878,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6880,
											"end": 6887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6853,
											"end": 6892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6853,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3816,
											"end": 3823,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3802,
											"end": 3824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3795,
											"end": 3824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3795,
											"end": 3824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2766,
											"end": 2853,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2812,
											"end": 2842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2853,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2766,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2878,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2885,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2974,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2982,
											"end": 3002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3031,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3019,
											"end": 3031,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3005,
											"end": 3032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3134,
											"end": 3146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3176,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3184,
											"end": 3185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3176,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3176,
											"end": 3186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3176,
											"end": 3186,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3176,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3163,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3163,
											"end": 3248,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3205,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3202,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3230,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3163,
											"end": 3248,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3163,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3148,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3336,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3362,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3336,
											"end": 3382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3336,
											"end": 3382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3417,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3449,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3446,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3440,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3441,
											"end": 3442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3434,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3419,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3478,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 3481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4151,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4170,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4163,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4163,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5802,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5802,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5802,
											"end": 5814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5814,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5802,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5816,
											"end": 5824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5783,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5835,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5783,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12342,
											"end": 12349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12368,
											"end": 12380,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12368,
											"end": 12380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12361,
											"end": 12380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12361,
											"end": 12380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7091,
											"end": 7095,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7097,
											"end": 7099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7101,
											"end": 7108,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7078,
											"end": 7109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7109,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7078,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7119,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7142,
											"end": 7146,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7150,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7159,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7161,
											"end": 7165,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7119,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7119,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7119,
											"end": 7166,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7119,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 7173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 497,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 497,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 595,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 595,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 595,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 615,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 588,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 588,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 588,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 351,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 443,
											"end": 451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 420,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 439,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 420,
											"end": 440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 440,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 420,
											"end": 451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 420,
											"end": 451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 420,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 420,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 465,
											"end": 475,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 476,
											"end": 484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 459,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 459,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 459,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6043,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6045,
											"end": 6053,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6019,
											"end": 6054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6012,
											"end": 6054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6012,
											"end": 6054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 6061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18242,
											"end": 18483,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 18242,
											"end": 18483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18305,
											"end": 18312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18324,
											"end": 18337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18340,
											"end": 18357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 18349,
											"end": 18356,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18340,
											"end": 18348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 18340,
											"end": 18357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18340,
											"end": 18357,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 18340,
											"end": 18357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18324,
											"end": 18357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18324,
											"end": 18357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18388,
											"end": 18389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18367,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 18367,
											"end": 18455,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18436,
											"end": 18443,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 18413,
											"end": 18444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18444,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18367,
											"end": 18455,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 18367,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18471,
											"end": 18476,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18464,
											"end": 18476,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18464,
											"end": 18476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18464,
											"end": 18476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18242,
											"end": 18483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18242,
											"end": 18483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18242,
											"end": 18483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18242,
											"end": 18483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7918,
											"end": 8045,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7918,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7988,
											"end": 7995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8029,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8030,
											"end": 8037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8007,
											"end": 8038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8007,
											"end": 8038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7918,
											"end": 8045,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7918,
											"end": 8045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7918,
											"end": 8045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7918,
											"end": 8045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16522,
											"end": 16642,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 16522,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16602,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 16611,
											"end": 16613,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16615,
											"end": 16622,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16624,
											"end": 16628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16630,
											"end": 16634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16602,
											"end": 16610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 16602,
											"end": 16635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16602,
											"end": 16635,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 16602,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16522,
											"end": 16642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16522,
											"end": 16642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16522,
											"end": 16642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16522,
											"end": 16642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 948,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 813,
											"end": 948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH data",
											"source": 0,
											"value": "D1F8D88B6E34B43596D2DE84A0185752A3ADD6E83A91B900A9741F09EDC98FFE"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 884,
											"end": 943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10822,
											"end": 11617,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10822,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10908,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 10951,
											"end": 10958,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10942,
											"end": 10959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11035,
											"end": 11036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11023,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11015,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 11015,
											"end": 11101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11053,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 11070,
											"end": 11074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11053,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 11053,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11053,
											"end": 11090,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 11053,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11015,
											"end": 11101,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 11015,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11161,
											"end": 11162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11145,
											"end": 11149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11141,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11141,
											"end": 11397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11261,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11278,
											"end": 11279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11282,
											"end": 11289,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11299,
											"end": 11300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11303,
											"end": 11308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11261,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 11261,
											"end": 11309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11261,
											"end": 11309,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11261,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11371,
											"end": 11372,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11352,
											"end": 11361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11366,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11352,
											"end": 11372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11141,
											"end": 11397,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11141,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11425,
											"end": 11426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11411,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11411,
											"end": 11427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11411,
											"end": 11413,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11411,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11411,
											"end": 11427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11411,
											"end": 11427,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 11407,
											"end": 11514,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11471,
											"end": 11480,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11481,
											"end": 11483,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11514,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 11407,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11545,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11531,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11532,
											"end": 11539,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11576,
											"end": 11578,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11570,
											"end": 11574,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11588,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 11606,
											"end": 11610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11599,
											"end": 11610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11599,
											"end": 11610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11599,
											"end": 11610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10822,
											"end": 11617,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10822,
											"end": 11617,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10822,
											"end": 11617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10822,
											"end": 11617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10822,
											"end": 11617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10822,
											"end": 11617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17695,
											"end": 18007,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 17695,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17822,
											"end": 17823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17802,
											"end": 17824,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17802,
											"end": 17824,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17802,
											"end": 17810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17802,
											"end": 17824,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17802,
											"end": 17824,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17802,
											"end": 17824,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17798,
											"end": 17889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 17798,
											"end": 17889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17869,
											"end": 17877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17847,
											"end": 17878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17847,
											"end": 17878,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17798,
											"end": 17889,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 17798,
											"end": 17889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17936,
											"end": 17944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17916,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17917,
											"end": 17922,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17924,
											"end": 17932,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17981,
											"end": 17989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17974,
											"end": 17979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17991,
											"end": 17999,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 17959,
											"end": 18000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17959,
											"end": 18000,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 17695,
											"end": 18007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17695,
											"end": 18007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17695,
											"end": 18007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17695,
											"end": 18007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19022,
											"end": 19804,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 19022,
											"end": 19804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19155,
											"end": 19156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19138,
											"end": 19140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19138,
											"end": 19152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19138,
											"end": 19152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19138,
											"end": 19152,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 19138,
											"end": 19156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 19134,
											"end": 19798,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19134,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 19134,
											"end": 19798,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19192,
											"end": 19194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19212,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19176,
											"end": 19212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19212,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 19213,
											"end": 19225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 19213,
											"end": 19223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 19213,
											"end": 19225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19213,
											"end": 19225,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 19213,
											"end": 19225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19227,
											"end": 19231,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19233,
											"end": 19240,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19242,
											"end": 19246,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 19176,
											"end": 19247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 19176,
											"end": 19247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 19176,
											"end": 19247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19502,
											"end": 19503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19485,
											"end": 19491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19485,
											"end": 19498,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19481,
											"end": 19774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 19481,
											"end": 19774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19556,
											"end": 19558,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19534,
											"end": 19559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19534,
											"end": 19559,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19481,
											"end": 19774,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 19481,
											"end": 19774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19726,
											"end": 19732,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19720,
											"end": 19733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19711,
											"end": 19717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19707,
											"end": 19709,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19703,
											"end": 19718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19696,
											"end": 19734,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 19172,
											"end": 19788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19304,
											"end": 19345,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 19304,
											"end": 19345,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 19304,
											"end": 19345,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19345,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19294,
											"end": 19345,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19345,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19345,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19294,
											"end": 19345,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19345,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19345,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 19290,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 19290,
											"end": 19420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19398,
											"end": 19400,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19376,
											"end": 19401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19376,
											"end": 19401,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19290,
											"end": 19420,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 19290,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19248,
											"end": 19434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19134,
											"end": 19798,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 19134,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19022,
											"end": 19804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19022,
											"end": 19804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19022,
											"end": 19804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19022,
											"end": 19804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19022,
											"end": 19804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11939,
											"end": 12290,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 11939,
											"end": 12290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12020,
											"end": 12021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12008,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12002,
											"end": 12089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 12002,
											"end": 12089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12075,
											"end": 12076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12045,
											"end": 12078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12045,
											"end": 12078,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12002,
											"end": 12089,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 12002,
											"end": 12089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12119,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12122,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 12130,
											"end": 12132,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12134,
											"end": 12141,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12122,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 12122,
											"end": 12154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12122,
											"end": 12154,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 12122,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12168,
											"end": 12195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12168,
											"end": 12181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12168,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12168,
											"end": 12195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12168,
											"end": 12195,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 12164,
											"end": 12260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12246,
											"end": 12247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12218,
											"end": 12249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12218,
											"end": 12249,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12260,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 12164,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12281,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12269,
											"end": 12281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 12269,
											"end": 12283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11992,
											"end": 12290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11939,
											"end": 12290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11939,
											"end": 12290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11939,
											"end": 12290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7802,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7687,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7779,
											"end": 7786,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7794,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7779,
											"end": 7795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7772,
											"end": 7795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7772,
											"end": 7795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7802,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16824,
											"end": 17486,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 16824,
											"end": 17486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17013,
											"end": 17014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16997,
											"end": 17001,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17440,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 16980,
											"end": 17440,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17047,
											"end": 17069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 17061,
											"end": 17068,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17047,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 17047,
											"end": 17069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17047,
											"end": 17069,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 17047,
											"end": 17069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17031,
											"end": 17069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17031,
											"end": 17069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17213,
											"end": 17214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17197,
											"end": 17215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17197,
											"end": 17215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17197,
											"end": 17215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17215,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17215,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17232,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 17197,
											"end": 17232,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17228,
											"end": 17232,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17219,
											"end": 17232,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17219,
											"end": 17232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17219,
											"end": 17224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17219,
											"end": 17232,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17219,
											"end": 17232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17219,
											"end": 17232,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17219,
											"end": 17232,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17232,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 17197,
											"end": 17232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17266,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17266,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 17197,
											"end": 17266,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17237,
											"end": 17266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 17254,
											"end": 17259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17261,
											"end": 17265,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17237,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 17237,
											"end": 17266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17237,
											"end": 17266,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 17237,
											"end": 17266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17236,
											"end": 17266,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17266,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 17197,
											"end": 17266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17193,
											"end": 17335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17193,
											"end": 17335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 17193,
											"end": 17335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17315,
											"end": 17319,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17293,
											"end": 17320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17293,
											"end": 17320,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17193,
											"end": 17335,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 17193,
											"end": 17335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17353,
											"end": 17362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17349,
											"end": 17430,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17349,
											"end": 17430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 17349,
											"end": 17430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17407,
											"end": 17414,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17403,
											"end": 17405,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17396,
											"end": 17401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17387,
											"end": 17415,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 17349,
											"end": 17430,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 17349,
											"end": 17430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17017,
											"end": 17440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17440,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 16980,
											"end": 17440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17477,
											"end": 17479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17465,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17466,
											"end": 17473,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16824,
											"end": 17486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16824,
											"end": 17486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16824,
											"end": 17486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16824,
											"end": 17486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16824,
											"end": 17486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9062,
											"end": 9430,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9062,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9174,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 9188,
											"end": 9193,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9195,
											"end": 9202,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9174,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 9174,
											"end": 9212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9174,
											"end": 9212,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 9174,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 9169,
											"end": 9424,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9249,
											"end": 9250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9251,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9232,
											"end": 9251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9237,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9251,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9232,
											"end": 9251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9251,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9228,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 9228,
											"end": 9414,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9278,
											"end": 9309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9309,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9228,
											"end": 9414,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 9228,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9382,
											"end": 9389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9391,
											"end": 9398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 9355,
											"end": 9399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9399,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9424,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 9169,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9062,
											"end": 9430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9062,
											"end": 9430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9062,
											"end": 9430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9062,
											"end": 9430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8356,
											"end": 8628,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 8356,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8513,
											"end": 8514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8515,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8494,
											"end": 8515,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8501,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8515,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8494,
											"end": 8515,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8621,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 8494,
											"end": 8621,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8541,
											"end": 8548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 8532,
											"end": 8584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 8569,
											"end": 8574,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8576,
											"end": 8583,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 8552,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8584,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 8552,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8584,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 8532,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 8532,
											"end": 8620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8613,
											"end": 8620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8588,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 8601,
											"end": 8608,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8588,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8588,
											"end": 8609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8588,
											"end": 8609,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 8588,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8620,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 8532,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8494,
											"end": 8621,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 8494,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8475,
											"end": 8621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8475,
											"end": 8621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8356,
											"end": 8628,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8356,
											"end": 8628,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8356,
											"end": 8628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8356,
											"end": 8628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8356,
											"end": 8628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8356,
											"end": 8628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5124,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5316,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 5136,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5261,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5262,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5281,
											"end": 5285,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5286,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5305,
											"end": 5309,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5302,
											"end": 5303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5310,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 5427,
											"end": 5431,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5405,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5393,
											"end": 5433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5520,
											"end": 5542,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5518,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5481,
											"end": 5543,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 5546,
											"end": 5564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5586,
											"end": 5596,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5582,
											"end": 5584,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5575,
											"end": 5597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5365,
											"end": 5603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 5670,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5660,
											"end": 5690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5660,
											"end": 5690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5725,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 5699,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 5918,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 5978,
											"end": 5984,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5956,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6040,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6030,
											"end": 6045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6155,
											"end": 6161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6150,
											"end": 6153,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6148,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6132,
											"end": 6162,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6185,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6171,
											"end": 6198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 6371,
											"end": 6377,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 6329,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 6313,
											"end": 6379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6304,
											"end": 6379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6304,
											"end": 6379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6402,
											"end": 6408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6400,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6388,
											"end": 6409,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6440,
											"end": 6444,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6464,
											"end": 6467,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6460,
											"end": 6476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6482,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 6485,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6612,
											"end": 6615,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 6575,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6294,
											"end": 6635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6711,
											"end": 6716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6745,
											"end": 6751,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6758,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6737,
											"end": 6764,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6768,
											"end": 6847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6891,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 6985,
											"end": 6988,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6977,
											"end": 6983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6970,
											"end": 6974,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6968,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6958,
											"end": 6975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 6910,
											"end": 6989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6901,
											"end": 6989,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6901,
											"end": 6989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7070,
											"end": 7076,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7098,
											"end": 7105,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7094,
											"end": 7117,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7090,
											"end": 7122,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 7125,
											"end": 7204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7276,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7295,
											"end": 7301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7322,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 7325,
											"end": 7404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 7485,
											"end": 7492,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7482,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7465,
											"end": 7474,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7461,
											"end": 7483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 7430,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7420,
											"end": 7493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7420,
											"end": 7493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7216,
											"end": 7503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7607,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7644,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7633,
											"end": 7656,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7661,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 7664,
											"end": 7743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7784,
											"end": 7785,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 7854,
											"end": 7861,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7834,
											"end": 7843,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7830,
											"end": 7852,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 7809,
											"end": 7862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7799,
											"end": 7862,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7799,
											"end": 7862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7913,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 7982,
											"end": 7989,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7973,
											"end": 7979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7962,
											"end": 7971,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7958,
											"end": 7980,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 7937,
											"end": 7990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7990,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7882,
											"end": 8000,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8107,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8090,
											"end": 8099,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8086,
											"end": 8108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 8065,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8118,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8257,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 8141,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 8226,
											"end": 8231,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 8211,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8233,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8247,
											"end": 8248,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8245,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8237,
											"end": 8249,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8306,
											"end": 8311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8331,
											"end": 8351,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8322,
											"end": 8351,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8322,
											"end": 8351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8360,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 8384,
											"end": 8389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8360,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 8360,
											"end": 8390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8360,
											"end": 8390,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 8360,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8476,
											"end": 8482,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8490,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8492,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8543,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8529,
											"end": 8538,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8520,
											"end": 8527,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8516,
											"end": 8539,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8512,
											"end": 8544,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 8547,
											"end": 8626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8667,
											"end": 8668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 8737,
											"end": 8744,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8728,
											"end": 8734,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8717,
											"end": 8726,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8713,
											"end": 8735,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 8692,
											"end": 8745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8682,
											"end": 8745,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8682,
											"end": 8745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8638,
											"end": 8755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8796,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 8865,
											"end": 8872,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8856,
											"end": 8862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 8854,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8841,
											"end": 8863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 8820,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8873,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8765,
											"end": 8883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8924,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8990,
											"end": 8997,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8981,
											"end": 8987,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8970,
											"end": 8979,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8966,
											"end": 8988,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 8948,
											"end": 8998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8893,
											"end": 9008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 9015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9080,
											"end": 9086,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9131,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9117,
											"end": 9126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9108,
											"end": 9115,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9104,
											"end": 9127,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9100,
											"end": 9132,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 9135,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 9135,
											"end": 9214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9214,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 9135,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9280,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 9325,
											"end": 9332,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9316,
											"end": 9322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9305,
											"end": 9314,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9301,
											"end": 9323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9280,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 9280,
											"end": 9333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9280,
											"end": 9333,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 9280,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9270,
											"end": 9333,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9270,
											"end": 9333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9474,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 9356,
											"end": 9474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 9461,
											"end": 9466,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 9443,
											"end": 9467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9438,
											"end": 9441,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9431,
											"end": 9468,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9573,
											"end": 9577,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9611,
											"end": 9613,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9609,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9588,
											"end": 9614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9588,
											"end": 9614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 9692,
											"end": 9693,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9690,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9677,
											"end": 9694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9668,
											"end": 9674,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 9624,
											"end": 9695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9695,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 9624,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 9822,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 9708,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9775,
											"end": 9781,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9809,
											"end": 9814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9815,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9793,
											"end": 9815,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9793,
											"end": 9815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 9822,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 9822,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 9822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 9822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10012,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 9828,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9927,
											"end": 9938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9956,
											"end": 9959,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 9968,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10001,
											"end": 10005,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9996,
											"end": 9999,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 10006,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 10006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10012,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10012,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9828,
											"end": 10012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10018,
											"end": 10150,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 10018,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10085,
											"end": 10089,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10111,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10100,
											"end": 10111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10100,
											"end": 10111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10138,
											"end": 10142,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10133,
											"end": 10136,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10121,
											"end": 10143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10121,
											"end": 10143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10018,
											"end": 10150,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10018,
											"end": 10150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10018,
											"end": 10150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10018,
											"end": 10150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10156,
											"end": 10264,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 10156,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10233,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 10251,
											"end": 10256,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10233,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 10233,
											"end": 10257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10233,
											"end": 10257,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 10233,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10228,
											"end": 10231,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10221,
											"end": 10258,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10156,
											"end": 10264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10156,
											"end": 10264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10156,
											"end": 10264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10449,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 10270,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10339,
											"end": 10349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10360,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 10402,
											"end": 10405,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10400,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10360,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 10360,
											"end": 10406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10360,
											"end": 10406,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 10360,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10438,
											"end": 10442,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10433,
											"end": 10436,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10429,
											"end": 10443,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10415,
											"end": 10443,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10415,
											"end": 10443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10449,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10449,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10455,
											"end": 10568,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 10455,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10525,
											"end": 10529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10557,
											"end": 10561,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10552,
											"end": 10555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10548,
											"end": 10562,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10540,
											"end": 10562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10540,
											"end": 10562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10455,
											"end": 10568,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10455,
											"end": 10568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10455,
											"end": 10568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10455,
											"end": 10568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 11336,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 10604,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10723,
											"end": 10726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10752,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 10800,
											"end": 10805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10752,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 10752,
											"end": 10806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10752,
											"end": 10806,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 10752,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 10901,
											"end": 10907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10896,
											"end": 10899,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 10822,
											"end": 10908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 10908,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 10822,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10815,
											"end": 10908,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10815,
											"end": 10908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 10982,
											"end": 10987,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 10932,
											"end": 10988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 10988,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 10932,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11011,
											"end": 11018,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11042,
											"end": 11043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11027,
											"end": 11311,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 11027,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11052,
											"end": 11058,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11049,
											"end": 11050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11046,
											"end": 11059,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11027,
											"end": 11311,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11027,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 11027,
											"end": 11311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11128,
											"end": 11134,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11122,
											"end": 11135,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11155,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 11214,
											"end": 11217,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11199,
											"end": 11212,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11155,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 11155,
											"end": 11218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11155,
											"end": 11218,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 11155,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11148,
											"end": 11218,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 11148,
											"end": 11218,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11241,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 11294,
											"end": 11300,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11241,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 11241,
											"end": 11301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11241,
											"end": 11301,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 11241,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11231,
											"end": 11301,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11231,
											"end": 11301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11087,
											"end": 11311,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11074,
											"end": 11075,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11071,
											"end": 11072,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11067,
											"end": 11076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11062,
											"end": 11076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11062,
											"end": 11076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11027,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 11027,
											"end": 11311,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11027,
											"end": 11311,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 11027,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11031,
											"end": 11045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11327,
											"end": 11330,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11320,
											"end": 11330,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11320,
											"end": 11330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 11336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 11336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 11336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 11336,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 11336,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 11336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 11336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 11336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11715,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 11342,
											"end": 11715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11485,
											"end": 11489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11525,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11512,
											"end": 11521,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11508,
											"end": 11526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11500,
											"end": 11526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11500,
											"end": 11526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11572,
											"end": 11581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11570,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11562,
											"end": 11582,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11558,
											"end": 11559,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11547,
											"end": 11556,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11543,
											"end": 11560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11536,
											"end": 11583,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11600,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 11703,
											"end": 11707,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11694,
											"end": 11700,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11600,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 11600,
											"end": 11708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11600,
											"end": 11708,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 11600,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11715,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11715,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12189,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 11721,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11786,
											"end": 11792,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11843,
											"end": 11845,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11831,
											"end": 11840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11822,
											"end": 11829,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11818,
											"end": 11841,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11814,
											"end": 11846,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11811,
											"end": 11930,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11811,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 11811,
											"end": 11930,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11849,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 11849,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 11849,
											"end": 11928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11849,
											"end": 11928,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 11849,
											"end": 11928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11811,
											"end": 11930,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 11811,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11969,
											"end": 11970,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11994,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 12039,
											"end": 12046,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12030,
											"end": 12036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12019,
											"end": 12028,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12015,
											"end": 12037,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11994,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 11994,
											"end": 12047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11994,
											"end": 12047,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 11994,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11984,
											"end": 12047,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11984,
											"end": 12047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11940,
											"end": 12057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12096,
											"end": 12098,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12122,
											"end": 12172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 12164,
											"end": 12171,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12140,
											"end": 12162,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12122,
											"end": 12172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 12122,
											"end": 12172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12122,
											"end": 12172,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 12122,
											"end": 12172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12172,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12067,
											"end": 12182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12189,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12189,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12189,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12195,
											"end": 12502,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 12195,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12256,
											"end": 12260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12346,
											"end": 12364,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12338,
											"end": 12344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12335,
											"end": 12365,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12332,
											"end": 12388,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12332,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 12332,
											"end": 12388,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 12368,
											"end": 12386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12332,
											"end": 12388,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 12332,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12406,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12428,
											"end": 12434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12406,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 12406,
											"end": 12435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12406,
											"end": 12435,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12406,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 12435,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 12435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12490,
											"end": 12494,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12480,
											"end": 12495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12472,
											"end": 12495,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12472,
											"end": 12495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12195,
											"end": 12502,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12195,
											"end": 12502,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12195,
											"end": 12502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12195,
											"end": 12502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12508,
											"end": 12931,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 12508,
											"end": 12931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12585,
											"end": 12590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12610,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 12626,
											"end": 12674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 12667,
											"end": 12673,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12626,
											"end": 12674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 12626,
											"end": 12674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12626,
											"end": 12674,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 12626,
											"end": 12674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12610,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 12610,
											"end": 12675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12610,
											"end": 12675,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 12610,
											"end": 12675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12601,
											"end": 12675,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12601,
											"end": 12675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12698,
											"end": 12704,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12691,
											"end": 12696,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12684,
											"end": 12705,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12736,
											"end": 12740,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12729,
											"end": 12734,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12774,
											"end": 12777,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12765,
											"end": 12771,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12763,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12756,
											"end": 12772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12753,
											"end": 12778,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12750,
											"end": 12862,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12750,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 12750,
											"end": 12862,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12781,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 12781,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12781,
											"end": 12860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12781,
											"end": 12860,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 12781,
											"end": 12860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12750,
											"end": 12862,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 12750,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 12918,
											"end": 12924,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 12916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12911,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 12871,
											"end": 12925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12925,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 12871,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12591,
											"end": 12931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12508,
											"end": 12931,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12508,
											"end": 12931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12508,
											"end": 12931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12508,
											"end": 12931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12508,
											"end": 12931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12508,
											"end": 12931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 13288,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 12950,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13005,
											"end": 13010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13054,
											"end": 13057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13047,
											"end": 13051,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13039,
											"end": 13045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13035,
											"end": 13052,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13031,
											"end": 13058,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13021,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 13021,
											"end": 13143,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 13062,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 13062,
											"end": 13141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13141,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 13062,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13021,
											"end": 13143,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 13021,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13179,
											"end": 13185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13166,
											"end": 13186,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 13204,
											"end": 13282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 13278,
											"end": 13281,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13270,
											"end": 13276,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13263,
											"end": 13267,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13255,
											"end": 13261,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13268,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13204,
											"end": 13282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 13204,
											"end": 13282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13204,
											"end": 13282,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 13204,
											"end": 13282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13195,
											"end": 13282,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13195,
											"end": 13282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13011,
											"end": 13288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 13288,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 13288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 13288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 13288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 13288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13294,
											"end": 14237,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 13294,
											"end": 14237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13389,
											"end": 13395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13397,
											"end": 13403,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13405,
											"end": 13411,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13413,
											"end": 13419,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13462,
											"end": 13465,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 13450,
											"end": 13459,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13441,
											"end": 13448,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13437,
											"end": 13460,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13433,
											"end": 13466,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13430,
											"end": 13550,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13430,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 13430,
											"end": 13550,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13469,
											"end": 13548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 13469,
											"end": 13548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 13469,
											"end": 13548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13469,
											"end": 13548,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 13469,
											"end": 13548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13430,
											"end": 13550,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 13430,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13589,
											"end": 13590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13614,
											"end": 13667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 13659,
											"end": 13666,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13650,
											"end": 13656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13639,
											"end": 13648,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13635,
											"end": 13657,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13614,
											"end": 13667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 13614,
											"end": 13667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13614,
											"end": 13667,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 13614,
											"end": 13667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13604,
											"end": 13667,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13604,
											"end": 13667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13560,
											"end": 13677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13716,
											"end": 13718,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13742,
											"end": 13795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 13787,
											"end": 13794,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13778,
											"end": 13784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13767,
											"end": 13776,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13763,
											"end": 13785,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13742,
											"end": 13795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 13742,
											"end": 13795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13742,
											"end": 13795,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 13742,
											"end": 13795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13732,
											"end": 13795,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13732,
											"end": 13795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 13805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13844,
											"end": 13846,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13870,
											"end": 13923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 13915,
											"end": 13922,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13906,
											"end": 13912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13895,
											"end": 13904,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13891,
											"end": 13913,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13870,
											"end": 13923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 13870,
											"end": 13923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13870,
											"end": 13923,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 13870,
											"end": 13923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13860,
											"end": 13923,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13860,
											"end": 13923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13815,
											"end": 13933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14000,
											"end": 14002,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 13989,
											"end": 13998,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13985,
											"end": 14003,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13972,
											"end": 14004,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 14031,
											"end": 14049,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14023,
											"end": 14029,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14020,
											"end": 14050,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14017,
											"end": 14134,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14017,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 14017,
											"end": 14134,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14053,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 14053,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 14053,
											"end": 14132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14053,
											"end": 14132,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 14053,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14017,
											"end": 14134,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 14017,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 14212,
											"end": 14219,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 14203,
											"end": 14209,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14192,
											"end": 14201,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14188,
											"end": 14210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 14158,
											"end": 14220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14220,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 14158,
											"end": 14220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14148,
											"end": 14220,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14148,
											"end": 14220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13943,
											"end": 14230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13294,
											"end": 14237,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13294,
											"end": 14237,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 13294,
											"end": 14237,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13294,
											"end": 14237,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13294,
											"end": 14237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13294,
											"end": 14237,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13294,
											"end": 14237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13294,
											"end": 14237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14243,
											"end": 14897,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 14243,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14321,
											"end": 14327,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14329,
											"end": 14335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14378,
											"end": 14380,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14366,
											"end": 14375,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14357,
											"end": 14364,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14353,
											"end": 14376,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14349,
											"end": 14381,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14346,
											"end": 14465,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14346,
											"end": 14465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 14346,
											"end": 14465,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14384,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 14384,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 14384,
											"end": 14463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14384,
											"end": 14463,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 14384,
											"end": 14463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14346,
											"end": 14465,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 14346,
											"end": 14465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14504,
											"end": 14505,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14529,
											"end": 14582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 14574,
											"end": 14581,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14565,
											"end": 14571,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14563,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14550,
											"end": 14572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14529,
											"end": 14582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 14529,
											"end": 14582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14529,
											"end": 14582,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 14529,
											"end": 14582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14519,
											"end": 14582,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14519,
											"end": 14582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14475,
											"end": 14592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14659,
											"end": 14661,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14648,
											"end": 14657,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14644,
											"end": 14662,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14631,
											"end": 14663,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 14690,
											"end": 14708,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14682,
											"end": 14688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14679,
											"end": 14709,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14676,
											"end": 14793,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14676,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 14676,
											"end": 14793,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14712,
											"end": 14791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 14712,
											"end": 14791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 14712,
											"end": 14791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14712,
											"end": 14791,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 14712,
											"end": 14791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14676,
											"end": 14793,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 14676,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14817,
											"end": 14880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 14872,
											"end": 14879,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14863,
											"end": 14869,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14852,
											"end": 14861,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14848,
											"end": 14870,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14817,
											"end": 14880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 14817,
											"end": 14880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14817,
											"end": 14880,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 14817,
											"end": 14880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14807,
											"end": 14880,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14807,
											"end": 14880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14602,
											"end": 14890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14243,
											"end": 14897,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14243,
											"end": 14897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14243,
											"end": 14897,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14243,
											"end": 14897,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14243,
											"end": 14897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14243,
											"end": 14897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 15377,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 14903,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14971,
											"end": 14977,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14979,
											"end": 14985,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15028,
											"end": 15030,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15016,
											"end": 15025,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15014,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15003,
											"end": 15026,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14999,
											"end": 15031,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14996,
											"end": 15115,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14996,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 14996,
											"end": 15115,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15034,
											"end": 15113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 15034,
											"end": 15113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 15034,
											"end": 15113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15034,
											"end": 15113,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 15034,
											"end": 15113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14996,
											"end": 15115,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 14996,
											"end": 15115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15154,
											"end": 15155,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15179,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 15224,
											"end": 15231,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15215,
											"end": 15221,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15204,
											"end": 15213,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15200,
											"end": 15222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15179,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 15179,
											"end": 15232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15179,
											"end": 15232,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 15179,
											"end": 15232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15232,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15125,
											"end": 15242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15281,
											"end": 15283,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15307,
											"end": 15360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 15352,
											"end": 15359,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15343,
											"end": 15349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15332,
											"end": 15341,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15328,
											"end": 15350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15307,
											"end": 15360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 15307,
											"end": 15360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15307,
											"end": 15360,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 15307,
											"end": 15360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15297,
											"end": 15360,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15297,
											"end": 15360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 15377,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 15377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 15377,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 15377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 15377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 15377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15383,
											"end": 15563,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 15383,
											"end": 15563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15431,
											"end": 15508,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15428,
											"end": 15429,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15421,
											"end": 15509,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15528,
											"end": 15532,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 15525,
											"end": 15526,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15518,
											"end": 15533,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 15556,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15549,
											"end": 15550,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15542,
											"end": 15557,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15569,
											"end": 15889,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 15569,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15613,
											"end": 15619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15650,
											"end": 15651,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 15644,
											"end": 15648,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15652,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15630,
											"end": 15652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15630,
											"end": 15652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15697,
											"end": 15698,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15691,
											"end": 15695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15687,
											"end": 15699,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15718,
											"end": 15736,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15708,
											"end": 15789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 15708,
											"end": 15789,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15774,
											"end": 15778,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 15766,
											"end": 15772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15762,
											"end": 15779,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15752,
											"end": 15779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15752,
											"end": 15779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15708,
											"end": 15789,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 15708,
											"end": 15789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15828,
											"end": 15834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15825,
											"end": 15839,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15802,
											"end": 15840,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15799,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 15799,
											"end": 15883,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15855,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 15855,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 15855,
											"end": 15873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15855,
											"end": 15873,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 15855,
											"end": 15873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15799,
											"end": 15883,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 15799,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15620,
											"end": 15889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15569,
											"end": 15889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15569,
											"end": 15889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15569,
											"end": 15889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15569,
											"end": 15889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15895,
											"end": 16043,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 15895,
											"end": 16043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15997,
											"end": 16008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16034,
											"end": 16037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16019,
											"end": 16037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16019,
											"end": 16037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15895,
											"end": 16043,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15895,
											"end": 16043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15895,
											"end": 16043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15895,
											"end": 16043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15895,
											"end": 16043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16439,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 16049,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16155,
											"end": 16158,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16183,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 16216,
											"end": 16221,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16183,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 16183,
											"end": 16222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16183,
											"end": 16222,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 16183,
											"end": 16222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16238,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 16320,
											"end": 16326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16315,
											"end": 16318,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16238,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 16238,
											"end": 16327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16238,
											"end": 16327,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 16238,
											"end": 16327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16231,
											"end": 16327,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16231,
											"end": 16327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16336,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 16394,
											"end": 16400,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16389,
											"end": 16392,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16382,
											"end": 16386,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16375,
											"end": 16380,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16371,
											"end": 16387,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16336,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 16336,
											"end": 16401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16336,
											"end": 16401,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 16336,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16426,
											"end": 16432,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16424,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16417,
											"end": 16433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16410,
											"end": 16433,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16410,
											"end": 16433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16159,
											"end": 16439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16439,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16439,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16445,
											"end": 16880,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 16445,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16625,
											"end": 16628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 16738,
											"end": 16741,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16647,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 16647,
											"end": 16742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16647,
											"end": 16742,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 16647,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16640,
											"end": 16742,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16640,
											"end": 16742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16759,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 16850,
											"end": 16853,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16841,
											"end": 16847,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16759,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 16759,
											"end": 16854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16759,
											"end": 16854,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 16759,
											"end": 16854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16871,
											"end": 16874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16864,
											"end": 16874,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16864,
											"end": 16874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16445,
											"end": 16880,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16445,
											"end": 16880,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16445,
											"end": 16880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16445,
											"end": 16880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16445,
											"end": 16880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16445,
											"end": 16880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16886,
											"end": 17328,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 16886,
											"end": 17328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17035,
											"end": 17039,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17073,
											"end": 17075,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 17062,
											"end": 17071,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17058,
											"end": 17076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17050,
											"end": 17076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17050,
											"end": 17076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17086,
											"end": 17157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 17154,
											"end": 17155,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17143,
											"end": 17152,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17139,
											"end": 17156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17130,
											"end": 17136,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17086,
											"end": 17157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 17086,
											"end": 17157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17086,
											"end": 17157,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 17086,
											"end": 17157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17167,
											"end": 17239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 17235,
											"end": 17237,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17224,
											"end": 17233,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17211,
											"end": 17217,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17167,
											"end": 17239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 17167,
											"end": 17239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17167,
											"end": 17239,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 17167,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 17317,
											"end": 17319,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17306,
											"end": 17315,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17302,
											"end": 17320,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17293,
											"end": 17299,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 17249,
											"end": 17321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17321,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 17249,
											"end": 17321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16886,
											"end": 17328,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16886,
											"end": 17328,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16886,
											"end": 17328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16886,
											"end": 17328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16886,
											"end": 17328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16886,
											"end": 17328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16886,
											"end": 17328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17334,
											"end": 17514,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 17334,
											"end": 17514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17382,
											"end": 17459,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17379,
											"end": 17380,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17372,
											"end": 17460,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17479,
											"end": 17483,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 17476,
											"end": 17477,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17469,
											"end": 17484,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17503,
											"end": 17507,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17500,
											"end": 17501,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17493,
											"end": 17508,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17520,
											"end": 17700,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 17520,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17568,
											"end": 17645,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17565,
											"end": 17566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17558,
											"end": 17646,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17665,
											"end": 17669,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 17662,
											"end": 17663,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17655,
											"end": 17670,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17689,
											"end": 17693,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17686,
											"end": 17687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17679,
											"end": 17694,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17939,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 17706,
											"end": 17939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17745,
											"end": 17748,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17768,
											"end": 17792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 17786,
											"end": 17791,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17768,
											"end": 17792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 17768,
											"end": 17792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17768,
											"end": 17792,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 17768,
											"end": 17792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17759,
											"end": 17792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17759,
											"end": 17792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17814,
											"end": 17880,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17807,
											"end": 17812,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17804,
											"end": 17881,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17801,
											"end": 17904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 17801,
											"end": 17904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17884,
											"end": 17902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 17884,
											"end": 17902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 17884,
											"end": 17902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17884,
											"end": 17902,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 17884,
											"end": 17902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17801,
											"end": 17904,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 17801,
											"end": 17904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17931,
											"end": 17932,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17924,
											"end": 17929,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17920,
											"end": 17933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17913,
											"end": 17933,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17913,
											"end": 17933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17945,
											"end": 18086,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 17945,
											"end": 18086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17994,
											"end": 17998,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18017,
											"end": 18020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18009,
											"end": 18020,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18009,
											"end": 18020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18040,
											"end": 18043,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18037,
											"end": 18038,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18030,
											"end": 18044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18074,
											"end": 18078,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18071,
											"end": 18072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18061,
											"end": 18079,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 18053,
											"end": 18079,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18053,
											"end": 18079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17945,
											"end": 18086,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17945,
											"end": 18086,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17945,
											"end": 18086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17945,
											"end": 18086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18092,
											"end": 18185,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 18092,
											"end": 18185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18129,
											"end": 18135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18176,
											"end": 18178,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18171,
											"end": 18173,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18164,
											"end": 18169,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18174,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18156,
											"end": 18179,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 18146,
											"end": 18179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18146,
											"end": 18179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18092,
											"end": 18185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18092,
											"end": 18185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18092,
											"end": 18185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18092,
											"end": 18185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18298,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 18191,
											"end": 18298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18235,
											"end": 18243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18285,
											"end": 18290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18279,
											"end": 18283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18275,
											"end": 18291,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 18254,
											"end": 18291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18254,
											"end": 18291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18298,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18298,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18304,
											"end": 18697,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 18304,
											"end": 18697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18373,
											"end": 18379,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18423,
											"end": 18424,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 18411,
											"end": 18421,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18407,
											"end": 18425,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 18446,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 18476,
											"end": 18542,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18465,
											"end": 18474,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18446,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 18446,
											"end": 18543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18446,
											"end": 18543,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 18446,
											"end": 18543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18564,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 18594,
											"end": 18602,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18583,
											"end": 18592,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18564,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 18564,
											"end": 18603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18564,
											"end": 18603,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 18564,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18552,
											"end": 18603,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 18552,
											"end": 18603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18636,
											"end": 18640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18632,
											"end": 18641,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 18625,
											"end": 18630,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18621,
											"end": 18642,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18612,
											"end": 18642,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18612,
											"end": 18642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18685,
											"end": 18689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18675,
											"end": 18683,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18671,
											"end": 18690,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18664,
											"end": 18669,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18661,
											"end": 18691,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 18651,
											"end": 18691,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18651,
											"end": 18691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18380,
											"end": 18697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18380,
											"end": 18697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18304,
											"end": 18697,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18304,
											"end": 18697,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18304,
											"end": 18697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18304,
											"end": 18697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18304,
											"end": 18697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18304,
											"end": 18697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18703,
											"end": 18763,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 18703,
											"end": 18763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18731,
											"end": 18734,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18752,
											"end": 18757,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18745,
											"end": 18757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18745,
											"end": 18757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18703,
											"end": 18763,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18703,
											"end": 18763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18703,
											"end": 18763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18703,
											"end": 18763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18769,
											"end": 18911,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 18769,
											"end": 18911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18819,
											"end": 18828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18852,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 18870,
											"end": 18904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 18879,
											"end": 18903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 18897,
											"end": 18902,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18879,
											"end": 18903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 18879,
											"end": 18903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18879,
											"end": 18903,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 18879,
											"end": 18903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18870,
											"end": 18904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 18870,
											"end": 18904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18870,
											"end": 18904,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 18870,
											"end": 18904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18852,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 18852,
											"end": 18905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18852,
											"end": 18905,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 18852,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18839,
											"end": 18905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18839,
											"end": 18905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18769,
											"end": 18911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18769,
											"end": 18911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18769,
											"end": 18911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18769,
											"end": 18911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18917,
											"end": 18992,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 18917,
											"end": 18992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18960,
											"end": 18963,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18981,
											"end": 18986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18974,
											"end": 18986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18974,
											"end": 18986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18917,
											"end": 18992,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18917,
											"end": 18992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18917,
											"end": 18992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18917,
											"end": 18992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19267,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 18998,
											"end": 19267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 19139,
											"end": 19146,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 19108,
											"end": 19147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19147,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 19108,
											"end": 19147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19169,
											"end": 19260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 19218,
											"end": 19259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 19242,
											"end": 19258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19218,
											"end": 19259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 19218,
											"end": 19259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19218,
											"end": 19259,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 19218,
											"end": 19259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19210,
											"end": 19216,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19203,
											"end": 19207,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19197,
											"end": 19208,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 19169,
											"end": 19260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 19169,
											"end": 19260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19169,
											"end": 19260,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 19169,
											"end": 19260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19163,
											"end": 19167,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19156,
											"end": 19261,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19074,
											"end": 19267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19273,
											"end": 19346,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 19273,
											"end": 19346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19318,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19273,
											"end": 19346,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19273,
											"end": 19346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19352,
											"end": 19541,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 19352,
											"end": 19541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19429,
											"end": 19461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 19429,
											"end": 19461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 19429,
											"end": 19461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19429,
											"end": 19461,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 19429,
											"end": 19461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19470,
											"end": 19535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 19528,
											"end": 19534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19520,
											"end": 19526,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19514,
											"end": 19518,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19470,
											"end": 19535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 19470,
											"end": 19535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19470,
											"end": 19535,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 19470,
											"end": 19535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19405,
											"end": 19541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19352,
											"end": 19541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19352,
											"end": 19541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19352,
											"end": 19541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19547,
											"end": 19733,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 19547,
											"end": 19733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19607,
											"end": 19727,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 19607,
											"end": 19727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19624,
											"end": 19627,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19617,
											"end": 19622,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19614,
											"end": 19628,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 19607,
											"end": 19727,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19607,
											"end": 19727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 19607,
											"end": 19727,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19678,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 19715,
											"end": 19716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19708,
											"end": 19713,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19678,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 19678,
											"end": 19717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19678,
											"end": 19717,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 19678,
											"end": 19717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19651,
											"end": 19652,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19644,
											"end": 19649,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19640,
											"end": 19653,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19631,
											"end": 19653,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19631,
											"end": 19653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19607,
											"end": 19727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 19607,
											"end": 19727,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19607,
											"end": 19727,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 19607,
											"end": 19727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19547,
											"end": 19733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19547,
											"end": 19733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19547,
											"end": 19733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19739,
											"end": 20282,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 19739,
											"end": 20282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19840,
											"end": 19842,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 19835,
											"end": 19838,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19832,
											"end": 19843,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19829,
											"end": 20275,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19829,
											"end": 20275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 19829,
											"end": 20275,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19874,
											"end": 19912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 19906,
											"end": 19911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19874,
											"end": 19912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 19874,
											"end": 19912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19874,
											"end": 19912,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 19874,
											"end": 19912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19958,
											"end": 19987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 19976,
											"end": 19986,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19958,
											"end": 19987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 19958,
											"end": 19987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19958,
											"end": 19987,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 19958,
											"end": 19987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19948,
											"end": 19956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19944,
											"end": 19988,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20141,
											"end": 20143,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20129,
											"end": 20139,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20126,
											"end": 20144,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20123,
											"end": 20172,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20123,
											"end": 20172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 20123,
											"end": 20172,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20162,
											"end": 20170,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20147,
											"end": 20170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20147,
											"end": 20170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20123,
											"end": 20172,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 20123,
											"end": 20172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20185,
											"end": 20265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 20241,
											"end": 20263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 20259,
											"end": 20262,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20241,
											"end": 20263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 20241,
											"end": 20263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20241,
											"end": 20263,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 20241,
											"end": 20263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20231,
											"end": 20239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20227,
											"end": 20264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20214,
											"end": 20225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20185,
											"end": 20265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 20185,
											"end": 20265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20185,
											"end": 20265,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 20185,
											"end": 20265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19844,
											"end": 20275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19844,
											"end": 20275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19829,
											"end": 20275,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 19829,
											"end": 20275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19739,
											"end": 20282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19739,
											"end": 20282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19739,
											"end": 20282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19739,
											"end": 20282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20288,
											"end": 20405,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 20288,
											"end": 20405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20342,
											"end": 20350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20392,
											"end": 20397,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20386,
											"end": 20390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20382,
											"end": 20398,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 20361,
											"end": 20398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20361,
											"end": 20398,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20288,
											"end": 20405,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20288,
											"end": 20405,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20288,
											"end": 20405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20288,
											"end": 20405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20288,
											"end": 20405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20411,
											"end": 20580,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 20411,
											"end": 20580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20455,
											"end": 20461,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20488,
											"end": 20539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 20536,
											"end": 20537,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20532,
											"end": 20538,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 20524,
											"end": 20529,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20521,
											"end": 20522,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 20517,
											"end": 20530,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 20488,
											"end": 20539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 20488,
											"end": 20539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20488,
											"end": 20539,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 20488,
											"end": 20539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20484,
											"end": 20540,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 20569,
											"end": 20573,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20563,
											"end": 20567,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20559,
											"end": 20574,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 20549,
											"end": 20574,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20549,
											"end": 20574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20462,
											"end": 20580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20411,
											"end": 20580,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20411,
											"end": 20580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20411,
											"end": 20580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20411,
											"end": 20580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20411,
											"end": 20580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20585,
											"end": 20880,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 20585,
											"end": 20880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20661,
											"end": 20665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20807,
											"end": 20836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 20832,
											"end": 20835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20826,
											"end": 20830,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20807,
											"end": 20836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 20807,
											"end": 20836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20807,
											"end": 20836,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 20807,
											"end": 20836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20799,
											"end": 20836,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20799,
											"end": 20836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20869,
											"end": 20872,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20866,
											"end": 20867,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 20862,
											"end": 20873,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 20856,
											"end": 20860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20853,
											"end": 20874,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 20845,
											"end": 20874,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20845,
											"end": 20874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20585,
											"end": 20880,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20585,
											"end": 20880,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20585,
											"end": 20880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20585,
											"end": 20880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20585,
											"end": 20880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20885,
											"end": 22280,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 20885,
											"end": 22280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21002,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 21035,
											"end": 21038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21002,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 21002,
											"end": 21039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21002,
											"end": 21039,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 21002,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21104,
											"end": 21122,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21096,
											"end": 21102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21093,
											"end": 21123,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 21090,
											"end": 21146,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21090,
											"end": 21146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 21090,
											"end": 21146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21126,
											"end": 21144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 21126,
											"end": 21144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 21126,
											"end": 21144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21126,
											"end": 21144,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 21126,
											"end": 21144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21090,
											"end": 21146,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 21090,
											"end": 21146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21170,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 21202,
											"end": 21206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21196,
											"end": 21207,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 21170,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 21170,
											"end": 21208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21170,
											"end": 21208,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 21170,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21255,
											"end": 21322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 21315,
											"end": 21321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21307,
											"end": 21313,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21301,
											"end": 21305,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21255,
											"end": 21322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 21255,
											"end": 21322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21255,
											"end": 21322,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 21255,
											"end": 21322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21349,
											"end": 21350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21373,
											"end": 21377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21360,
											"end": 21377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21360,
											"end": 21377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21405,
											"end": 21407,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 21397,
											"end": 21403,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21394,
											"end": 21408,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 21422,
											"end": 21423,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 21417,
											"end": 22035,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21417,
											"end": 22035,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 21417,
											"end": 22035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 21417,
											"end": 22035,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22079,
											"end": 22080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22096,
											"end": 22102,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22093,
											"end": 22170,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22093,
											"end": 22170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 22093,
											"end": 22170,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22145,
											"end": 22154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22140,
											"end": 22143,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 22136,
											"end": 22155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22130,
											"end": 22156,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22121,
											"end": 22156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22121,
											"end": 22156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22093,
											"end": 22170,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 22093,
											"end": 22170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22196,
											"end": 22263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 22256,
											"end": 22262,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22249,
											"end": 22254,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22196,
											"end": 22263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 22196,
											"end": 22263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22196,
											"end": 22263,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 22196,
											"end": 22263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22190,
											"end": 22194,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22183,
											"end": 22264,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 22052,
											"end": 22274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21387,
											"end": 22274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 21387,
											"end": 22274,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21417,
											"end": 22035,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 21417,
											"end": 22035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21469,
											"end": 21473,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 21465,
											"end": 21474,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 21457,
											"end": 21463,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21453,
											"end": 21475,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21503,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 21535,
											"end": 21539,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21503,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 21503,
											"end": 21540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21503,
											"end": 21540,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 21503,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21562,
											"end": 21563,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21576,
											"end": 21784,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 21576,
											"end": 21784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21590,
											"end": 21597,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21587,
											"end": 21588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21584,
											"end": 21598,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 21576,
											"end": 21784,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21576,
											"end": 21784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 21576,
											"end": 21784,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21669,
											"end": 21678,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21664,
											"end": 21667,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 21660,
											"end": 21679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 21646,
											"end": 21652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21639,
											"end": 21681,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 21720,
											"end": 21721,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 21712,
											"end": 21718,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21708,
											"end": 21722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21722,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21767,
											"end": 21769,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21756,
											"end": 21765,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21752,
											"end": 21770,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21739,
											"end": 21770,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 21739,
											"end": 21770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21613,
											"end": 21617,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21610,
											"end": 21611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21606,
											"end": 21618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21601,
											"end": 21618,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21601,
											"end": 21618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21576,
											"end": 21784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 21576,
											"end": 21784,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21576,
											"end": 21784,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 21576,
											"end": 21784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21812,
											"end": 21818,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21803,
											"end": 21810,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21800,
											"end": 21819,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 21797,
											"end": 21976,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21797,
											"end": 21976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 21797,
											"end": 21976,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21870,
											"end": 21879,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21865,
											"end": 21868,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 21880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21855,
											"end": 21881,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 21913,
											"end": 21961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 21955,
											"end": 21959,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 21947,
											"end": 21953,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 21943,
											"end": 21960,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21913,
											"end": 21961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 21913,
											"end": 21961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21913,
											"end": 21961,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 21913,
											"end": 21961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21905,
											"end": 21911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21898,
											"end": 21962,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 21820,
											"end": 21976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21797,
											"end": 21976,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 21797,
											"end": 21976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22022,
											"end": 22023,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 22018,
											"end": 22019,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 22010,
											"end": 22016,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 22006,
											"end": 22020,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 22002,
											"end": 22024,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21996,
											"end": 22000,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 21989,
											"end": 22025,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 21424,
											"end": 22035,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21424,
											"end": 22035,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21424,
											"end": 22035,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21387,
											"end": 22274,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 21387,
											"end": 22274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21387,
											"end": 22274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 22280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 22280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 22280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20885,
											"end": 22280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20885,
											"end": 22280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20885,
											"end": 22280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22286,
											"end": 22384,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 22286,
											"end": 22384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22337,
											"end": 22343,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22371,
											"end": 22376,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22365,
											"end": 22377,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22355,
											"end": 22377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22355,
											"end": 22377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22286,
											"end": 22384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22286,
											"end": 22384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22286,
											"end": 22384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22286,
											"end": 22384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22390,
											"end": 22558,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 22390,
											"end": 22558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22473,
											"end": 22484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22507,
											"end": 22513,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22502,
											"end": 22505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22495,
											"end": 22514,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22547,
											"end": 22551,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22542,
											"end": 22545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22538,
											"end": 22552,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22523,
											"end": 22552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22523,
											"end": 22552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22390,
											"end": 22558,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22390,
											"end": 22558,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22390,
											"end": 22558,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22390,
											"end": 22558,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22390,
											"end": 22558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22564,
											"end": 22937,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 22564,
											"end": 22937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22650,
											"end": 22653,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 22710,
											"end": 22715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22678,
											"end": 22716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 22678,
											"end": 22716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22678,
											"end": 22716,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 22678,
											"end": 22716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22732,
											"end": 22802,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 22795,
											"end": 22801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22790,
											"end": 22793,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22732,
											"end": 22802,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 22732,
											"end": 22802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22732,
											"end": 22802,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 22732,
											"end": 22802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22725,
											"end": 22802,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 22725,
											"end": 22802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22811,
											"end": 22876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 22869,
											"end": 22875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22864,
											"end": 22867,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22857,
											"end": 22861,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22850,
											"end": 22855,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22846,
											"end": 22862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22811,
											"end": 22876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 22811,
											"end": 22876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22811,
											"end": 22876,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 22811,
											"end": 22876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22901,
											"end": 22930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 22923,
											"end": 22929,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22901,
											"end": 22930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 22901,
											"end": 22930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22901,
											"end": 22930,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 22901,
											"end": 22930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22896,
											"end": 22899,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22892,
											"end": 22931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22885,
											"end": 22931,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22885,
											"end": 22931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22654,
											"end": 22937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22564,
											"end": 22937,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22564,
											"end": 22937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22564,
											"end": 22937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22564,
											"end": 22937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22564,
											"end": 22937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 23583,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 22943,
											"end": 23583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23138,
											"end": 23142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23176,
											"end": 23179,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 23165,
											"end": 23174,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23161,
											"end": 23180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23153,
											"end": 23180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23153,
											"end": 23180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23190,
											"end": 23261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 23258,
											"end": 23259,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23247,
											"end": 23256,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23243,
											"end": 23260,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23234,
											"end": 23240,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 23190,
											"end": 23261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 23190,
											"end": 23261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23190,
											"end": 23261,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 23190,
											"end": 23261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23271,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 23339,
											"end": 23341,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23328,
											"end": 23337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23324,
											"end": 23342,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23315,
											"end": 23321,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23271,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 23271,
											"end": 23343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23271,
											"end": 23343,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 23271,
											"end": 23343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23353,
											"end": 23425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 23421,
											"end": 23423,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 23410,
											"end": 23419,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23406,
											"end": 23424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23397,
											"end": 23403,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23353,
											"end": 23425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 23353,
											"end": 23425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23353,
											"end": 23425,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 23353,
											"end": 23425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23472,
											"end": 23481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23466,
											"end": 23470,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23462,
											"end": 23482,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23457,
											"end": 23459,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 23446,
											"end": 23455,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23442,
											"end": 23460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23435,
											"end": 23483,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23500,
											"end": 23576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 23571,
											"end": 23575,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23562,
											"end": 23568,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23500,
											"end": 23576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 23500,
											"end": 23576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23500,
											"end": 23576,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 23500,
											"end": 23576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23492,
											"end": 23576,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23492,
											"end": 23576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 23583,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 23583,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 23583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 23583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 23583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 23583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 23583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 23583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23589,
											"end": 23730,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 23589,
											"end": 23730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23645,
											"end": 23650,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23676,
											"end": 23682,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23670,
											"end": 23683,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 23661,
											"end": 23683,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23661,
											"end": 23683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23692,
											"end": 23724,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 23718,
											"end": 23723,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23692,
											"end": 23724,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 23692,
											"end": 23724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23692,
											"end": 23724,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 23692,
											"end": 23724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23589,
											"end": 23730,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23589,
											"end": 23730,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23589,
											"end": 23730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23589,
											"end": 23730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23589,
											"end": 23730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23736,
											"end": 24085,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 23736,
											"end": 24085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23805,
											"end": 23811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23854,
											"end": 23856,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23842,
											"end": 23851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23833,
											"end": 23840,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23829,
											"end": 23852,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23825,
											"end": 23857,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 23822,
											"end": 23941,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 23822,
											"end": 23941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 23822,
											"end": 23941,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23860,
											"end": 23939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 23860,
											"end": 23939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 23860,
											"end": 23939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23860,
											"end": 23939,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 23860,
											"end": 23939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23822,
											"end": 23941,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 23822,
											"end": 23941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23980,
											"end": 23981,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24005,
											"end": 24068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 24060,
											"end": 24067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24051,
											"end": 24057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24040,
											"end": 24049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24036,
											"end": 24058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24005,
											"end": 24068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 24005,
											"end": 24068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24005,
											"end": 24068,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 24005,
											"end": 24068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23995,
											"end": 24068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23995,
											"end": 24068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23951,
											"end": 24078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23736,
											"end": 24085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23736,
											"end": 24085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23736,
											"end": 24085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23736,
											"end": 24085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23736,
											"end": 24085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24091,
											"end": 24423,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 24091,
											"end": 24423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24212,
											"end": 24216,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24250,
											"end": 24252,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24239,
											"end": 24248,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24235,
											"end": 24253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24227,
											"end": 24253,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24227,
											"end": 24253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24263,
											"end": 24334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 24331,
											"end": 24332,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24320,
											"end": 24329,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24316,
											"end": 24333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24307,
											"end": 24313,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24263,
											"end": 24334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 24263,
											"end": 24334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24263,
											"end": 24334,
											"name": "tag",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 24263,
											"end": 24334,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24344,
											"end": 24416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 24412,
											"end": 24414,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24401,
											"end": 24410,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24397,
											"end": 24415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24388,
											"end": 24394,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24344,
											"end": 24416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 24344,
											"end": 24416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24344,
											"end": 24416,
											"name": "tag",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 24344,
											"end": 24416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24091,
											"end": 24423,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 24091,
											"end": 24423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24091,
											"end": 24423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24091,
											"end": 24423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24091,
											"end": 24423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24091,
											"end": 24423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									],
									".data": {
										"D1F8D88B6E34B43596D2DE84A0185752A3ADD6E83A91B900A9741F09EDC98FFE": "68747470733a2f2f636f72616c2d646561722d676962626f6e2d3933302e6d7970696e6174612e636c6f75642f697066732f"
									}
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_totalsupply()": "a393dc44",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"minting(uint256,string)": "e2c4c4b2",
							"msgsenderOwntoken(address)": "828e7a01",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setAppAll(address,address,bool)": "29d6724e",
							"setApprovalForAll(address,bool)": "a22cb465",
							"showtotalsupply()": "abec7101",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"urlmaker(string)": "1b00fd16"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalsupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"minting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"msgsenderOwntoken\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setAppAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showtotalsupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"}],\"name\":\"urlmaker\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"myNFT.sol\":\"MyNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"myNFT.sol\":{\"keccak256\":\"0xfdaeac280b728ecd717d9452ab406986fd9bfaa5afdb7779fb1576cb4e54f7c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://956908f913810ae142b474f1634fc3204a989e49bfac5cd6cd5dc7b3b2c6f214\",\"dweb:/ipfs/QmWnDmxoSgj5LPNheCvouPsuQkd9E8kgDjiPiyV57nJLtc\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x341a5e7cf2657a3387f6b587bde8e5aca3bb46b9b9ada9ec4ce2fd3d49112d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1002178ac20154379587d7c1b866bc2d2c31ecc1597649baedbc731d3b1e10b3\",\"dweb:/ipfs/QmUBTKtBf3QcYsBViyp4NPHdftdnBPaiaB9Ew9JBts7pKp\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 271,
								"contract": "myNFT.sol:MyNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 273,
								"contract": "myNFT.sol:MyNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 275,
								"contract": "myNFT.sol:MyNFT",
								"label": "_totalsupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 279,
								"contract": "myNFT.sol:MyNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 283,
								"contract": "myNFT.sol:MyNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 287,
								"contract": "myNFT.sol:MyNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 293,
								"contract": "myNFT.sol:MyNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 20,
								"contract": "myNFT.sol:MyNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_totalsupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "msgsenderOwntoken",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showtotalsupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalsupply()": "a393dc44",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"msgsenderOwntoken(address)": "828e7a01",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"showtotalsupply()": "abec7101",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalsupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"msgsenderOwntoken\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showtotalsupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x341a5e7cf2657a3387f6b587bde8e5aca3bb46b9b9ada9ec4ce2fd3d49112d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1002178ac20154379587d7c1b866bc2d2c31ecc1597649baedbc731d3b1e10b3\",\"dweb:/ipfs/QmUBTKtBf3QcYsBViyp4NPHdftdnBPaiaB9Ew9JBts7pKp\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 271,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 273,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 275,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_totalsupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 279,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 283,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 287,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 293,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE LOG0 SHL LOG1 PUSH12 0x501DE2139FDD8AE251F0184F PC PUSH0 SHL 0xCE PUSH22 0xFB632A360C419F55104964736F6C6343000814003300 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE LOG0 SHL LOG1 PUSH12 0x501DE2139FDD8AE251F0184F PC PUSH0 SHL 0xCE PUSH22 0xFB632A360C419F55104964736F6C6343000814003300 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC4 PUSH4 0xF2230C88 0xB9 0x24 COINBASE 0x29 0xF6 PUSH32 0x18C20B5EFEF73BEEBD82F6AE01811F8F237F9364736F6C634300081400330000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC4 PUSH4 0xF2230C88 0xB9 0x24 COINBASE 0x29 0xF6 PUSH32 0x18C20B5EFEF73BEEBD82F6AE01811F8F237F9364736F6C634300081400330000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE5 PUSH18 0x920DF3D3B9837FA8CC61487E189FEACB6E85 STOP 0x2F SWAP9 0xD3 0xDD STOP 0xE9 0xAA 0x4C PUSH1 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE5 PUSH18 0x920DF3D3B9837FA8CC61487E189FEACB6E85 STOP 0x2F SWAP9 0xD3 0xDD STOP 0xE9 0xAA 0x4C PUSH1 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> myNFT.sol:12:37:\n   |\n12 |   function minting(uint256 _tokenId,string memory tokenURI) public{\n   |                                     ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> myNFT.sol:17:6:\n   |\n17 |      function tokenURI(uint256 _tokenId) public view override returns (string memory) {\n   |      ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 622,
						"file": "myNFT.sol",
						"message": "The shadowed declaration is here:",
						"start": 497
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 407,
					"file": "myNFT.sol",
					"start": 385
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> myNFT.sol:25:3:\n   |\n25 |   function _baseURI()internal view override returns (string memory){\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 948,
					"file": "myNFT.sol",
					"start": 813
				},
				"type": "Warning"
			}
		],
		"sources": {
			"myNFT.sol": {
				"ast": {
					"absolutePath": "myNFT.sol",
					"exportedSymbols": {
						"Context": [
							1534
						],
						"ERC165": [
							1813
						],
						"ERC721": [
							1349
						],
						"IERC165": [
							1825
						],
						"IERC721": [
							1466
						],
						"IERC721Errors": [
							191
						],
						"IERC721Metadata": [
							1512
						],
						"IERC721Receiver": [
							1484
						],
						"MyNFT": [
							101
						],
						"Strings": [
							1789
						]
					},
					"id": 102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30:24:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "./node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 102,
							"sourceUnit": 1350,
							"src": "56:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721",
										"nameLocations": [
											"147:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1349,
										"src": "147:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "147:6:0"
								}
							],
							"canonicalName": "MyNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 101,
							"linearizedBaseContracts": [
								101,
								1349,
								191,
								1512,
								1466,
								1813,
								1825,
								1534
							],
							"name": "MyNFT",
							"nameLocation": "138:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "233:2:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 11,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "219:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 12,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 13,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 10,
												"name": "ERC721",
												"nameLocations": [
													"212:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1349,
												"src": "212:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "212:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "183:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "169:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "169:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "189:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "189:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:43:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:0:0"
									},
									"scope": 101,
									"src": "157:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "335:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "300:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 19,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 17,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "308:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "300:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 18,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "319:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "415:75:0",
										"statements": [
											{
												"expression": {
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 27,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "420:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 29,
														"indexExpression": {
															"id": 28,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "420:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 30,
														"name": "tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "443:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "420:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "420:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 34,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "465:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "469:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "465:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 36,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "476:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 33,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "459:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "459:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "459:26:0"
											}
										]
									},
									"functionSelector": "e2c4c4b2",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "minting",
									"nameLocation": "360:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "376:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "368:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "399:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "385:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 23,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "385:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:41:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:0:0"
									},
									"scope": 101,
									"src": "351:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										525
									],
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "578:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 48,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "595:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 50,
													"indexExpression": {
														"id": 49,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "606:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "595:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 47,
												"id": 51,
												"nodeType": "Return",
												"src": "588:27:0"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "506:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 44,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "545:8:0"
									},
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "523:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "515:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:18:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "563:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 45,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "563:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:15:0"
									},
									"scope": 101,
									"src": "497:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "703:107:0",
										"statements": [
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "727:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 74,
														"src": "713:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 60,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "713:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 64,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 62,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															84
														],
														"referencedDeclaration": 84,
														"src": "737:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "737:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "713:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 69,
																	"name": "baseURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "788:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 70,
																	"name": "_url",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "797:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 67,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "771:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "775:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "771:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "771:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "764:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 65,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "764:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 73,
												"nodeType": "Return",
												"src": "757:46:0"
											}
										]
									},
									"functionSelector": "1b00fd16",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "urlmaker",
									"nameLocation": "637:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "_url",
												"nameLocation": "661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "646:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 54,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "646:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:21:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "688:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "688:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:15:0"
									},
									"scope": 101,
									"src": "628:182:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										534
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "878:70:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f636f72616c2d646561722d676962626f6e2d3933302e6d7970696e6174612e636c6f75642f697066732f",
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "891:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d1f8d88b6e34b43596d2de84a0185752a3add6e83a91b900a9741f09edc98ffe",
														"typeString": "literal_string \"https://coral-dear-gibbon-930.mypinata.cloud/ipfs/\""
													},
													"value": "https://coral-dear-gibbon-930.mypinata.cloud/ipfs/"
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "884:59:0"
											}
										]
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "822:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "846:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "864:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 78,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "864:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:15:0"
									},
									"scope": 101,
									"src": "813:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1140:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 94,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1169:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 95,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1176:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 96,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1186:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 93,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "1150:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1150:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1150:45:0"
											}
										]
									},
									"functionSelector": "29d6724e",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAppAll",
									"nameLocation": "1075:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1093:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1085:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1108:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1100:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1123:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1118:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1118:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:48:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1140:0:0"
									},
									"scope": 101,
									"src": "1066:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 102,
							"src": "129:1089:0",
							"usedErrors": [
								149,
								154,
								163,
								168,
								173,
								180,
								185,
								190
							],
							"usedEvents": [
								1365,
								1374,
								1383
							]
						}
					],
					"src": "30:1189:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							238
						],
						"IERC20Errors": [
							143
						],
						"IERC721Errors": [
							191
						]
					},
					"id": 239,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 103,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 104,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 113,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 118,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 123,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 132,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 137,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 142,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 239,
							"src": "278:1764:1",
							"usedErrors": [
								113,
								118,
								123,
								132,
								137,
								142
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 144,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 191,
							"linearizedBaseContracts": [
								191
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 149,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 154,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 163,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 168,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 173,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 180,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 185,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 190,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 239,
							"src": "2186:2092:1",
							"usedErrors": [
								149,
								154,
								163,
								168,
								173,
								180,
								185,
								190
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 192,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 238,
							"linearizedBaseContracts": [
								238
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 203,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 208,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 213,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 220,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 225,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 230,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 237,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 239,
							"src": "4424:2107:1",
							"usedErrors": [
								203,
								208,
								213,
								220,
								225,
								230,
								237
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1534
						],
						"ERC165": [
							1813
						],
						"ERC721": [
							1349
						],
						"IERC165": [
							1825
						],
						"IERC721": [
							1466
						],
						"IERC721Errors": [
							191
						],
						"IERC721Metadata": [
							1512
						],
						"IERC721Receiver": [
							1484
						],
						"Strings": [
							1789
						]
					},
					"id": 1350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 240,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 242,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 1467,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 241,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 244,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 1485,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 243,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1484,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 1513,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 245,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1512,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 1535,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 247,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1534,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 1790,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 249,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1789,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 253,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 1814,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 251,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1825,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 252,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1813,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 239,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 254,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 191,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 257,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1534,
										"src": "804:7:2"
									},
									"id": 258,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 259,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1813,
										"src": "813:6:2"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 261,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "821:7:2"
									},
									"id": 262,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 263,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "830:15:2"
									},
									"id": 264,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 265,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 191,
										"src": "847:13:2"
									},
									"id": 266,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 256,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1349,
							"linearizedBaseContracts": [
								1349,
								191,
								1512,
								1466,
								1813,
								1825,
								1534
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 269,
									"libraryName": {
										"id": 267,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1789,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 268,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 271,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "917:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 270,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 273,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "964:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 272,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a393dc44",
									"id": 275,
									"mutability": "mutable",
									"name": "_totalsupply",
									"nameLocation": "1212:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1197:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 274,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1197:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1274:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1230:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 278,
										"keyName": "tokenId",
										"keyNameLocation": "1246:7:2",
										"keyType": {
											"id": 276,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1238:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1230:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1257:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 283,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1480:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1438:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 282,
										"keyName": "owner",
										"keyNameLocation": "1454:5:2",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1446:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1438:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 281,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1463:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1587:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1543:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 286,
										"keyName": "tokenId",
										"keyNameLocation": "1559:7:2",
										"keyType": {
											"id": 284,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1551:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1543:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 285,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1570:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 293,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1797:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1729:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 292,
										"keyName": "owner",
										"keyNameLocation": "1745:5:2",
										"keyType": {
											"id": 288,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1737:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1729:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 291,
											"keyName": "operator",
											"keyNameLocation": "1770:8:2",
											"keyType": {
												"id": 289,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1762:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1754:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 290,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1782:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "1991:81:2",
										"statements": [
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 301,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2001:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 302,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2009:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2001:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "2001:13:2"
											},
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 305,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2024:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 306,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2024:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2024:17:2"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 309,
														"name": "_totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "2051:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2064:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2051:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2051:14:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "1822:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 314,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1961:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1947:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1947:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1982:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1968:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1968:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1946:44:2"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1991:0:2"
									},
									"scope": 1349,
									"src": "1935:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1812,
										1824
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2348:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "2377:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 327,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "2397:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1466_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1466_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 326,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2392:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2392:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1466",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2406:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2392:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2377:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 331,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "2433:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 333,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "2453:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1512_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1512_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 332,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2448:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2448:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1512",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2470:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2448:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2433:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2377:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 340,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "2521:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 338,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2497:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1349_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2503:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1812,
															"src": "2497:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2497:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2377:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 324,
												"id": 343,
												"nodeType": "Return",
												"src": "2358:175:2"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "2078:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2249:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 321,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 319,
												"name": "ERC165",
												"nameLocations": [
													"2316:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1813,
												"src": "2316:6:2"
											},
											{
												"id": 320,
												"name": "IERC165",
												"nameLocations": [
													"2324:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1825,
												"src": "2324:7:2"
											}
										],
										"src": "2307:25:2"
									},
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2274:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2267:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 316,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2267:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2266:20:2"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 1349,
									"src": "2240:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2756:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 353,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2770:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2787:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2779:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 354,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2779:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2779:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2770:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 367,
												"nodeType": "IfStatement",
												"src": "2766:87:2",
												"trueBody": {
													"id": 366,
													"nodeType": "Block",
													"src": "2791:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2839:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2831:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 360,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2831:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2831:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 359,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "2812:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2812:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 365,
															"nodeType": "RevertStatement",
															"src": "2805:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 368,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "2869:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 370,
													"indexExpression": {
														"id": 369,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2879:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2869:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 352,
												"id": 371,
												"nodeType": "Return",
												"src": "2862:23:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2546:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2693:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2711:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2703:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:15:2"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2747:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:9:2"
									},
									"scope": 1349,
									"src": "2684:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2976:505:2",
										"statements": [
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "arr",
														"nameLocation": "2999:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 457,
														"src": "2982:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 383,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2982:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 384,
															"nodeType": "ArrayTypeName",
															"src": "2982:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"id": 389,
															"name": "_totalsupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "3019:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3005:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 386,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3009:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 387,
															"nodeType": "ArrayTypeName",
															"src": "3009:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3005:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2982:50:2"
											},
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 457,
														"src": "3087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 392,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3087:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"hexValue": "30",
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3103:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3087:17:2"
											},
											{
												"body": {
													"id": 422,
													"nodeType": "Block",
													"src": "3153:101:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 406,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "3167:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 408,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3184:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 407,
																		"name": "ownerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "3176:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3176:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3167:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 421,
															"nodeType": "IfStatement",
															"src": "3163:85:2",
															"trueBody": {
																"id": 420,
																"nodeType": "Block",
																"src": "3188:60:2",
																"statements": [
																	{
																		"expression": {
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 411,
																					"name": "arr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 385,
																					"src": "3202:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 413,
																				"indexExpression": {
																					"id": 412,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 393,
																					"src": "3206:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3202:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 414,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 397,
																				"src": "3215:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3202:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 416,
																		"nodeType": "ExpressionStatement",
																		"src": "3202:14:2"
																	},
																	{
																		"expression": {
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3230:7:2",
																			"subExpression": {
																				"id": 417,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "3230:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 419,
																		"nodeType": "ExpressionStatement",
																		"src": "3230:7:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 400,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3130:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 401,
														"name": "_totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "3134:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3130:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"initializationExpression": {
													"assignments": [
														397
													],
													"declarations": [
														{
															"constant": false,
															"id": 397,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3123:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 423,
															"src": "3115:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 396,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3115:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 399,
													"initialValue": {
														"hexValue": "30",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3127:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3115:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3148:3:2",
														"subExpression": {
															"id": 403,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "3148:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 405,
													"nodeType": "ExpressionStatement",
													"src": "3148:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3110:144:2"
											},
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3353:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 457,
														"src": "3336:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 426,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3336:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"nodeType": "ArrayTypeName",
															"src": "3336:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "3376:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3362:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 429,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3366:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 430,
															"nodeType": "ArrayTypeName",
															"src": "3366:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3362:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3336:46:2"
											},
											{
												"body": {
													"id": 453,
													"nodeType": "Block",
													"src": "3424:35:2",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 445,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "3434:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 447,
																	"indexExpression": {
																		"id": 446,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "3441:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3434:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 448,
																		"name": "arr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "3446:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 450,
																	"indexExpression": {
																		"id": 449,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "3450:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3446:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3434:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "3434:18:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "3408:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 440,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "3412:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3408:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"initializationExpression": {
													"assignments": [
														436
													],
													"declarations": [
														{
															"constant": false,
															"id": 436,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3401:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 454,
															"src": "3393:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 435,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3393:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 438,
													"initialValue": {
														"hexValue": "30",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3405:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3393:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3419:3:2",
														"subExpression": {
															"id": 442,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "3419:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 444,
													"nodeType": "ExpressionStatement",
													"src": "3419:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3388:71:2"
											},
											{
												"expression": {
													"id": 455,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "3472:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 380,
												"id": 456,
												"nodeType": "Return",
												"src": "3465:13:2"
											}
										]
									},
									"functionSelector": "828e7a01",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "msgsenderOwntoken",
									"nameLocation": "2904:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2930:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2922:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:15:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2958:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 377,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 378,
													"nodeType": "ArrayTypeName",
													"src": "2958:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2957:18:2"
									},
									"scope": 1349,
									"src": "2895:586:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3785:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 467,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3816:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 466,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "3802:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 465,
												"id": 469,
												"nodeType": "Return",
												"src": "3795:29:2"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "3487:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3722:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3738:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3730:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3729:17:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3776:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:9:2"
									},
									"scope": 1349,
									"src": "3713:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1497
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "3998:29:2",
										"statements": [
											{
												"expression": {
													"id": 477,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 271,
													"src": "4015:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 476,
												"id": 478,
												"nodeType": "Return",
												"src": "4008:12:2"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3837:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3947:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3951:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3983:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3983:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:15:2"
									},
									"scope": 1349,
									"src": "3938:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1503
									],
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "4153:31:2",
										"statements": [
											{
												"expression": {
													"id": 486,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 273,
													"src": "4170:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "4163:14:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4033:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4100:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4106:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4138:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4138:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4137:15:2"
									},
									"scope": 1349,
									"src": "4091:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1511
									],
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "4499:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4523:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "4509:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4509:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "4509:22:2"
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "4556:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "4542:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 501,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4542:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "4566:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4566:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4542:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 508,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "4599:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4593:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 506,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4593:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4593:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4608:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4593:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4617:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4593:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4666:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4593:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 516,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "4635:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 517,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "4644:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4652:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1602,
																	"src": "4644:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4644:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4621:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 513,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "4621:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4628:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "4621:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4621:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 496,
												"id": 523,
												"nodeType": "Return",
												"src": "4586:82:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "4190:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "4429:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4437:17:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4484:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4484:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4483:15:2"
									},
									"scope": 1349,
									"src": "4420:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "5220:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5237:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 530,
												"id": 532,
												"nodeType": "Return",
												"src": "5230:9:2"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "4681:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "5163:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5171:2:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "5205:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5205:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5204:15:2"
									},
									"scope": 1349,
									"src": "5154:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1439
									],
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5364:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "5383:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "5387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 545,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "5396:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5396:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 542,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1152,
															1218
														],
														"referencedDeclaration": 1152,
														"src": "5374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5374:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "5374:35:2"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "5252:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5312:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5319:29:2"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5364:0:2"
									},
									"scope": 1349,
									"src": "5303:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "5553:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 558,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "5563:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5563:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "5563:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5616:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5603:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5603:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 557,
												"id": 565,
												"nodeType": "Return",
												"src": "5596:28:2"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "5422:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5486:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5506:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "5498:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5497:17:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "5544:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5543:9:2"
									},
									"scope": 1349,
									"src": "5477:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1447
									],
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "5773:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 576,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "5802:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5802:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5816:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 579,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "5826:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 575,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "5783:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5783:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "5783:52:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "5637:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5707:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5733:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5725:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5748:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5743:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5743:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:33:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5773:0:2"
									},
									"scope": 1349,
									"src": "5698:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "6002:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 593,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "6019:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 595,
														"indexExpression": {
															"id": 594,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "6038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6019:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 597,
													"indexExpression": {
														"id": 596,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "6045:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6019:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 592,
												"id": 598,
												"nodeType": "Return",
												"src": "6012:42:2"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "5848:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5917:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5942:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5934:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5934:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5957:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5949:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5933:33:2"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5996:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 590,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5996:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:6:2"
									},
									"scope": 1349,
									"src": "5908:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "6203:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "6217:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6231:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6223:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 611,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6223:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6223:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6217:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "6213:87:2",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "6235:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6286:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6278:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 617,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6278:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6278:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 616,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "6256:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6256:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "6249:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "6526:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "6518:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6518:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 633,
												"initialValue": {
													"arguments": [
														{
															"id": 628,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6550:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "6554:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 630,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "6563:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6563:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 627,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "6542:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6542:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6518:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "6590:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 635,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "6607:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6590:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 644,
												"nodeType": "IfStatement",
												"src": "6586:109:2",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6613:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 603,
																		"src": "6655:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "6661:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 640,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6670:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 637,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "6634:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6634:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "RevertStatement",
															"src": "6627:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "6067:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6132:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6153:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6145:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6145:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6167:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6159:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6159:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6179:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6171:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6144:43:2"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6203:0:2"
									},
									"scope": 1349,
									"src": "6123:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1421
									],
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "6843:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6870:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "6876:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "6880:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6889:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 656,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															690
														],
														"referencedDeclaration": 690,
														"src": "6853:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6853:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "6853:39:2"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "6707:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6776:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6801:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "6793:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6815:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "6807:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6807:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6827:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "6819:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6819:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6792:43:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6843:0:2"
									},
									"scope": 1349,
									"src": "6767:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1411
									],
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "7068:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 677,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "7091:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "7097:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "7101:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "7078:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7078:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "7078:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "7142:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "7148:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "7152:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 686,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "7161:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 682,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "7119:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "7119:47:2"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "6905:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6974:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6999:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6991:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7013:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "7005:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7005:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7025:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "7017:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7017:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7047:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "7034:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7034:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6990:62:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7068:0:2"
									},
									"scope": 1349,
									"src": "6965:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "7762:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "7779:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "7787:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7779:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "7772:23:2"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "7179:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "7696:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7713:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "7705:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7704:17:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "7753:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7752:9:2"
									},
									"scope": 1349,
									"src": "7687:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "7997:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 711,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "8014:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 713,
													"indexExpression": {
														"id": 712,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "8030:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8014:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 710,
												"id": 714,
												"nodeType": "Return",
												"src": "8007:31:2"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "7808:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "7927:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7948:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "7940:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7940:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7939:17:2"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "7988:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7987:9:2"
									},
									"scope": 1349,
									"src": "7918:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "8465:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 728,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "8494:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8513:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8505:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8505:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8505:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8494:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 734,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "8532:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 735,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 721,
																			"src": "8541:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8532:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 738,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "8569:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 739,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "8576:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 737,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 600,
																			"src": "8552:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8552:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8532:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 743,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 723,
																				"src": "8601:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 742,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "8588:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8588:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 745,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "8613:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "8588:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8532:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 748,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8531:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8494:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 727,
												"id": 750,
												"nodeType": "Return",
												"src": "8475:146:2"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "8051:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "8365:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8387:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "8379:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8379:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8402:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "8394:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8419:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "8411:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8378:49:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "8459:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8459:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8458:6:2"
									},
									"scope": 1349,
									"src": "8356:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "9159:271:2",
										"statements": [
											{
												"condition": {
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9173:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 763,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "9188:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 764,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "9195:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 765,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "9204:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 762,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9174:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9174:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"nodeType": "IfStatement",
												"src": "9169:255:2",
												"trueBody": {
													"id": 786,
													"nodeType": "Block",
													"src": "9214:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 768,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "9232:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9249:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9241:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 769,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9241:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9241:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9232:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 784,
																"nodeType": "Block",
																"src": "9330:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 780,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "9382:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 781,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "9391:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 779,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 180,
																				"src": "9355:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9355:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 783,
																		"nodeType": "RevertStatement",
																		"src": "9348:51:2"
																	}
																]
															},
															"id": 785,
															"nodeType": "IfStatement",
															"src": "9228:186:2",
															"trueBody": {
																"id": 778,
																"nodeType": "Block",
																"src": "9253:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 775,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "9301:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 774,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 154,
																				"src": "9278:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9278:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 777,
																		"nodeType": "RevertStatement",
																		"src": "9271:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "8634:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "9071:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9096:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "9088:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9111:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "9103:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9128:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "9120:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9087:49:2"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9159:0:2"
									},
									"scope": 1349,
									"src": "9062:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "10147:78:2",
										"statements": [
											{
												"id": 803,
												"nodeType": "UncheckedBlock",
												"src": "10157:62:2",
												"statements": [
													{
														"expression": {
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 797,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "10181:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 799,
																"indexExpression": {
																	"id": 798,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "10191:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10181:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 800,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "10203:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "10181:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 802,
														"nodeType": "ExpressionStatement",
														"src": "10181:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "9436:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "10081:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10106:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "10098:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10098:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10123:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "10115:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 793,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "10115:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10097:32:2"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10147:0:2"
									},
									"scope": 1349,
									"src": "10072:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "10917:700:2",
										"statements": [
											{
												"assignments": [
													818
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "10935:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "10927:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 817,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10927:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"initialValue": {
													"arguments": [
														{
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "10951:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 819,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "10942:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10942:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10927:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "11019:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11035:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11027:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 824,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11027:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11027:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11019:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "11015:86:2",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "11039:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 830,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "11070:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 831,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "11076:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 832,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "11082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 829,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "11053:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11053:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 834,
															"nodeType": "ExpressionStatement",
															"src": "11053:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 837,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "11145:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11161:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11153:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 838,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11153:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11153:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11145:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 864,
												"nodeType": "IfStatement",
												"src": "11141:256:2",
												"trueBody": {
													"id": 863,
													"nodeType": "Block",
													"src": "11165:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11270:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 844,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11270:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11270:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 848,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "11282:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11299:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11291:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 849,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11291:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11291:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11303:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 843,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1152,
																		1218
																	],
																	"referencedDeclaration": 1218,
																	"src": "11261:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11261:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 855,
															"nodeType": "ExpressionStatement",
															"src": "11261:48:2"
														},
														{
															"id": 862,
															"nodeType": "UncheckedBlock",
															"src": "11324:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 856,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 283,
																				"src": "11352:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 858,
																			"indexExpression": {
																				"id": 857,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "11362:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11352:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11352:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 861,
																	"nodeType": "ExpressionStatement",
																	"src": "11352:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 865,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "11411:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11425:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11417:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 866,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11417:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11417:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11411:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 879,
												"nodeType": "IfStatement",
												"src": "11407:107:2",
												"trueBody": {
													"id": 878,
													"nodeType": "Block",
													"src": "11429:85:2",
													"statements": [
														{
															"id": 877,
															"nodeType": "UncheckedBlock",
															"src": "11443:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 871,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 283,
																				"src": "11471:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 873,
																			"indexExpression": {
																				"id": 872,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "11481:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11471:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11488:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11471:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 876,
																	"nodeType": "ExpressionStatement",
																	"src": "11471:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 880,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "11524:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 882,
														"indexExpression": {
															"id": 881,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "11532:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11524:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 883,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "11543:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11524:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "11524:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 887,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "11570:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "11576:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "11580:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 886,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "11561:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11561:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "11556:32:2"
											},
											{
												"expression": {
													"id": 892,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "11606:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 816,
												"id": 893,
												"nodeType": "Return",
												"src": "11599:11:2"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "10235:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "10831:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10847:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "10839:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10839:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10859:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "10851:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10851:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "10876:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "10868:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10868:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10838:43:2"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "10908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10908:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10907:9:2"
									},
									"scope": 1349,
									"src": "10822:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "11992:298:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 903,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "12006:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12020:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 904,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12012:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12012:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12006:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 917,
												"nodeType": "IfStatement",
												"src": "12002:87:2",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "12024:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12075:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12067:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 910,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12067:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12067:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 909,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "12045:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12045:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 915,
															"nodeType": "RevertStatement",
															"src": "12038:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12106:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 947,
														"src": "12098:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 918,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12098:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 928,
												"initialValue": {
													"arguments": [
														{
															"id": 921,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "12130:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "12134:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12151:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12143:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 923,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12143:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12143:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 920,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "12122:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12122:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12098:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 929,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "12168:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12193:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12185:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 930,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12185:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12185:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12168:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 943,
												"nodeType": "IfStatement",
												"src": "12164:96:2",
												"trueBody": {
													"id": 942,
													"nodeType": "Block",
													"src": "12197:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12246:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12238:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 936,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12238:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12238:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 935,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "12218:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12218:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 941,
															"nodeType": "RevertStatement",
															"src": "12211:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "12269:14:2",
													"subExpression": {
														"id": 944,
														"name": "_totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "12269:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "12269:14:2"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "11623:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "11948:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11962:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "11954:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11974:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "11966:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11966:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11953:29:2"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11992:0:2"
									},
									"scope": 1349,
									"src": "11939:351:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "12351:36:2",
										"statements": [
											{
												"expression": {
													"id": 953,
													"name": "_totalsupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "12368:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 952,
												"id": 954,
												"nodeType": "Return",
												"src": "12361:19:2"
											}
										]
									},
									"functionSelector": "abec7101",
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showtotalsupply",
									"nameLocation": "12304:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12319:2:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "12342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12341:10:2"
									},
									"scope": 1349,
									"src": "12295:92:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "12794:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "12814:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "12818:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12827:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 964,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															971,
															997
														],
														"referencedDeclaration": 997,
														"src": "12804:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12804:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "12804:26:2"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "12392:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "12746:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "12756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12776:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "12768:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12755:29:2"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12794:0:2"
									},
									"scope": 1349,
									"src": "12737:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "13142:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "13158:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "13162:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 981,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "13152:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13152:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "13152:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13211:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13203:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13203:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13203:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 991,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "13215:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 992,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "13219:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 993,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "13228:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 986,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "13180:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13180:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "13180:53:2"
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "12843:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "13067:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13085:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "13077:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13077:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13097:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "13089:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13089:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13119:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "13106:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13106:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13076:48:2"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13142:0:2"
									},
									"scope": 1349,
									"src": "13058:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "13607:186:2",
										"statements": [
											{
												"assignments": [
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "13625:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "13617:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1003,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13617:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13657:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13649:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1006,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13649:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13649:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13661:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13678:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13670:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13670:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13670:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1005,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "13641:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13641:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13617:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1017,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "13695:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13720:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13712:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1018,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13712:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13712:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13695:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "13691:96:2",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "13724:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1024,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "13768:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1023,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "13745:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13745:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1026,
															"nodeType": "RevertStatement",
															"src": "13738:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "13246:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13575:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "13581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13581:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13580:17:2"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13607:0:2"
									},
									"scope": 1349,
									"src": "13566:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "14188:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1040,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "14202:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14216:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1041,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14208:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14208:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14202:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1054,
												"nodeType": "IfStatement",
												"src": "14198:87:2",
												"trueBody": {
													"id": 1053,
													"nodeType": "Block",
													"src": "14220:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1049,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14271:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14263:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1047,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14263:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14263:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1046,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "14241:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14241:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1052,
															"nodeType": "RevertStatement",
															"src": "14234:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "14302:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "14294:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1055,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14294:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"arguments": [
														{
															"id": 1058,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "14326:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "14330:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14347:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14339:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1060,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14339:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14339:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1057,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "14318:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14318:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14294:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1066,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "14364:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14389:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14381:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1067,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14381:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14381:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14364:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1077,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "14466:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "14483:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14466:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1087,
													"nodeType": "IfStatement",
													"src": "14462:109:2",
													"trueBody": {
														"id": 1086,
														"nodeType": "Block",
														"src": "14489:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1081,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1033,
																			"src": "14531:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1082,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1037,
																			"src": "14537:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1083,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "14546:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1080,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "14510:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14510:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1085,
																"nodeType": "RevertStatement",
																"src": "14503:57:2"
															}
														]
													}
												},
												"id": 1088,
												"nodeType": "IfStatement",
												"src": "14360:211:2",
												"trueBody": {
													"id": 1076,
													"nodeType": "Block",
													"src": "14393:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1073,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "14437:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1072,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "14414:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14414:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1075,
															"nodeType": "RevertStatement",
															"src": "14407:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "13799:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "14126:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14144:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "14136:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14136:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14158:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "14150:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14170:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "14162:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14135:43:2"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14188:0:2"
									},
									"scope": 1349,
									"src": "14117:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "15585:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1101,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "15609:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "15615:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "15619:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15628:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1100,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1108,
															1134
														],
														"referencedDeclaration": 1134,
														"src": "15595:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15595:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "15595:36:2"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "14583:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "15519:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15541:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "15533:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15533:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15555:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "15547:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15547:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15567:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "15559:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15559:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15532:43:2"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15585:0:2"
									},
									"scope": 1349,
									"src": "15510:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "15977:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "15997:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "16003:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "16007:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1120,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "15987:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15987:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "15987:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1127,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "16048:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "16054:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "16058:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1130,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "16067:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1126,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "16025:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16025:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "16025:47:2"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "15644:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "15884:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15906:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "15898:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15920:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "15912:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15912:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15932:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "15924:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15924:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15954:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "15941:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15941:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15897:62:2"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15977:0:2"
									},
									"scope": 1349,
									"src": "15875:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "16592:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "16611:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1146,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "16615:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1147,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "16624:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16630:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1144,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1152,
															1218
														],
														"referencedDeclaration": 1218,
														"src": "16602:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16602:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "16602:33:2"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "16085:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16531:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16548:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "16540:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16540:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16560:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "16552:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "16577:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "16569:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16569:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16539:43:2"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16592:0:2"
									},
									"scope": 1349,
									"src": "16522:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "16918:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1164,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "16984:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1165,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "16997:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17013:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17005:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17005:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17005:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "16997:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16984:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1210,
												"nodeType": "IfStatement",
												"src": "16980:460:2",
												"trueBody": {
													"id": 1209,
													"nodeType": "Block",
													"src": "17017:423:2",
													"statements": [
														{
															"assignments": [
																1173
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1173,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "17039:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1209,
																	"src": "17031:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1172,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17031:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1177,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1175,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "17061:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1174,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "17047:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17047:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17031:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1178,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "17197:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17213:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1180,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "17205:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1179,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "17205:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17205:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "17197:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1184,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1173,
																			"src": "17219:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1185,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "17228:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "17219:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "17197:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "17236:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1189,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "17254:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1190,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "17261:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1188,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 600,
																			"src": "17237:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17237:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17197:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1199,
															"nodeType": "IfStatement",
															"src": "17193:142:2",
															"trueBody": {
																"id": 1198,
																"nodeType": "Block",
																"src": "17268:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1195,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1159,
																					"src": "17315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1194,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 185,
																				"src": "17293:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17293:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1197,
																		"nodeType": "RevertStatement",
																		"src": "17286:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1200,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "17353:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1208,
															"nodeType": "IfStatement",
															"src": "17349:81:2",
															"trueBody": {
																"id": 1207,
																"nodeType": "Block",
																"src": "17364:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1202,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1173,
																					"src": "17396:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1203,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "17403:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1204,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "17407:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1201,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1374,
																				"src": "17387:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17387:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1206,
																		"nodeType": "EmitStatement",
																		"src": "17382:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1211,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "17450:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1213,
														"indexExpression": {
															"id": 1212,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "17466:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17450:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1214,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "17477:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17450:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "17450:29:2"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "16648:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16833:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16850:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "16842:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16862:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "16854:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16854:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "16879:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "16871:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16871:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "16890:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "16885:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16885:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16841:59:2"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16918:0:2"
									},
									"scope": 1349,
									"src": "16824:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "17788:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1228,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "17802:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17814:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1229,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17814:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17814:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17802:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "IfStatement",
												"src": "17798:91:2",
												"trueBody": {
													"id": 1238,
													"nodeType": "Block",
													"src": "17826:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1235,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "17869:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1234,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "17847:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17847:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1237,
															"nodeType": "RevertStatement",
															"src": "17840:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1240,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "17898:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1243,
															"indexExpression": {
																"id": 1241,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "17917:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17898:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1244,
														"indexExpression": {
															"id": 1242,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "17924:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17898:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1245,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "17936:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17898:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "17898:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1249,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "17974:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "17981:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "17991:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1248,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "17959:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17959:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "EmitStatement",
												"src": "17954:46:2"
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "17492:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "17704:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17731:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "17723:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17746:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "17738:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17761:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "17756:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17756:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17722:48:2"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17788:0:2"
									},
									"scope": 1349,
									"src": "17695:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "18314:169:2",
										"statements": [
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "18332:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "18324:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1263,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18324:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1268,
												"initialValue": {
													"arguments": [
														{
															"id": 1266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "18349:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1265,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "18340:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18340:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18324:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1269,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "18371:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18388:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18380:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1270,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18380:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18380:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18371:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1280,
												"nodeType": "IfStatement",
												"src": "18367:88:2",
												"trueBody": {
													"id": 1279,
													"nodeType": "Block",
													"src": "18392:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1276,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "18436:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1275,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "18413:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18413:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1278,
															"nodeType": "RevertStatement",
															"src": "18406:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1281,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1264,
													"src": "18471:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1262,
												"id": 1282,
												"nodeType": "Return",
												"src": "18464:12:2"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "18013:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "18251:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18273:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "18265:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18264:17:2"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "18305:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18305:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18304:9:2"
									},
									"scope": 1349,
									"src": "18242:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "19124:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1296,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "19138:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19141:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "19138:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19146:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19138:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19155:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19138:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1346,
												"nodeType": "IfStatement",
												"src": "19134:664:2",
												"trueBody": {
													"id": 1345,
													"nodeType": "Block",
													"src": "19158:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1325,
																		"nodeType": "Block",
																		"src": "19272:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1318,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1314,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1312,
																						"src": "19294:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1315,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1484,
																								"src": "19304:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1484_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1316,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "19320:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1483,
																							"src": "19304:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1317,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "19337:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "19304:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "19294:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1324,
																				"nodeType": "IfStatement",
																				"src": "19290:130:2",
																				"trueBody": {
																					"id": 1323,
																					"nodeType": "Block",
																					"src": "19347:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1320,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1289,
																										"src": "19398:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1319,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 173,
																									"src": "19376:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1321,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19376:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1322,
																							"nodeType": "RevertStatement",
																							"src": "19369:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1326,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1313,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1312,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "19264:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1326,
																				"src": "19257:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1311,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "19257:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "19256:15:2"
																	},
																	"src": "19248:186:2"
																},
																{
																	"block": {
																		"id": 1342,
																		"nodeType": "Block",
																		"src": "19463:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1333,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1330,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1328,
																							"src": "19485:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1331,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "19492:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "19485:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1332,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19502:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "19485:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1340,
																					"nodeType": "Block",
																					"src": "19584:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "19670:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "19707:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "19711:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "19703:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "19703:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "19726:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "19720:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "19720:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "19696:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "19696:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "19696:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1328,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19711:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1328,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19726:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1339,
																							"nodeType": "InlineAssembly",
																							"src": "19661:95:2"
																						}
																					]
																				},
																				"id": 1341,
																				"nodeType": "IfStatement",
																				"src": "19481:293:2",
																				"trueBody": {
																					"id": 1338,
																					"nodeType": "Block",
																					"src": "19505:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1335,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1289,
																										"src": "19556:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1334,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 173,
																									"src": "19534:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1336,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19534:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1337,
																							"nodeType": "RevertStatement",
																							"src": "19527:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1343,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1329,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1328,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "19455:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1343,
																				"src": "19442:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1327,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "19442:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "19441:21:2"
																	},
																	"src": "19435:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1305,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1524,
																			"src": "19213:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19213:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1307,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "19227:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1308,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "19233:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1309,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "19242:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1302,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1289,
																				"src": "19192:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1301,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "19176:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1484_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19176:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1484",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19196:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1483,
																	"src": "19176:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19176:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1344,
															"nodeType": "TryStatement",
															"src": "19172:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "18489:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "19031:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19062:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "19054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19076:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "19068:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19068:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19088:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "19080:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19080:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19110:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "19097:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19097:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19053:62:2"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19124:0:2"
									},
									"scope": 1349,
									"src": "19022:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1350,
							"src": "776:19030:2",
							"usedErrors": [
								149,
								154,
								163,
								168,
								173,
								180,
								185,
								190
							],
							"usedEvents": [
								1365,
								1374,
								1383
							]
						}
					],
					"src": "107:19700:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1825
						],
						"IERC721": [
							1466
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1826,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1352,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1825,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1355,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1825,
										"src": "287:7:3"
									},
									"id": 1356,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1354,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466,
								1825
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1365,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1374,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1383,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1466,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1466,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1466,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1466,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1466,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1466,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1466,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1466,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1466,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1365,
								1374,
								1383
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1484
						]
					},
					"id": 1485,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1484,
							"linearizedBaseContracts": [
								1484
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1484,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1485,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1466
						],
						"IERC721Metadata": [
							1512
						]
					},
					"id": 1513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1486,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1488,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1513,
							"sourceUnit": 1467,
							"src": "153:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1487,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "161:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1490,
										"name": "IERC721",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "357:7:5"
									},
									"id": 1491,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1489,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1512,
							"linearizedBaseContracts": [
								1512,
								1466,
								1825
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:5"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"scope": 1512,
									"src": "434:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:5"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "600:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:5"
									},
									"scope": 1512,
									"src": "559:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:5"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:5"
									},
									"scope": 1512,
									"src": "716:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1513,
							"src": "328:463:5",
							"usedErrors": [],
							"usedEvents": [
								1365,
								1374,
								1383
							]
						}
					],
					"src": "127:665:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1534
						]
					},
					"id": 1535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1515,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1534,
							"linearizedBaseContracts": [
								1534
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1520,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1519,
												"id": 1522,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1534,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1529,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1528,
												"id": 1531,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1534,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1535,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2879
						],
						"SignedMath": [
							2984
						],
						"Strings": [
							1789
						]
					},
					"id": 1790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1536,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1538,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1790,
							"sourceUnit": 2880,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1537,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2879,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1540,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1790,
							"sourceUnit": 2985,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1539,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2984,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1541,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1789,
							"linearizedBaseContracts": [
								1789
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1544,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1789,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1542,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1543,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1547,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1789,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1545,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1546,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1554,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "708:627:7",
										"statements": [
											{
												"id": 1600,
												"nodeType": "UncheckedBlock",
												"src": "718:611:7",
												"statements": [
													{
														"assignments": [
															1563
														],
														"declarations": [
															{
																"constant": false,
																"id": 1563,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1600,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1562,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1570,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1566,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1557,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1564,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2879,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2879_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2699,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															1572
														],
														"declarations": [
															{
																"constant": false,
																"id": 1572,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1600,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1571,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1577,
														"initialValue": {
															"arguments": [
																{
																	"id": 1575,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1573,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															1579
														],
														"declarations": [
															{
																"constant": false,
																"id": 1579,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1600,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1578,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1580,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "930:67:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "948:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "971:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1563,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1579,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:7",
																"valueSize": 1
															}
														],
														"id": 1581,
														"nodeType": "InlineAssembly",
														"src": "921:76:7"
													},
													{
														"body": {
															"id": 1596,
															"nodeType": "Block",
															"src": "1023:269:7",
															"statements": [
																{
																	"expression": {
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:7",
																		"subExpression": {
																			"id": 1583,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1579,
																			"src": "1041:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1585,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:7"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1124:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1544,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1579,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1557,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1586,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:7"
																},
																{
																	"expression": {
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1587,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "1227:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1590,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1591,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "1260:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1595,
																	"nodeType": "IfStatement",
																	"src": "1256:21:7",
																	"trueBody": {
																		"id": 1594,
																		"nodeType": "Break",
																		"src": "1272:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1597,
														"nodeType": "WhileStatement",
														"src": "1010:282:7"
													},
													{
														"expression": {
															"id": 1598,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "1312:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1561,
														"id": 1599,
														"nodeType": "Return",
														"src": "1305:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 1789,
									"src": "637:698:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "1511:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1613,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "1542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1622,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1605,
																			"src": "1588:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1620,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2984,
																			"src": "1573:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2984_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2983,
																		"src": "1573:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1619,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "1564:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1610,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1626,
												"nodeType": "Return",
												"src": "1521:75:7"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "1459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1604,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:7"
									},
									"scope": 1789,
									"src": "1435:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "1782:100:7",
										"statements": [
											{
												"id": 1646,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1637,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "1835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1640,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1631,
																				"src": "1854:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1638,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2879,
																				"src": "1842:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2879_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2821,
																			"src": "1842:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1636,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1648,
																	1731,
																	1751
																],
																"referencedDeclaration": 1731,
																"src": "1823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1635,
														"id": 1645,
														"nodeType": "Return",
														"src": "1816:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:7"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1767:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:7"
									},
									"scope": 1789,
									"src": "1708:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "2095:435:7",
										"statements": [
											{
												"assignments": [
													1659
												],
												"declarations": [
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1730,
														"src": "2105:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1661,
												"initialValue": {
													"id": 1660,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1651,
													"src": "2126:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:7"
											},
											{
												"assignments": [
													1663
												],
												"declarations": [
													{
														"constant": false,
														"id": 1663,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1730,
														"src": "2141:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1662,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1672,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1667,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "2177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1664,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:7"
											},
											{
												"expression": {
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1673,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "2198:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1675,
														"indexExpression": {
															"hexValue": "30",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:7"
											},
											{
												"expression": {
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1679,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "2223:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1681,
														"indexExpression": {
															"hexValue": "31",
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:7"
											},
											{
												"body": {
													"id": 1713,
													"nodeType": "Block",
													"src": "2293:95:7",
													"statements": [
														{
															"expression": {
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1699,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "2307:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1701,
																	"indexExpression": {
																		"id": 1700,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "2314:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1702,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1544,
																		"src": "2319:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1706,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1703,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1659,
																			"src": "2330:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1708,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:7"
														},
														{
															"expression": {
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1709,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "2361:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1712,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1693,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "2281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1714,
												"initializationExpression": {
													"assignments": [
														1686
													],
													"declarations": [
														{
															"constant": false,
															"id": 1686,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1714,
															"src": "2253:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1685,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1692,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1688,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "2269:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:7",
														"subExpression": {
															"id": 1696,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "2290:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1698,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1715,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "2401:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1724,
												"nodeType": "IfStatement",
												"src": "2397:96:7",
												"trueBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "2418:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1719,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1651,
																		"src": "2468:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1720,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "2475:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1718,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "2439:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1722,
															"nodeType": "RevertStatement",
															"src": "2432:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "2516:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1725,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1729,
												"nodeType": "Return",
												"src": "2502:21:7"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:7"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2080:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1655,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:7"
									},
									"scope": 1789,
									"src": "2005:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "2762:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1744,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "2807:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1742,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1740,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1747,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "2815:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1739,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1648,
															1731,
															1751
														],
														"referencedDeclaration": 1731,
														"src": "2779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1738,
												"id": 1749,
												"nodeType": "Return",
												"src": "2772:58:7"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:7"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2747:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1736,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:7"
									},
									"scope": 1789,
									"src": "2689:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "2992:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1763,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "3015:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1761,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1768,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1756,
																		"src": "3034:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1766,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1775,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "3063:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1773,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1772,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1781,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "3086:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1779,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1778,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1760,
												"id": 1786,
												"nodeType": "Return",
												"src": "3002:87:7"
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "2929:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1753,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1755,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:7"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "2986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:7"
									},
									"scope": 1789,
									"src": "2914:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1790,
							"src": "251:2847:7",
							"usedErrors": [
								1554
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1813
						],
						"IERC165": [
							1825
						]
					},
					"id": 1814,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1793,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1814,
							"sourceUnit": 1826,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1792,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1825,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1795,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1825,
										"src": "687:7:8"
									},
									"id": 1796,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1794,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1813,
							"linearizedBaseContracts": [
								1813,
								1825
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1824
									],
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1806,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1825_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1825_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1805,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1825",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1810,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1798,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1813,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1814,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1825
						]
					},
					"id": 1826,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1815,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1816,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1825,
							"linearizedBaseContracts": [
								1825
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1818,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1825,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1826,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2879
						]
					},
					"id": 2880,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1827,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1828,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2879,
							"linearizedBaseContracts": [
								2879
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1831,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1836,
									"members": [
										{
											"id": 1832,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1833,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1834,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1835,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1866,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1849
														],
														"declarations": [
															{
																"constant": false,
																"id": 1849,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1866,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1848,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1853,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1850,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1851,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1854,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1855,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1861,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1859,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1847,
															"id": 1860,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1863,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1864,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1847,
														"id": 1865,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2879,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1894,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1881,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1871,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1887,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1879,
															"id": 1886,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1889,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1890,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1892,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1879,
														"id": 1893,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2879,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1936,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1908,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1915,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1913,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1907,
															"id": 1914,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1917
														],
														"declarations": [
															{
																"constant": false,
																"id": 1917,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1936,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1916,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1921,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1918,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1919,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1922,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1923,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1925,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1931,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1929,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1907,
															"id": 1930,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1933,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1934,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1907,
														"id": 1935,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2879,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1964,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1950,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1957,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1949,
															"id": 1956,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1959,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1960,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1962,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1949,
														"id": 1963,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2879,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1992,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1978,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1985,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1983,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1977,
															"id": 1984,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1987,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1969,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1988,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1971,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1990,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1977,
														"id": 1991,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1973,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2879,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2004,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2005,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2008,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 2007,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2003,
												"id": 2010,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2879,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2022,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2023,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2026,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2017,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 2025,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2021,
												"id": 2028,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2879,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2040,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2041,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2043,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2044,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2033,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2045,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2035,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2047,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2039,
												"id": 2051,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2879,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2086,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2063,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2071,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 2070,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2066,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2067,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2062,
															"id": 2069,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2072,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2076,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2079,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2080,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2062,
												"id": 2085,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2879,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2211,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															2100
														],
														"declarations": [
															{
																"constant": false,
																"id": 2100,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2211,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2099,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2104,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2101,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2102,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2092,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															2106
														],
														"declarations": [
															{
																"constant": false,
																"id": 2106,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2211,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2107,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2090,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2092,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 2108,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2117,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 2116,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2112,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2100,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2098,
																	"id": 2115,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2118,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2119,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2125,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2124,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2121,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2123,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2127
														],
														"declarations": [
															{
																"constant": false,
																"id": 2127,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2211,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2126,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2128,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2094,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2127,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2127,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2127,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2090,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2092,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2129,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2131
														],
														"declarations": [
															{
																"constant": false,
																"id": 2131,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2211,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2130,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2138,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2132,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2134,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2136,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2094,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2094,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2131,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2131,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2131,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2131,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2131,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2139,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2140,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2141,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2142,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2145,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2147
														],
														"declarations": [
															{
																"constant": false,
																"id": 2147,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2211,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2146,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2149,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2151,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2155,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2157,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2158,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2163,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2165,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2166,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2170,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2171,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2173,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2174,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2178,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2179,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2181,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2182,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2186,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2187,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2189,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2190,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2194,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2195,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2197,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2198,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2202,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2203,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2204,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2100,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2205,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2147,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2208,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2209,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2098,
														"id": 2210,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2088,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2879,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2229
												],
												"declarations": [
													{
														"constant": false,
														"id": 2229,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2255,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2235,
												"initialValue": {
													"arguments": [
														{
															"id": 2231,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2232,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2218,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2233,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2230,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2213,
															2256
														],
														"referencedDeclaration": 2213,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2237,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1836",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1836",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2236,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1836_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2240,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2216,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2241,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2218,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2242,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2220,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2239,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2252,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2251,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2247,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2229,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2250,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2253,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2229,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2227,
												"id": 2254,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2214,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1836",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2222,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2221,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1836,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1836,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1836",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2879,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2270,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2269,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2263,
															"id": 2268,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2272
												],
												"declarations": [
													{
														"constant": false,
														"id": 2272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2367,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2281,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2275,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2259,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2274,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2535,
																			2570
																		],
																		"referencedDeclaration": 2535,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2279,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2366,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2282,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2283,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2272,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2284,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2259,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2285,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2288,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2292,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2293,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2294,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2272,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2295,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2259,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2296,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2303,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2304,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2305,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2272,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2306,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2259,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2307,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2310,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2314,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2315,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2316,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2272,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2317,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2259,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2318,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2321,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2325,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2326,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2327,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2272,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2328,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2259,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2329,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2332,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2336,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2337,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2338,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2272,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2339,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2259,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2340,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2343,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2347,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2348,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2349,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2272,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2350,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2259,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2351,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2358,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2360,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2361,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2259,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2362,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2359,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2263,
														"id": 2365,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2879,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2402,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2401,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2380
														],
														"declarations": [
															{
																"constant": false,
																"id": 2380,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2401,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2379,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2384,
														"initialValue": {
															"arguments": [
																{
																	"id": 2382,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2381,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2368,
																	2403
																],
																"referencedDeclaration": 2368,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2385,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2380,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2387,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2374,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1836",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1836",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2386,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1836_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2389,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2380,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2390,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2380,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2392,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2371,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2398,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2378,
														"id": 2400,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1836",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2373,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2372,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1836,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1836,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1836",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2879,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2534,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2412
												],
												"declarations": [
													{
														"constant": false,
														"id": 2412,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2534,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2414,
												"initialValue": {
													"hexValue": "30",
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2531,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2415,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2429,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2428,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2420,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2406,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2423,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2424,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2427,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2444,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2443,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2435,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2406,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2438,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2439,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2442,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2445,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2459,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2458,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2450,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2406,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2453,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2454,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2457,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2460,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2474,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2473,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2465,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2406,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2468,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2469,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2472,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2475,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2489,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2488,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2480,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2406,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2483,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2484,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2487,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2504,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2503,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2495,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2406,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2498,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2499,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2502,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2505,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2519,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2518,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2510,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2406,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2513,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2514,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2517,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2520,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2530,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2529,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2525,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2528,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2532,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2412,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2410,
												"id": 2533,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2404,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2879,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2569,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2568,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2547
														],
														"declarations": [
															{
																"constant": false,
																"id": 2547,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2568,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2546,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2551,
														"initialValue": {
															"arguments": [
																{
																	"id": 2549,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2538,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2548,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2535,
																	2570
																],
																"referencedDeclaration": 2535,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2552,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2547,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2554,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2541,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1836",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1836",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2553,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1836_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2558,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2556,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2557,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2547,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2559,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2538,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2565,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2545,
														"id": 2567,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2536,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1836",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2539,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1836,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1836,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1836",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2879,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2698,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2579
												],
												"declarations": [
													{
														"constant": false,
														"id": 2579,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2698,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2581,
												"initialValue": {
													"hexValue": "30",
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2695,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2582,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2573,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2598,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2597,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2587,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2573,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2593,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2596,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2599,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2573,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2615,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2614,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2604,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2573,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2610,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2613,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2616,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2573,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2632,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2631,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2621,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2573,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2627,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2630,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2633,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2573,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2649,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2648,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2638,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2573,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2644,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2647,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2650,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2573,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2666,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2665,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2655,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2573,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2660,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2661,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2664,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2667,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2573,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2683,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2682,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2672,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2573,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2677,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2678,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2681,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2684,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2573,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2694,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2693,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2689,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2692,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2696,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2579,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2577,
												"id": 2697,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2571,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2879,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2732,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2711
														],
														"declarations": [
															{
																"constant": false,
																"id": 2711,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2732,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2710,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2715,
														"initialValue": {
															"arguments": [
																{
																	"id": 2713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2702,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2712,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2699,
																	2734
																],
																"referencedDeclaration": 2699,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2716,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2711,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2718,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2705,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1836",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1836",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2717,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1836_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2722,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2721,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2711,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2723,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2702,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2729,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2709,
														"id": 2731,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2700,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1836",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2703,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1836,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1836,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1836",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2879,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2743
												],
												"declarations": [
													{
														"constant": false,
														"id": 2743,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2820,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2745,
												"initialValue": {
													"hexValue": "30",
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2817,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2760,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2759,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2751,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2737,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2754,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2755,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2758,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2761,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2775,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2774,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2766,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2737,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2769,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2770,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2773,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2776,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2790,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2789,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2781,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2737,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2784,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2785,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2788,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2791,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2805,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2804,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2796,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2737,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2799,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2800,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2803,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2806,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2816,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2815,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2811,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2814,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2818,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2743,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2741,
												"id": 2819,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2735,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2879,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2858,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2857,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2833
														],
														"declarations": [
															{
																"constant": false,
																"id": 2833,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2857,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2832,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2837,
														"initialValue": {
															"arguments": [
																{
																	"id": 2835,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2824,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2834,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2821,
																	2859
																],
																"referencedDeclaration": 2821,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2838,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2833,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2840,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2827,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1836",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1836",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2839,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1836_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2847,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2842,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2845,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2843,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2833,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2844,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2846,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2848,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2824,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2854,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2831,
														"id": 2856,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1836",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2826,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2825,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1836,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1836,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1836",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2879,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2877,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2870,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2863,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1836",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1836",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2868,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2867,
												"id": 2876,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2860,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1836",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2862,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2861,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1836,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1836,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1836",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2879,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2880,
							"src": "203:14914:10",
							"usedErrors": [
								1831
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2984
						]
					},
					"id": 2985,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2882,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2984,
							"linearizedBaseContracts": [
								2984
							],
							"name": "SignedMath",
							"nameLocation": "224:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2899,
										"nodeType": "Block",
										"src": "376:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2892,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2885,
															"src": "393:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2893,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2887,
															"src": "397:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2896,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2887,
														"src": "405:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:11",
													"trueExpression": {
														"id": 2895,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2885,
														"src": "401:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2891,
												"id": 2898,
												"nodeType": "Return",
												"src": "386:20:11"
											}
										]
									},
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "325:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2884,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "335:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2886,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:11"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "368:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2889,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:11"
									},
									"scope": 2984,
									"src": "312:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2917,
										"nodeType": "Block",
										"src": "555:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2910,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2903,
															"src": "572:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2911,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2905,
															"src": "576:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2914,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2905,
														"src": "584:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:11",
													"trueExpression": {
														"id": 2913,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2903,
														"src": "580:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2909,
												"id": 2916,
												"nodeType": "Return",
												"src": "565:20:11"
											}
										]
									},
									"documentation": {
										"id": 2901,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "504:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2902,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "514:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2904,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:11"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "547:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2907,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:11"
									},
									"scope": 2984,
									"src": "491:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2961,
										"nodeType": "Block",
										"src": "797:162:11",
										"statements": [
											{
												"assignments": [
													2929
												],
												"declarations": [
													{
														"constant": false,
														"id": 2929,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2961,
														"src": "859:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2928,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2942,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2930,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "871:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2931,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2923,
																	"src": "875:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2933,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2934,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2921,
																				"src": "882:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2935,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2923,
																				"src": "886:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2937,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2940,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2943,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2929,
														"src": "911:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2948,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2929,
																						"src": "931:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2947,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2946,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2944,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2953,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2921,
																				"src": "945:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2954,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2923,
																				"src": "949:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2956,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2958,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2927,
												"id": 2960,
												"nodeType": "Return",
												"src": "904:48:11"
											}
										]
									},
									"documentation": {
										"id": 2919,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "746:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2920,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "756:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2922,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:11"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "789:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2925,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:11"
									},
									"scope": 2984,
									"src": "729:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2982,
										"nodeType": "Block",
										"src": "1103:158:11",
										"statements": [
											{
												"id": 2981,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2972,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2965,
																			"src": "1228:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:11",
																		"subExpression": {
																			"id": 2976,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2965,
																			"src": "1242:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:11",
																	"trueExpression": {
																		"id": 2975,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2965,
																		"src": "1237:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2970,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2969,
														"id": 2980,
														"nodeType": "Return",
														"src": "1213:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2963,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "1061:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2964,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:11"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "1094:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:11"
									},
									"scope": 2984,
									"src": "1048:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2985,
							"src": "216:1047:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:11"
				},
				"id": 11
			}
		}
	}
}