// react 첫날


// react는 페이스북에서 2011년도 쯤에 만들어졌고
// react는 개발자들 사이에서 라이브러리다 프레임워크다 얘기가 많은데
// 공식홈페이지 에서는 라이브러리라고 말하고있다. 

// 공식 홈페이지에서도 라이브러리다 라고 얘기를 하는데 

// 라이브러리와 프레임워크의 차이는: 폴더의 구조가없음 
// 프레임워크 : 폴더구조가 있음

// 패키지를 설치 할수있기때문에
// 리액트 개발을 할때 편하게 초기세팅을 설치받아서 사용할수있다.
// 메타에서 개발한것은 react,react-router 라이브러리
// 메타에서 개발하고 오픈소스에 기여중임

// 리액트를 프레임워크라고 하는 이유?
// 메타에서 라이브러리를 개발하고 npx create-react-app [폴더명]
// react를 개발할때 권장 개발환경을 구성해준다.
// react프로젝를 설정 
// 그래서 블로그나 개발자들 사이에서 프레임워크라고 하는것.

// 리액트는 화면을 꾸밈을 구성할때 자바스크립트를 활요해서 html을 조작해줌 dom
// 효율적인 브라우저 렌더링을 위해 
// 페이지를 효율적으로 업데이트 하기위해서 
// react는 가상 DOm을 사용해서 변경된 부분마 다시 그림. (업데이트)
// 일반적인 html은 변경된 부분만 업데이트 하지않고 전체 페이지를 다시 그려주는데 
// react는 가상 Dom은 메모리에 남아있고 실제 페이지의 DOM은 분리되어있는 상태
// react의 상태가 변하면 가상 DOm이 생성되고 이전 상태의 가상 DOM과 비교해서 
// 업데이트 해야할 부분을 찾고 (틀린그림 찾기) 실제 DOM의 업데이트 를해준다.
// 그래서 효율적인 업데이트가 가능하다.

// 실제와 가상이 존재하고 가상과 실제가 다르다면 실제를 업데이트한다. 
// 페이지 전체를 렌더링하는것은 비효율적이기떄문에 DOM내에 영역들이 나뉘어져있다.
// 나뉘어진 영역에서 변하지않은 영역은 그대로 두고 바뀐 영역만 그려준다.
// 따라서 최소한의 렌더링을 가능하게한다.

// react를 사용하는 이유
// react의 부분 렌더링
// react는 view중심 보여주는것에 집중된 라이브러리

// php ejs 이런 ssr 서버사이드렌더링 
// 서버에서 페이지를 완서잇켜서 브라우저에 응답해주는것 . 

// 클라이언트에서 페이지를 구성하는것을 하고싶다.
// 렌더링을 클라이언트 측에서 하고싶었던것.
// CSR 
// react vue 같은것

// react는 DOM의 조작을 쉽게하기위해서 사용 
// SPA을 만들기위해서 사용한다. 

// react는 url을 받으면 새로운 창을만들며 넘어가는것이아니라 
// 하나의 페이지에서 내용물을 계속 바궈서 페이지가 전환된것처럼 보여준다. 

// react를 만든 사람은 자바스크립트를 잘하는 사람들이 만든건 아니고
// 개발을 잘하는 사람들이 모여서 만든것.
// class 문법으로 되어있음. 진입장벽이 조금있음 

// DOM을 제어하던것. ??