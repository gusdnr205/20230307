// 1. 동기는 실행컨텍스트가 하나로 여러 과정을 이행할때 동시에 실행될수없고 순차적으로 실행된다. 반면 비동기처리는 실행컨텍스트가 따로따로 존재한다. js의 경우 promise 객체나 async await으로 사용가능하다.
// 2. 싱글스레드와 멀티스레드의 차이는 작업인부가 하나인것과 n개의 차이로 설명할수있으며 작업이 다른 메모리 영역에서 진행된다? java의 경우 thread 함수가 있다.
// 3. 쿠키와 세션 로컬저장소의 차이점: 쿠키는 키와 값을 읽어올수있지만 그외 만료일이나 다른 값들을 읽어올수없고 만료시간이 지나면 사라진다. 세션은 연결을 지향한다.? 로컬저장소는 마치 db처럼 값을 저장하는데 용이하고 저장소의 겂울 뷸러오는데 큰제한이없으나 너무 큰값을 넘어가게되면 문제가생긴다.
// 4. 콜백지옥이란 함수안에서 또다른 함수를 호출하는데 이 반복이 많은것이다. 결합도가 높고 오류가 나면 어디에서 문제가 터졌는지 찾기힘들다. 보통 이를해결하기위해서 promise 객체로 관리해주게된다.
// 5. node js event queue 
// 6. GET, POST 방식은 둘 모두 서버에 요청을 보내서 반응을 얻는데 차이점은 get요청은 서버에 무언가 저장히기위함이 아니고 post요청은 서버에 저장히기위함이다.get요청에는 어떤 데이터가 담기지않기떄문에 더빠르다. post요청은 데이터를 헤더에따라 여러가지 형태로 전송해줄수있따.
// 7. 자바스크립트의 배열이 실제 배열이 아니다. 
// 8. http와 https의 차이점은 s는 시큐리티로 보안정책을 뜻한다. 가장 큰차이는 헤더에 담기는 정보의 차이다
// 9. html을 그려주는 과정을 생각한다면 head에서 필요한 정보를 준비한다. 인코딩,외부라이브러리,css 등 다음 DOM을 만들고 실제화면으로 그려준다.? React의 경우 가상DOM을 만들어서 달라진부분만 그려준다.
// 10. 호이스팅은 뭔지 까먹었다. ㅎ

// dd